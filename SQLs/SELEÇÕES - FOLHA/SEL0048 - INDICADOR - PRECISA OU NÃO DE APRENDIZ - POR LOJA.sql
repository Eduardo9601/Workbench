WITH
CONTRATOS AS (
  SELECT DISTINCT CT.STATUS,
                  CT.COD_CONTRATO,
                  CT.DES_PESSOA,
                  CT.DATA_ADMISSAO,
                  CT.DATA_DEMISSAO,
                  FN.COD_FUNCAO,
                  FN.DES_FUNCAO,
                  HR.HR_BASE_MES,
                  CT.IND_DEFICIENCIA,
                  CT.SEXO,
                  ORG.COD_EMP,
                  ORG.EDICAO_EMP,
                  ORG.DES_EMP,
                  ORG.COD_UNIDADE,
                  ORG.DES_UNIDADE,
                  CASE
                      WHEN ORG.COD_TIPO = 2 THEN
                       ORG.EDICAO_ORG_3
                      WHEN ORG.COD_TIPO = 3 THEN
                       ORG.EDICAO_ORG_3
                      ELSE
                       ORG.COD_UNIDADE
                  END AS COD_FILIAL,
                  CASE
                      WHEN ORG.COD_TIPO = 2 THEN
                       ORG.NOME3
                      WHEN ORG.COD_TIPO = 3 THEN
                       ORG.NOME3
                      ELSE
                       ORG.DES_UNIDADE
                  END AS DES_FILIAL,
                  CASE
                      WHEN ORG.COD_TIPO = 2 THEN
                       ORG.EDICAO_ORG_4
                      WHEN ORG.COD_TIPO = 3 THEN
                       ORG.EDICAO_ORG_4
                      ELSE
                       ORG.COD_UNIDADE
                  END AS COD_DIVISAO,
                  CASE
                      WHEN ORG.COD_TIPO = 2 THEN
                       ORG.NOME4
                      WHEN ORG.COD_TIPO = 3 THEN
                       ORG.NOME4
                      ELSE
                       ORG.DES_UNIDADE
                  END AS DES_DIVISAO,
                  ORG.COD_REDE,
                  ORG.DES_REDE,
                  ORG.COD_TIPO,
                  ORG.DES_TIPO
    FROM V_DADOS_CONTRATO_AVT CT,
         VH_EST_ORG_CONTRATO_AVT ORG,
         VH_HIST_HORAS_COLAB_AVT HR,
         VH_CARGO_CONTRATO_AVT FN
   WHERE CT.COD_CONTRATO = ORG.COD_CONTRATO
     AND CT.COD_CONTRATO = HR.COD_CONTRATO
     AND CT.COD_CONTRATO = FN.COD_CONTRATO
     AND ((:DATA_REFERENCIA BETWEEN CT.DATA_ADMISSAO AND CT.DATA_DEMISSAO) OR
          (CT.DATA_ADMISSAO <= :DATA_REFERENCIA AND CT.DATA_DEMISSAO IS NULL))
     AND :DATA_REFERENCIA BETWEEN ORG.DATA_INI_ORG AND ORG.DATA_FIM_ORG
     AND :DATA_REFERENCIA BETWEEN FN.DATA_INI_CLH AND FN.DATA_FIM_CLH
     AND :DATA_REFERENCIA BETWEEN HR.DATA_INI_HR AND HR.DATA_FIM_HR
     AND ORG.COD_EMP = 8
     AND ORG.EDICAO_ORG_4 IS NOT NULL
   ORDER BY CT.COD_CONTRATO
),

STATUS_AFASTADOS AS (
SELECT DISTINCT
       ORG.COD_EMP,
       CT.COD_CONTRATO,
       PF.NOME_PESSOA,
       ORG.COD_UNIDADE,
       NVL(AF.COD_CAUSA_AFAST,0) AS STATUS_AFAST,
       NA.NOME_CAUSA_AFAST AS DES_AFAST,
       AF.DATA_INICIO AS DATA_INI_AFAST,
       AF.DATA_FIM AS DATA_FIM_AFAST
  FROM RHFP0306 AF,
       RHFP0300 CT,
       VH_EST_ORG_CONTRATO_AVT ORG,
       VH_CARGO_CONTRATO_AVT FN,
       RHFP0100 NA,
       PESSOA_FISICA PF
 WHERE CT.COD_CONTRATO = AF.COD_CONTRATO(+)
   AND CT.COD_CONTRATO = ORG.COD_CONTRATO(+)
   AND CT.COD_CONTRATO = FN.COD_CONTRATO(+)
   AND AF.COD_CAUSA_AFAST = NA.COD_CAUSA_AFAST(+)
   AND CT.COD_FUNC = PF.COD_PESSOA(+)
   AND ((:DATA_REFERENCIA BETWEEN CT.DATA_INICIO AND CT.DATA_FIM) OR
        (CT.DATA_INICIO <= :DATA_REFERENCIA AND CT.DATA_FIM IS NULL))
   AND :DATA_REFERENCIA BETWEEN AF.DATA_INICIO(+) AND AF.DATA_FIM(+)
   AND :DATA_REFERENCIA BETWEEN ORG.DATA_INI_ORG(+) AND ORG.DATA_FIM_ORG(+)
   AND :DATA_REFERENCIA BETWEEN FN.DATA_INI_CLH AND FN.DATA_FIM_CLH(+)
   AND ORG.COD_EMP = 8
   --AND ORG.COD_TIPO = 1
   --AND ORG.COD_UNIDADE NOT IN (014, 050, 615, 657, 7586, 7608) --657 essa ainda irá inaugurar em agosto
 ORDER BY ORG.COD_UNIDADE

),


-- 1. TOTAL LOJAS
RESULTADO_FINAL_LOJAS AS (
  SELECT A.COD_UNIDADE,
         A.DES_UNIDADE,
         A.COD_REDE,
         A.DES_REDE,
         COUNT(DISTINCT CASE
                 WHEN A.DES_FUNCAO NOT LIKE '%APRENDIZ%' AND
                      A.DES_FUNCAO NOT LIKE '%GERENTE%' THEN
                  A.COD_CONTRATO
               END) AS QTD_COLABS,
         /*COUNT(DISTINCT CASE
                          WHEN A.DES_FUNCAO LIKE '%ESTAGIARIO%' THEN
                           A.COD_CONTRATO
                        END) AS QTD_ESTAG,*/
         COUNT(DISTINCT CASE
                 WHEN A.DES_FUNCAO LIKE '%APRENDIZ%' THEN
                  A.COD_CONTRATO
               END) AS QTD_APRE,
         COUNT(DISTINCT CASE
                 WHEN A.DES_FUNCAO LIKE '%GERENTE%' THEN
                  A.COD_CONTRATO
               END) AS QTD_GERENTE,
         COUNT(DISTINCT CASE
                 WHEN S.STATUS_AFAST NOT IN (0, 7) THEN
                  A.COD_CONTRATO
               END) AS QTD_AFAST,
         /*COUNT(DISTINCT CASE WHEN A.SEXO = 'F' \*AND A.DES_FUNCAO NOT LIKE '%APRENDIZ%'*\ THEN A.COD_CONTRATO END) AS QTD_COLAB_FEM,
                  ROUND((COUNT(CASE WHEN A.SEXO = 'F' \*AND A.DES_FUNCAO NOT LIKE '%APRENDIZ%'*\ THEN 1 END) * 100.0 / COUNT(*)), 2) AS PERC_FEM,
                  COUNT(DISTINCT CASE WHEN A.SEXO = 'M' \*AND A.DES_FUNCAO NOT LIKE '%APRENDIZ%'*\ THEN A.COD_CONTRATO END) AS QTD_COLAB_MASC,
                  ROUND((COUNT(CASE WHEN A.SEXO = 'M' \*AND A.DES_FUNCAO NOT LIKE '%APRENDIZ%'*\ THEN 1 END) * 100.0 / COUNT(*)), 2) AS PERC_MASC,*/

         COUNT(DISTINCT A.COD_CONTRATO) AS TOT_COLAB,

         (SELECT LISTAGG(x.DES_AFAST, ', ') WITHIN
           GROUP(
           ORDER BY x.DES_AFAST)
            FROM (SELECT DISTINCT DES_AFAST
                    FROM STATUS_AFASTADOS
                   WHERE COD_UNIDADE = A.COD_UNIDADE
                     AND STATUS_AFAST NOT IN (0, 7) -- opcional, se quiser ignorar “0”
                  ) x) AS CAUSAS_AFAST
    FROM CONTRATOS A
    LEFT JOIN STATUS_AFASTADOS S ON A.COD_CONTRATO = S.COD_CONTRATO
   WHERE A.COD_TIPO = 1
    AND (A.COD_UNIDADE = :UNIDADE OR :UNIDADE = 0)
    AND (A.COD_REDE = TO_CHAR(:REDE) OR TO_CHAR(:REDE) = 0)
   GROUP BY A.COD_UNIDADE, A.DES_UNIDADE, A.COD_REDE, A.DES_REDE
),


-- 2. REDES SEPARADAS
RESULTADO_FINAL_REDES AS (
  SELECT 'REDES => ' AS REDES,
         A.COD_REDE,
         A.DES_REDE,
         COUNT(DISTINCT CASE
                 WHEN A.DES_FUNCAO NOT LIKE '%APRENDIZ%' AND
                      A.DES_FUNCAO NOT LIKE '%GERENTE%' THEN
                  A.COD_CONTRATO
               END) AS QTD_COLABS,
         /*COUNT(DISTINCT CASE
                 WHEN A.DES_FUNCAO LIKE '%ESTAGIARIO%' THEN
                  A.COD_CONTRATO
               END) AS QTD_ESTAG,*/
         COUNT(DISTINCT CASE
                 WHEN A.DES_FUNCAO LIKE '%APRENDIZ%' THEN
                  A.COD_CONTRATO
               END) AS QTD_APRE,
         COUNT(DISTINCT CASE
                 WHEN A.DES_FUNCAO LIKE '%GERENTE%' AND
                      S.STATUS_AFAST IN (0, 7) THEN
                  A.COD_CONTRATO
               END) AS QTD_GERENTE,
         COUNT(DISTINCT CASE
                 WHEN S.STATUS_AFAST NOT IN (0, 7) THEN
                  A.COD_CONTRATO
               END) AS QTD_AFAST,
        /* COUNT(DISTINCT CASE WHEN A.SEXO = 'F' \*AND A.DES_FUNCAO NOT LIKE '%APRENDIZ%'*\ THEN A.COD_CONTRATO END) AS QTD_COLAB_FEM,
         ROUND((COUNT(CASE WHEN A.SEXO = 'F' \*AND A.DES_FUNCAO NOT LIKE '%APRENDIZ%'*\ THEN 1 END) * 100.0 / COUNT(*)), 2) AS PERC_FEM,
         COUNT(DISTINCT CASE WHEN A.SEXO = 'M' \*AND A.DES_FUNCAO NOT LIKE '%APRENDIZ%'*\ THEN A.COD_CONTRATO END) AS QTD_COLAB_MASC,
         ROUND((COUNT(CASE WHEN A.SEXO = 'M' \*AND A.DES_FUNCAO NOT LIKE '%APRENDIZ%'*\ THEN 1 END) * 100.0 / COUNT(*)), 2) AS PERC_MASC,*/

         COUNT(DISTINCT A.COD_CONTRATO) AS TOT_COLAB
    FROM CONTRATOS A
    LEFT JOIN STATUS_AFASTADOS S ON A.COD_CONTRATO = S.COD_CONTRATO
   WHERE A.COD_TIPO = 1
    AND (A.COD_REDE = TO_CHAR(:REDE) OR TO_CHAR(:REDE) = 0)
   GROUP BY A.COD_REDE, A.DES_REDE
),


TOT_LOJAS_NUM AS (
  SELECT ROW_NUMBER() OVER (ORDER BY COD_REDE, COD_UNIDADE) AS RN, F.*
  FROM RESULTADO_FINAL_LOJAS F
),

REDES_NUM AS (
  SELECT ROW_NUMBER() OVER (ORDER BY COD_REDE) AS RN, E.*
  FROM RESULTADO_FINAL_REDES E
)


-- 3. UNIR LADO A LADO
SELECT
  CASE
      WHEN LOJAS.COD_UNIDADE IS NOT NULL AND LOJAS.DES_UNIDADE IS NOT NULL THEN LOJAS.DES_UNIDADE
      WHEN LOJAS.COD_UNIDADE IS NOT NULL THEN TO_CHAR(LOJAS.COD_UNIDADE)
      WHEN LOJAS.COD_UNIDADE IS NOT NULL THEN LOJAS.DES_UNIDADE
      ELSE NULL
  END AS UNIDADE,
  LOJAS.DES_REDE,

  LOJAS.QTD_COLABS AS QTD_COLABORADORES,
  LOJAS.QTD_GERENTE  AS QTD_GERENTE,
  LOJAS.QTD_AFAST AS QTD_AFASTADOS,
  LOJAS.CAUSAS_AFAST AS CAUSAS_AFASTAMENTOS,
  LOJAS.QTD_APRE  AS QTD_APRENDIZ,
   CASE
    WHEN LOJAS.QTD_APRE < TRUNC( LOJAS.QTD_COLABS / 7 )
      THEN 'S'
    ELSE
      'N'
  END AS "APREDIZ?",

  LOJAS.TOT_COLAB AS QTD_TOTAL_CONTRATOS,


  REDE.REDES,
  CASE
      WHEN REDE.COD_REDE IS NOT NULL AND REDE.DES_REDE IS NOT NULL THEN TO_CHAR(REDE.COD_REDE) || ' - ' || REDE.DES_REDE
      WHEN REDE.COD_REDE IS NOT NULL THEN TO_CHAR(REDE.COD_REDE)
      WHEN REDE.COD_REDE IS NOT NULL THEN REDE.DES_REDE
      ELSE NULL
  END AS REDE,
  REDE.QTD_COLABS AS QTD_COLABORADORES_RD,
  REDE.QTD_APRE  AS QTD_APRENDIZ_RD,
  REDE.QTD_GERENTE  AS QTD_GERENTES_RD,
  REDE.QTD_AFAST AS QTD_AFASTADOS_RD,
  REDE.TOT_COLAB AS QTD_TOTAL_CONTRATOS_RD,

  :DATA_REFERENCIA AS REFERENCIA

FROM TOT_LOJAS_NUM LOJAS
FULL OUTER JOIN REDES_NUM REDE ON LOJAS.RN = REDE.RN
WHERE LOJAS.QTD_COLABS <> 0
ORDER BY NVL(LOJAS.RN, REDE.RN)

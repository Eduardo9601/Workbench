WITH
/* BLOCO PARA ENTRADA DE PARÂMETROS (DINÂMICO POR PERÍODO) */
PARAMS AS (

/*VERSÃO PARA USAR NO PL/SQL*/
/*SELECT TO_DATE('&DATA_INICIO', 'DD/MM/YYYY') AS D_INI,
       TO_DATE('&DATA_FIM', 'DD/MM/YYYY') AS D_FIM
  FROM DUAL */

  SELECT :REFERENCIA AS REFERENCIA
         /*TO_DATE('&REFERENCIA', 'DD/MM/YYYY') AS REFERENCIA*/
  FROM DUAL

/*VERSÃO PARA USAR NO SAPINHO E DENTRO DA FOLHA*/
/*SELECT :DATA_INICIO AS D_INI, :DATA_FIM AS D_FIM FROM DUAL*/

),

/*==== MEPEA DOADOS DO COLABORADOR ====*/

CONTRATOS AS (
SELECT DISTINCT CT.STATUS,
                CT.COD_CONTRATO,
                CT.DES_PESSOA,
                CT.DATA_NASCIMENTO,
                CT.DATA_ADMISSAO,
                CT.DATA_DEMISSAO,
                FN.COD_FUNCAO,
                FN.DES_FUNCAO,
                FN.DATA_INI_CLH,
                FN.DATA_FIM_CLH,
                HR.HR_BASE_MES,
                HR.DATA_INI_HR,
                HR.DATA_FIM_HR,
                CT.IND_DEFICIENCIA,
                CT.SEXO,
                ORG.COD_EMP,
                ORG.EDICAO_EMP,
                ORG.DES_EMP,
                ORG.COD_ORGANOGRAMA,
                ORG.COD_UNIDADE,
                ORG.DES_UNIDADE,
                ORG.DATA_INI_ORG,
                ORG.DATA_FIM_ORG,
                CASE
                  WHEN ORG.COD_TIPO = 2 THEN
                   ORG.EDICAO_ORG_3
                  WHEN ORG.COD_TIPO = 3 THEN
                   ORG.EDICAO_ORG_3
                  ELSE
                   ORG.COD_UNIDADE
                END AS COD_FILIAL,
                CASE
                  WHEN ORG.COD_TIPO = 2 THEN
                   ORG.NOME3
                  WHEN ORG.COD_TIPO = 3 THEN
                   ORG.NOME3
                  ELSE
                   ORG.DES_UNIDADE
                END AS DES_FILIAL,
                CASE
                  WHEN ORG.COD_TIPO = 2 THEN
                   ORG.EDICAO_ORG_4
                  WHEN ORG.COD_TIPO = 3 THEN
                   ORG.EDICAO_ORG_4
                  ELSE
                   ORG.COD_UNIDADE
                END AS COD_DIVISAO,
                CASE
                  WHEN ORG.COD_TIPO = 2 THEN
                   ORG.NOME4
                  WHEN ORG.COD_TIPO = 3 THEN
                   ORG.NOME4
                  ELSE
                   ORG.DES_UNIDADE
                END AS DES_DIVISAO,
                ORG.COD_REDE,
                ORG.DES_REDE,
                ORG.COD_TIPO,
                ORG.DES_TIPO
  FROM V_DADOS_CONTRATO_AVT CT
  JOIN VH_EST_ORG_CONTRATO_AVT ORG ON CT.COD_CONTRATO = ORG.COD_CONTRATO
  JOIN VH_HIST_HORAS_COLAB_AVT HR ON CT.COD_CONTRATO = HR.COD_CONTRATO
  JOIN VH_CARGO_CONTRATO_AVT FN ON CT.COD_CONTRATO = FN.COD_CONTRATO
 CROSS JOIN PARAMS P
 WHERE P.REFERENCIA BETWEEN CT.DATA_ADMISSAO AND NVL(CT.DATA_DEMISSAO, DATE '2999-12-31')
 /*CT.DATA_ADMISSAO <= M.DTA_FIM
 AND NVL(CT.DATA_DEMISSAO, DATE '2999-12-31') >= M.DTA_INI*/
/*VERSÕES ALTERNATIVAS DE FILTRAR POR DATA
(('31/03/2025' BETWEEN CT.DATA_ADMISSAO AND CT.DATA_DEMISSAO) OR
        (CT.DATA_ADMISSAO <= '31/03/2025' AND CT.DATA_DEMISSAO IS NULL))
AND (CT.DATA_ADMISSAO <= TO_DATE('31/07/2025','DD/MM/YYYY'))
   AND (CT.DATA_DEMISSAO IS NULL OR CT.DATA_DEMISSAO >= TO_DATE('01/07/2025','DD/MM/YYYY'))
AND (CT.DATA_DEMISSAO IS NULL OR
       CT.DATA_DEMISSAO >= '01/07/2025')*/

 AND P.REFERENCIA BETWEEN ORG.DATA_INI_ORG AND ORG.DATA_FIM_ORG
 AND P.REFERENCIA BETWEEN FN.DATA_INI_CLH AND FN.DATA_FIM_CLH
 AND P.REFERENCIA BETWEEN HR.DATA_INI_HR AND HR.DATA_FIM_HR
 AND ORG.COD_EMP = 8
 --AND ORG.COD_TIPO = 1
 AND ORG.EDICAO_ORG_4 IS NOT NULL
--AND ORG.COD_UNIDADE NOT IN (014, 050, 615, 7586, 7608)
--AND ORG.COD_UNIDADE = 004
 ORDER BY CT.COD_CONTRATO
),

/*==== MAPEIA TODOS OS COLABORADORES MAS TAMBÉM COM INFO DE AFASTAMENTO ====*/
STATUS_AFASTADOS AS (
SELECT DISTINCT ORG.COD_EMP,
                CT.COD_CONTRATO,
                ORG.COD_ORGANOGRAMA,
                ORG.COD_UNIDADE,
                NVL(AF.COD_CAUSA_AFAST, 0) AS STATUS_AFAST,
                DES.NOME_CAUSA_AFAST AS DES_AFAST,
                AF.DATA_INICIO AS DATA_INI_AFAST,
                AF.DATA_FIM AS DATA_FIM_AFAST
  FROM RHFP0306                AF,
       RHFP0300                CT,
       VH_EST_ORG_CONTRATO_AVT ORG,
       VH_CARGO_CONTRATO_AVT   FN,
       RHFP0100                DES,
       PARAMS                  P
 WHERE CT.COD_CONTRATO = AF.COD_CONTRATO(+)
   AND CT.COD_CONTRATO = ORG.COD_CONTRATO(+)
   AND CT.COD_CONTRATO = FN.COD_CONTRATO(+)
   AND AF.COD_CAUSA_AFAST = DES.COD_CAUSA_AFAST(+)
   AND P.REFERENCIA BETWEEN CT.DATA_INICIO AND NVL(CT.DATA_FIM, DATE '2999-12-31')
   /*AND CT.DATA_INICIO <= M.DTA_FIM
   AND NVL(CT.DATA_FIM, DATE '2999-12-31') >= M.DTA_INI*/
      /* AND (CT.DATA_INICIO <= '31/03/2025')
         AND (CT.DATA_INICIO IS NULL OR CT.DATA_FIM >= '01/01/2025')*/
   AND P.REFERENCIA BETWEEN AF.DATA_INICIO(+) AND AF.DATA_FIM(+)
   AND P.REFERENCIA BETWEEN ORG.DATA_INI_ORG(+) AND ORG.DATA_FIM_ORG(+)
   AND P.REFERENCIA BETWEEN AF.DATA_INICIO AND NVL(AF.DATA_FIM, DATE '2999-12-31')
   AND ORG.COD_EMP = 8
   --AND ORG.COD_TIPO = 1
--AND ORG.COD_UNIDADE NOT IN (014, 050, 615, 7586, 7608)

),

/*==== MAPEIA OS PERÍODOS AQUISITIVOS DO COLABORADOR ====*/

/*PERIODO_AQUISITIVO AS ( --ORIGINAL
SELECT A.COD_CONTRATO,
       A.DATA_INICIO_PERIODO,
       A.DATA_FIM_PERIODO,
       A.DATA_ENCERRAMENTO,
       A.DIAS_PERIODO,
       A.SALDO,
       TRUNC(P.REFERENCIA) AS HOJE,
       CASE
           WHEN A.DATA_ENCERRAMENTO IS NOT NULL THEN 'ENCERRADO'
           WHEN TRUNC(P.REFERENCIA) > A.DATA_FIM_PERIODO THEN 'VENCIDO'
           ELSE 'ABERTO'
       END AS STATUS_PERIODO,

       CASE
           WHEN A.DATA_ENCERRAMENTO IS NOT NULL THEN 0
           ELSE GREATEST(TRUNC(P.REFERENCIA) - TRUNC(A.DATA_FIM_PERIODO), 0)
       END AS DIAS_EM_ATRASO,

       \* Próximo fim já truncado *\
       MIN(CASE
               WHEN TRUNC(A.DATA_FIM_PERIODO) >= TRUNC(P.REFERENCIA)
               THEN TRUNC(A.DATA_FIM_PERIODO)
           END) OVER (PARTITION BY COD_CONTRATO) AS PROXIMO_FIM,

       \* Dias que faltam (exclusivo) *\
       CASE
           WHEN A.DATA_FIM_PERIODO =
             MIN(CASE WHEN TRUNC(A.DATA_FIM_PERIODO) >= TRUNC(P.REFERENCIA)
                      THEN TRUNC(A.DATA_FIM_PERIODO) END)
               OVER (PARTITION BY A.COD_CONTRATO)
           THEN
             MIN(CASE WHEN TRUNC(A.DATA_FIM_PERIODO) >= TRUNC(P.REFERENCIA)
                      THEN TRUNC(A.DATA_FIM_PERIODO) END)
               OVER (PARTITION BY A.COD_CONTRATO)
             - TRUNC(P.REFERENCIA)
             -- + 1   -- usar para “incluir hoje”
        END AS DIAS_FALTAM_PROXIMO

  FROM RHFP0325 A
  CROSS JOIN PARAMS P
 WHERE A.DATA_ENCERRAMENTO IS NULL
 AND A.COD_CONTRATO = 388070
 ORDER BY A.DATA_FIM_PERIODO


),*/

PERIODO_BASE AS (
  SELECT A.COD_CONTRATO,
         A.DATA_INICIO_PERIODO,
         A.DATA_FIM_PERIODO,
         A.SALDO,
         TRUNC(P.REFERENCIA) AS DATA_REF,
         CASE
           WHEN TRUNC(P.REFERENCIA) > A.DATA_FIM_PERIODO THEN
            'VENCIDO'
           ELSE
            'ABERTO'
         END AS STATUS_PERIODO,
         /* atraso só faz sentido p/ vencido */
         GREATEST(TRUNC(P.REFERENCIA) - TRUNC(A.DATA_FIM_PERIODO), 0) AS DIAS_ATRASO
    FROM RHFP0325 A
   CROSS JOIN PARAMS P
   WHERE A.DATA_ENCERRAMENTO IS NULL
     AND A.COD_CONTRATO IN (SELECT COD_CONTRATO FROM CONTRATOS)
),

/* escolha do vencido “prioritário”: o mais antigo pendente */
VENCIDO_UNICO AS (
  SELECT *
    FROM (SELECT b.*,
                 ROW_NUMBER() OVER(PARTITION BY b.COD_CONTRATO ORDER BY b.DATA_FIM_PERIODO ASC -- mais antigo
                 ) rn
            FROM PERIODO_BASE b
           WHERE b.STATUS_PERIODO = 'VENCIDO')
   WHERE rn = 1
),

/* escolha do aberto “prioritário”: o próximo a vencer */
ABERTO_UNICO AS (
  SELECT *
    FROM (SELECT b.*,
                 ROW_NUMBER() OVER(PARTITION BY b.COD_CONTRATO ORDER BY b.DATA_FIM_PERIODO ASC -- mais próximo
                 ) rn
            FROM PERIODO_BASE b
           WHERE b.STATUS_PERIODO = 'ABERTO')
   WHERE rn = 1
),

/* 1 linha por contrato com as duas visões em colunas */
PERIODO AS (
  SELECT COALESCE(v.COD_CONTRATO, a.COD_CONTRATO) AS COD_CONTRATO,

         /* vencido */
         v.DATA_INICIO_PERIODO AS VENC_DATA_INICIO,
         v.DATA_FIM_PERIODO    AS VENC_DATA_FIM,
         v.SALDO               AS VENC_SALDO,
         v.DIAS_ATRASO         AS VENC_DIAS_ATRASO,
         v.STATUS_PERIODO      AS VENC_STATUS_PERIODO,

         /* aberto (próximo) */
         a.DATA_INICIO_PERIODO AS ABER_DATA_INICIO,
         a.DATA_FIM_PERIODO AS ABER_DATA_FIM,
         a.SALDO AS ABER_SALDO,
         CASE
           WHEN a.DATA_FIM_PERIODO IS NOT NULL THEN
            TRUNC(a.DATA_FIM_PERIODO) - TRUNC(a.DATA_REF)
         END AS ABER_DIAS_FALTAM,
         A.STATUS_PERIODO      AS ABER_STATUS_PERIODO
    FROM VENCIDO_UNICO v
    FULL OUTER JOIN ABERTO_UNICO a ON a.COD_CONTRATO = v.COD_CONTRATO
),

/*==== SÓ UM INFO DE ABONO INDIVIDUAL - CASO PRECISE O MESMO JÁ CONTÉM NA TBL RHFP0327 ====*/
ABONO AS (
SELECT COD_CONTRATO,
       DATA_PREVISTA_FERIAS AS DATA_FERIAS,
       DATA_INICIO_PERIODO,
       DIAS_FERIAS,
       DIAS_ABONO
  FROM RHFP0328
 --WHERE COD_CONTRATO = 388070

),

/*==== MAPEIA A ÚLTIMA FÉRIAS DO COLABORADOR E A PRÓXIMA PROGRAMADA(SE HOUVER) ====*/

FERIAS AS (
SELECT NVL(U.COD_CONTRATO, P.COD_CONTRATO) AS COD_CONTRATO,

       /* ÚLTIMA GOZADA */
       U.DATA_FERIAS         AS ULT_DATA_FERIAS,
       U.DATA_RETORNO        AS ULT_DATA_RETORNO,
       U.DATA_PAGAMENTO      AS ULT_DATA_PAGAMENTO,
       U.DIAS_FERIAS_CONCED  AS ULT_DIAS_CONCED,
       U.DIAS_FERIAS_GOZADOS AS ULT_DIAS_REALIZADO,
       U.DIAS_ABONO_CONCED   AS ULT_ABONO_CONCED,
       U.DIAS_ABONO_GOZADOS  AS ULT_ABONO_REALIZADO,
       U.DATA_ABONO          AS ULT_DATA_ABONO,
       U.DATA_FIM_ABONO      AS ULT_DATA_FIM_ABONO,
       U.TIPO_FERIAS_ULT     AS ULT_TIPO_FERIAS,

       /* PRÓXIMA PROGRAMADA */
       P.DATA_FERIAS         AS PROX_DATA_FERIAS,
       P.DATA_RETORNO        AS PROX_DATA_RETORNO,
       P.DATA_PAGAMENTO      AS PROX_DATA_PAGAMENTO,
       P.DIAS_FERIAS_CONCED  AS PROX_DIAS_CONCED,
       P.DIAS_FERIAS_GOZADOS AS PROX_DIAS_REALIZADO,
       P.DIAS_ABONO_CONCED   AS PROX_ABONO_CONCED,
       P.DIAS_ABONO_GOZADOS  AS PROX_ABONO_REALIZADO,
       P.DATA_ABONO          AS PROX_DATA_ABONO,
       P.DATA_FIM_ABONO      AS PROX_DATA_FIM_ABONO,
       P.TIPO_FERIAS_PROX    AS PROX_TIPO_FERIAS
  FROM (SELECT R.*
          FROM (SELECT R.*,
                       CASE
                           WHEN R.TIPO_FERIAS = 'I' THEN
                            'INDIVIDUAL'
                           WHEN R.TIPO_FERIAS = 'C' THEN
                            'COLETIVA'
                           WHEN R.TIPO_FERIAS = 'R' THEN
                            'RESCISAO'
                           ELSE
                            NULL
                       END AS TIPO_FERIAS_ULT,
                       ROW_NUMBER() OVER(PARTITION BY R.COD_CONTRATO ORDER BY NVL(R.DATA_RETORNO, R.DATA_FERIAS) DESC) RN
                  FROM RHFP0327 R
                  CROSS JOIN PARAMS P
                 WHERE TRUNC(NVL(R.DATA_RETORNO, R.DATA_FERIAS)) <= TRUNC(P.REFERENCIA)
                  /* AND R.COD_CONTRATO = 391785*/) R
         WHERE RN = 1) U
  FULL OUTER JOIN (SELECT R.*
                     FROM (SELECT R.*,
                                  CASE
                                      WHEN R.TIPO_FERIAS = 'I' THEN
                                       'INDIVIDUAL'
                                      WHEN R.TIPO_FERIAS = 'C' THEN
                                       'COLETIVA'
                                      WHEN R.TIPO_FERIAS = 'R' THEN
                                       'RESCISAO'
                                      ELSE
                                       NULL
                                  END AS TIPO_FERIAS_PROX,
                                  ROW_NUMBER() OVER(PARTITION BY R.COD_CONTRATO ORDER BY R.DATA_FERIAS ASC) RN
                             FROM RHFP0327 R
                             CROSS JOIN PARAMS P
                            WHERE TRUNC(R.DATA_FERIAS) > TRUNC(P.REFERENCIA)
                              /*AND R.COD_CONTRATO = 391785*/
                           -- AND R.DATA_PAGAMENTO IS NULL      -- (OPCIONAL, SE FOR A SUA REGRA)
                           ) R
                    WHERE RN = 1) P ON P.COD_CONTRATO = U.COD_CONTRATO


),

 /* Férias em vigor na data de referência (1 linha por contrato) */
FERIAS_ATUAIS AS (
SELECT *
  FROM (SELECT R.COD_CONTRATO,
               'S' AS EM_FERIAS,
               R.DATA_FERIAS AS FERIAS_INICIO_ATUAL,
               R.DATA_RETORNO AS FERIAS_FIM_ATUAL,
               R.DIAS_FERIAS_CONCED AS FERIAS_DIAS_CONCED_ATUAL,
               R.DIAS_FERIAS_GOZADOS AS FERIAS_DIAS_GOZADOS_ATUAL,
               CASE
                   WHEN R.TIPO_FERIAS = 'I' THEN
                    'INDIVIDUAL'
                   WHEN R.TIPO_FERIAS = 'C' THEN
                    'COLETIVA'
                   WHEN R.TIPO_FERIAS = 'R' THEN
                    'RESCISAO'
                   ELSE
                    NULL
               END AS TIPO_FERIAS_ATU,

               /* CAMPOS DE ABONO DO PERÍODO VIGENTE */
               R.DIAS_ABONO_CONCED  AS ABONO_DIAS_CONCED_ATUAL,
               R.DIAS_ABONO_GOZADOS AS ABONO_DIAS_GOZADOS_ATUAL,
               R.DATA_ABONO         AS ABONO_DATA_INICIO_ATUAL,
               R.DATA_FIM_ABONO     AS ABONO_DATA_FIM_ATUAL,
               /* DENTRO DO SELECT DO FERIAS_ATUAIS */
               R.DIAS_FERIAS_CONCED AS FERIAS_DIAS_PLANEJADOS_ATUAL,

               /* QUANTOS DIAS JÁ TIROU (ATÉ A DATA DE REFERÊNCIA)  */
               CASE
                  WHEN R.DIAS_FERIAS_GOZADOS IS NOT NULL THEN
                   R.DIAS_FERIAS_GOZADOS -- VALOR JÁ CONSOLIDADO
                  WHEN R.DATA_RETORNO IS NOT NULL THEN
                   TRUNC(R.DATA_RETORNO) - TRUNC(R.DATA_FERIAS) -- PERÍODO CONCLUÍDO
                  ELSE
                   (TRUNC(P.REFERENCIA) - TRUNC(R.DATA_FERIAS)) + 1 -- FÉRIAS EM CURSO (INCLUSIVO)
                END AS FERIAS_DIAS_TIRADOS_ATUAL,

               /* DERIVADOS ÚTEIS */
               CASE
                 WHEN NVL(R.DIAS_ABONO_CONCED, 0) > 0 OR
                      NVL(R.DIAS_ABONO_GOZADOS, 0) > 0 OR
                      R.DATA_ABONO IS NOT NULL THEN
                  'S'
                 ELSE
                  'N'
               END AS TEM_ABONO_NO_PERIODO_ATUAL,

               TRUNC(NVL(R.DATA_RETORNO, DATE '2999-12-31')) -
               TRUNC(P.REFERENCIA) AS DIAS_AUSENCIA_RESTANTES,

               ROW_NUMBER() OVER(PARTITION BY R.COD_CONTRATO ORDER BY R.DATA_FERIAS DESC, NVL(R.DATA_RETORNO, DATE '2999-12-31') DESC) AS RN
          FROM RHFP0327 R
         CROSS JOIN PARAMS P
         WHERE TRUNC(P.REFERENCIA) >= TRUNC(R.DATA_FERIAS)
           AND TRUNC(P.REFERENCIA) <
               TRUNC(NVL(R.DATA_RETORNO, DATE '2999-12-31'))
           AND R.COD_CONTRATO IN (SELECT COD_CONTRATO FROM CONTRATOS))
 WHERE RN = 1


 /*alternativo*/
  /*SELECT AF.COD_CONTRATO,
         'S' AS EM_FERIAS,
         AF.DATA_INICIO AS FERIAS_INICIO_ATUAL,
         AF.DATA_FIM AS FERIAS_FIM_ATUAL,
         \* dias que ainda faltam até o fim das férias, exclusivo de hoje *\
         TRUNC(NVL(AF.DATA_FIM, DATE '2999-12-31')) - TRUNC(P.REFERENCIA) AS DIAS_FERIAS_RESTANTES
    FROM RHFP0306 AF
   CROSS JOIN PARAMS P
   WHERE AF.COD_CAUSA_AFAST = 7
     AND TRUNC(P.REFERENCIA) BETWEEN TRUNC(AF.DATA_INICIO) AND
         TRUNC(NVL(AF.DATA_FIM, DATE '2999-12-31')) - 1
     AND AF.COD_CONTRATO IN (SELECT COD_CONTRATO FROM CONTRATOS)  */

)

SELECT CT.COD_CONTRATO,
       CT.DES_PESSOA,
       CT.DES_UNIDADE,
       CT.DATA_ADMISSAO,
       CT.DATA_DEMISSAO,
       CT.DES_FUNCAO,

       /* VENCIDO */
       CASE
           WHEN PE.VENC_DATA_INICIO IS NOT NULL THEN
            PE.VENC_DATA_INICIO || ' - ' || PE.VENC_DATA_FIM
           ELSE
            NULL
       END AS VENC_PERIODO_AQUISITIVO,
       PE.VENC_SALDO,
       PE.VENC_DIAS_ATRASO,
       PE.VENC_STATUS_PERIODO,

       /* ABERTO (PRÓXIMO) */
       CASE
           WHEN PE.ABER_DATA_INICIO IS NOT NULL THEN
            PE.ABER_DATA_INICIO || ' - ' || PE.ABER_DATA_FIM
           ELSE
            NULL
       END AS ABER_PERIODO_AQUISITIVO,
       PE.ABER_SALDO,
       PE.ABER_DIAS_FALTAM,
       PE.ABER_STATUS_PERIODO,

       /* ÚLTIMA EFETUADA */
       CASE
            WHEN FE.ULT_DATA_FERIAS IS NOT NULL THEN
             'De ' || FE.ULT_DATA_FERIAS || ' até ' || FE.ULT_DATA_RETORNO
            ELSE
             NULL
       END AS ULTIMAS_FERIAS,
       CASE
           WHEN FE.ULT_DATA_PAGAMENTO IS NOT NULL THEN
            FE.ULT_DATA_PAGAMENTO
           ELSE
            NULL
       END AS PAGAMENTO_ULT_FERIAS,
       FE.ULT_DIAS_CONCED,
       FE.ULT_DIAS_REALIZADO,
       FE.ULT_ABONO_CONCED,
       FE.ULT_ABONO_REALIZADO,
       CASE
            WHEN FE.ULT_DATA_ABONO IS NOT NULL THEN
             'De ' || FE.ULT_DATA_ABONO || ' até ' || FE.ULT_DATA_FIM_ABONO
            ELSE
             NULL
       END AS ULTIMO_ABONO_FERIAS,
       FE.ULT_TIPO_FERIAS,

       /* PRÓXIMA PROGRAMADA */
       CASE
            WHEN FE.PROX_DATA_FERIAS IS NOT NULL THEN
             'De ' || FE.PROX_DATA_FERIAS || ' até ' || FE.PROX_DATA_RETORNO
            ELSE
             NULL
       END AS PROXIMAS_FERIAS,
       CASE
           WHEN FE.PROX_DATA_PAGAMENTO IS NOT NULL THEN
            FE.PROX_DATA_PAGAMENTO
           ELSE
            NULL
       END AS PROXIMO_PAGTO_FERIAS,
       FE.PROX_DIAS_CONCED,
       FE.PROX_DIAS_REALIZADO,
       FE.PROX_ABONO_CONCED,
       FE.PROX_ABONO_REALIZADO,
       CASE
            WHEN FE.PROX_DATA_ABONO IS NOT NULL THEN
             'De ' || FE.PROX_DATA_ABONO || ' até ' || FE.PROX_DATA_FIM_ABONO
            ELSE
             NULL
       END AS PROX_ABONO_FERIAS,
       FE.PROX_TIPO_FERIAS,

       /* EM FÉRIAS NA REFERÊNCIA */
       NVL(FA.EM_FERIAS, 'N') AS EM_FERIAS_AGORA,
       CASE
            WHEN FA.FERIAS_INICIO_ATUAL IS NOT NULL THEN
             'De ' || FA.FERIAS_INICIO_ATUAL || ' até ' || FA.FERIAS_FIM_ATUAL
            ELSE
             NULL
       END AS DTA_EM_FERIAS,
       FA.FERIAS_DIAS_PLANEJADOS_ATUAL,
       FA.FERIAS_DIAS_TIRADOS_ATUAL,
       FA.TIPO_FERIAS_ATU,
       FA.DIAS_AUSENCIA_RESTANTES,

       /* Abono do período vigente */
       FA.TEM_ABONO_NO_PERIODO_ATUAL,
       FA.ABONO_DIAS_CONCED_ATUAL,
       FA.ABONO_DIAS_GOZADOS_ATUAL,
       CASE
            WHEN FA.ABONO_DATA_INICIO_ATUAL IS NOT NULL THEN
             'De ' || FA.ABONO_DATA_INICIO_ATUAL || ' até ' || FA.ABONO_DATA_FIM_ATUAL
            ELSE
             NULL
       END AS ABONO_ATUAL_FERIAS,

       CASE
           WHEN ST.STATUS_AFAST IS NOT NULL THEN
            'S'
           ELSE
            'N'
       END AS STATUS_AFAST,
       ST.DES_AFAST,
       'Referência: ' || P.REFERENCIA || ' | ' || 'Unidade: ' || :UNIDADE || ' | ' || 'Rede: ' || :REDE AS PARAMETROS
  FROM CONTRATOS CT
  LEFT JOIN PERIODO PE ON CT.COD_CONTRATO = PE.COD_CONTRATO
  LEFT JOIN FERIAS FE ON CT.COD_CONTRATO = FE.COD_CONTRATO
  LEFT JOIN FERIAS_ATUAIS FA ON CT.COD_CONTRATO = FA.COD_CONTRATO
  LEFT JOIN STATUS_AFASTADOS ST ON CT.COD_CONTRATO = ST.COD_CONTRATO
  CROSS JOIN PARAMS P
  WHERE (CT.COD_TIPO = :TIPO OR :TIPO = 0)
    AND (CT.COD_REDE = :REDE OR :REDE = 0)
    AND (CT.COD_UNIDADE = :UNIDADE OR :UNIDADE = 0)
  --CT.COD_CONTRATO = 391785
  ORDER BY CT.DES_UNIDADE, CT.COD_CONTRATO


/*AJUSTANDO - REFATORAÇÃO SQL RELATÓRIO RESUMO FOLHA*/

WITH
CONTRATOS AS (
SELECT DISTINCT CT.STATUS,
                CT.COD_CONTRATO,
                CT.DES_PESSOA,
                CT.DATA_NASCIMENTO,
                CT.DATA_ADMISSAO,
                CT.DATA_DEMISSAO,
                CT.COD_VINCULO_EMPREG,
                FN.COD_FUNCAO,
                FN.DES_FUNCAO,
                FN.DATA_INI_CLH,
                FN.DATA_FIM_CLH,
                HR.HR_BASE_MES,
                HR.DATA_INI_HR,
                HR.DATA_FIM_HR,
                CT.IND_DEFICIENCIA,
                CT.SEXO,
                ORG.COD_EMP,
                ORG.EDICAO_EMP,
                ORG.DES_EMP,
                ORG.COD_ORGANOGRAMA,
                ORG.COD_UNIDADE,
                ORG.DES_UNIDADE,
                ORG.DATA_INI_ORG,
                ORG.DATA_FIM_ORG,
                CASE
                  WHEN ORG.COD_TIPO = 2 THEN
                   ORG.EDICAO_ORG_3
                  WHEN ORG.COD_TIPO = 3 THEN
                   ORG.EDICAO_ORG_3
                  ELSE
                   ORG.COD_UNIDADE
                END AS COD_FILIAL,
                CASE
                  WHEN ORG.COD_TIPO = 2 THEN
                   ORG.NOME3
                  WHEN ORG.COD_TIPO = 3 THEN
                   ORG.NOME3
                  ELSE
                   ORG.DES_UNIDADE
                END AS DES_FILIAL,
                CASE
                  WHEN ORG.COD_TIPO = 2 THEN
                   ORG.EDICAO_ORG_4
                  WHEN ORG.COD_TIPO = 3 THEN
                   ORG.EDICAO_ORG_4
                  ELSE
                   ORG.COD_UNIDADE
                END AS COD_DIVISAO,
                CASE
                  WHEN ORG.COD_TIPO = 2 THEN
                   ORG.NOME4
                  WHEN ORG.COD_TIPO = 3 THEN
                   ORG.NOME4
                  ELSE
                   ORG.DES_UNIDADE
                END AS DES_DIVISAO,
                ORG.COD_REDE,
                ORG.DES_REDE,
                ORG.COD_TIPO,
                ORG.DES_TIPO
 FROM V_DADOS_CONTRATO_AVT    CT,
       VH_EST_ORG_CONTRATO_AVT ORG,
       VH_HIST_HORAS_COLAB_AVT HR,
       VH_CARGO_CONTRATO_AVT   FN
 WHERE CT.COD_CONTRATO = ORG.COD_CONTRATO
   AND CT.COD_CONTRATO = HR.COD_CONTRATO
   AND CT.COD_CONTRATO = FN.COD_CONTRATO
   AND (CT.DATA_DEMISSAO IS NULL OR
       CT.DATA_DEMISSAO >= TO_DATE('01/06/2025', 'DD/MM/YYYY'))
   /*AND (('30/06/2025' BETWEEN CT.DATA_INICIO AND CT.DATA_FIM) OR
        (CT.DATA_INICIO <= '30/06/2025' AND CT.DATA_FIM IS NULL))*/      
   AND '30/06/2025' BETWEEN ORG.DATA_INI_ORG AND ORG.DATA_FIM_ORG
   AND '30/06/2025' BETWEEN FN.DATA_INI_CLH AND FN.DATA_FIM_CLH
   AND '30/06/2025' BETWEEN HR.DATA_INI_HR AND HR.DATA_FIM_HR
   AND ORG.COD_EMP = 8
   AND ORG.COD_TIPO = 1
   AND ORG.EDICAO_ORG_4 IS NOT NULL
   AND ORG.COD_UNIDADE NOT IN (014, 050, 615, 657, 7586, 7608)
   --AND ORG.COD_UNIDADE = 004
 ORDER BY CT.COD_CONTRATO
),

STATUS_AFASTADOS AS (
SELECT DISTINCT
       ORG.COD_EMP,
       CT.COD_CONTRATO,
       ORG.COD_ORGANOGRAMA,
       ORG.COD_UNIDADE,
       NVL(AF.COD_CAUSA_AFAST,0) AS STATUS_AFAST,
       AF.DATA_INICIO AS DATA_INI_AFAST,
       AF.DATA_FIM AS DATA_FIM_AFAST
  FROM RHFP0306 AF,
       RHFP0300 CT,
       VH_EST_ORG_CONTRATO_AVT ORG,
       VH_CARGO_CONTRATO_AVT FN
 WHERE CT.COD_CONTRATO = AF.COD_CONTRATO(+)
   AND CT.COD_CONTRATO = ORG.COD_CONTRATO(+)
   AND CT.COD_CONTRATO = FN.COD_CONTRATO(+)
   AND (('30/06/2025' BETWEEN CT.DATA_INICIO AND CT.DATA_FIM) OR
        (CT.DATA_INICIO <= '30/06/2025' AND CT.DATA_FIM IS NULL))
   AND '30/06/2025' BETWEEN AF.DATA_INICIO(+) AND AF.DATA_FIM(+)
   AND '30/06/2025' BETWEEN ORG.DATA_INI_ORG(+) AND ORG.DATA_FIM_ORG(+)
   AND '30/06/2025' BETWEEN FN.DATA_INI_CLH AND FN.DATA_FIM_CLH(+)
   AND ORG.COD_EMP = 8
   AND ORG.COD_UNIDADE NOT IN (014, 050, 615, 657, 7586, 7608)
   AND ORG.COD_TIPO = 1
),


MONTHS AS (
--versão para usar no PL/SQL
/*SELECT ADD_MONTHS(TO_DATE('01/06/2025', 'DD/MM/YYYY'), LEVEL - 1) AS MONTH_START,
       LAST_DAY(ADD_MONTHS(TO_DATE('01/06/2025', 'DD/MM/YYYY'), LEVEL - 1)) AS MONTH_END
  FROM DUAL
CONNECT BY LEVEL <=
           MONTHS_BETWEEN(TO_DATE('30/06/2025', 'DD/MM/YYYY'),
                          TO_DATE('01/06/2025', 'DD/MM/YYYY')) + 1*/


SELECT ADD_MONTHS(TO_DATE('01/06/2025', 'DD/MM/YYYY'), LEVEL - 1) AS MONTH_START,
       LAST_DAY(ADD_MONTHS(TO_DATE('01/06/2025', 'DD/MM/YYYY'), LEVEL - 1)) AS MONTH_END,
       
       TO_CHAR(ADD_MONTHS(TO_DATE('01/06/2025', 'DD/MM/YYYY'), LEVEL - 1),
               'MM/YYYY') AS MES_ANO,
       INITCAP(TRIM(TO_CHAR(ADD_MONTHS(TO_DATE('01/06/2025', 'DD/MM/YYYY'),
                                       LEVEL - 1),
                            'Month'))) || '/' ||
       TO_CHAR(ADD_MONTHS(TO_DATE('01/06/2025', 'DD/MM/YYYY'), LEVEL - 1),
               'YYYY') AS MES_ANO_EXTENSO
  FROM DUAL
CONNECT BY LEVEL <=
           MONTHS_BETWEEN(TO_DATE('30/06/2025', 'DD/MM/YYYY'),
                          TO_DATE('01/06/2025', 'DD/MM/YYYY')) + 1


/*VERSÃO PARA INFORMAR AS DATAS*/
/*SELECT
  ADD_MONTHS(:DATA_INICIO, LEVEL - 1) AS MONTH_START,
  LAST_DAY(ADD_MONTHS(:DATA_INICIO, LEVEL - 1)) AS MONTH_END,
  TO_CHAR(ADD_MONTHS(:DATA_INICIO, LEVEL - 1), 'MM/YYYY') AS MES_ANO,
  INITCAP(TRIM(TO_CHAR(ADD_MONTHS(:DATA_INICIO, LEVEL - 1), 'Month'))) || '/' ||
  TO_CHAR(ADD_MONTHS(:DATA_INICIO, LEVEL - 1), 'YYYY') AS MES_ANO_EXTENSO
FROM DUAL
CONNECT BY LEVEL <= MONTHS_BETWEEN(:DATA_FIM, :DATA_INICIO) + 1*/

),

Base_V AS (
  SELECT
    CT.COD_UNIDADE AS COD_UNIDADE_REP,
    CT.COD_UNIDADE,
    CT.DES_UNIDADE,
    M.MONTH_START || ' - ' || M.MONTH_END AS REFERENCIA,
    A.COD_VD,
    B.NOME_VD,
    SUM(NVL(A.VALOR_VD, 0)) AS TOTAL_MES,
    ROW_NUMBER() OVER(PARTITION BY TO_NUMBER(CT.COD_UNIDADE) ORDER BY A.COD_VD) AS RN
  FROM
    RHFP1006 A
    INNER JOIN RHFP1000 B ON A.COD_VD = B.COD_VD
    INNER JOIN CONTRATOS CT ON A.COD_CONTRATO = CT.COD_CONTRATO
    CROSS JOIN MONTHS M
  WHERE
    COD_MESTRE_EVENTO IN (
      SELECT R.COD_MESTRE_EVENTO
      FROM RHFP1003 R
      CROSS JOIN MONTHS M
      WHERE TO_DATE(R.DATA_REFERENCIA) BETWEEN M.MONTH_START AND M.MONTH_END
        AND R.COD_ORGANOGRAMA = 8
        AND R.COD_EVENTO IN (1, 17, 19, 21, 26)
    )
    AND CT.COD_EMP = 8
    AND B.TIPO_VD = 'V'
    AND A.COD_VD NOT IN (292, 4033)
    AND A.VALOR_VD <> 0
    --AND E.EDICAO_ORG = 768
  GROUP BY
    CT.COD_UNIDADE,
    CT.DES_UNIDADE,
    A.COD_VD,
    B.NOME_VD,
    M.MONTH_START,
    M.MONTH_END
),
Base_D AS (
  SELECT
    CT.COD_UNIDADE AS COD_UNIDADE_REP,
    CT.COD_UNIDADE,
    CT.DES_UNIDADE,
    M.MONTH_START || ' - ' || M.MONTH_END AS REFERENCIA,
    CASE
      WHEN A.COD_VD = 1003 THEN 1004
      ELSE A.COD_VD
    END AS COD_VD,
    CASE
      WHEN A.COD_VD = 1003 THEN 'Líquido Pago nas Rescisões'
      ELSE B.NOME_VD
    END AS NOME_VD,
    SUM(NVL(A.VALOR_VD, 0)) AS TOTAL_MES,
    ROW_NUMBER() OVER (PARTITION BY TO_NUMBER(CT.COD_UNIDADE) ORDER BY CASE WHEN A.COD_VD = 1003 THEN 1004 ELSE A.COD_VD END) AS RN
  FROM
    RHFP1006 A
    INNER JOIN RHFP1000 B ON A.COD_VD = B.COD_VD
    LEFT JOIN RHFP1003 EV ON A.COD_MESTRE_EVENTO = EV.COD_MESTRE_EVENTO
    INNER JOIN CONTRATOS CT ON A.COD_CONTRATO = CT.COD_CONTRATO
    CROSS JOIN MONTHS M
  WHERE
    A.COD_MESTRE_EVENTO IN (
      SELECT R.COD_MESTRE_EVENTO
      FROM RHFP1003 R
      CROSS JOIN MONTHS M
      WHERE TO_DATE(R.DATA_REFERENCIA) BETWEEN M.MONTH_START AND M.MONTH_END
        AND R.COD_ORGANOGRAMA = 8
        AND R.COD_EVENTO IN (1, 17, 19, 21, 26)
    )
    AND CT.COD_EMP = 8
    AND (
      B.TIPO_VD = 'D'
      OR (A.COD_VD = 1003 AND EV.COD_EVENTO IN (17, 19))  -- Ajuste aqui para considerar apenas os eventos 17 e 19 para VD 1003
    )
    AND A.VALOR_VD <> 0
    AND CT.COD_VINCULO_EMPREG <> 99
  GROUP BY
    CT.COD_UNIDADE,
    CT.DES_UNIDADE,
    M.MONTH_START,
    M.MONTH_END,
    CASE WHEN A.COD_VD = 1003 THEN 1004 ELSE A.COD_VD END,
    CASE WHEN A.COD_VD = 1003 THEN 'Líquido Pago nas Rescisões' ELSE B.NOME_VD END
),
Base_O AS (
SELECT CT.COD_UNIDADE AS COD_UNIDADE_REP,
       CT.COD_UNIDADE,
       CT.DES_UNIDADE,
       M.MONTH_START || ' - ' || M.MONTH_END AS REFERENCIA,
       A.COD_VD,
       B.NOME_VD,
       SUM(NVL(A.VALOR_VD, 0)) AS TOTAL_MES,
       ROW_NUMBER() OVER(PARTITION BY TO_NUMBER(CT.COD_UNIDADE) ORDER BY A.COD_VD) AS RN
  FROM RHFP1006 A
 INNER JOIN RHFP1000 B ON A.COD_VD = B.COD_VD
 INNER JOIN CONTRATOS CT ON A.COD_CONTRATO = CT.COD_CONTRATO
 CROSS JOIN MONTHS M
 WHERE COD_MESTRE_EVENTO IN
       (SELECT R.COD_MESTRE_EVENTO
      FROM RHFP1003 R
      CROSS JOIN MONTHS M
      WHERE TO_DATE(R.DATA_REFERENCIA) BETWEEN M.MONTH_START AND M.MONTH_END
        AND R.COD_ORGANOGRAMA = 8
        AND R.COD_EVENTO IN (1, 17, 19, 21, 26))
   AND CT.COD_EMP = 8
   AND A.COD_VD IN
       (12, 885, 908, 910, 912, 914, 915, 916, 924, 925, 926, 927, 1004, 1063, 1064, 
        1067, 1068, 1231, 1232, 1233, 1234, 1456, 1457, 1458, 1459, 1461, 1462, 1463, 
        1464, 1910, 1924, 1934, 1935, 1941, 2222, 2232, 2601, 2602, 2605, 2611, 2612, 
        2615, 2616, 2617, 2701, 2705, 2706, 2711, 2712, 2713, 2714, 2715, 2716, 2717)
   AND A.VALOR_VD <> 0
 GROUP BY CT.COD_UNIDADE,
          CT.DES_UNIDADE,
          A.COD_VD, 
          B.NOME_VD,
          M.MONTH_START,
          M.MONTH_END
),
Totais AS (
SELECT CT.COD_UNIDADE AS COD_UNIDADE_REP,
       CT.COD_UNIDADE,
       CT.DES_UNIDADE,
       M.MONTH_START || ' - ' || M.MONTH_END AS REFERENCIA,
       SUM(CASE
             WHEN B.TIPO_VD = 'V' THEN
              NVL(A.VALOR_VD, 0)
             ELSE
              0
           END) AS TOTAL_V,
       SUM(CASE
             WHEN B.TIPO_VD = 'D' OR
                  (A.COD_VD = 1003 AND EV.COD_EVENTO IN (17, 19)) THEN
              NVL(A.VALOR_VD, 0)
             ELSE
              0
           END) AS TOTAL_D,
       SUM(CASE
             WHEN B.TIPO_VD = 'V' THEN
              NVL(A.VALOR_VD, 0)
             ELSE
              0
           END) - SUM(CASE
                        WHEN B.TIPO_VD = 'D' OR
                             (A.COD_VD = 1003 AND EV.COD_EVENTO IN (17, 19)) THEN
                         NVL(A.VALOR_VD, 0)
                        ELSE
                         0
                      END) AS TOTAL_LIQUIDO
  FROM RHFP1006 A
 INNER JOIN RHFP1000 B ON A.COD_VD = B.COD_VD
  LEFT JOIN RHFP1003 EV ON A.COD_MESTRE_EVENTO = EV.COD_MESTRE_EVENTO
 INNER JOIN CONTRATOS CT ON A.COD_CONTRATO = CT.COD_CONTRATO
 CROSS JOIN MONTHS M
 WHERE A.COD_MESTRE_EVENTO IN
       (SELECT R.COD_MESTRE_EVENTO
      FROM RHFP1003 R
      CROSS JOIN MONTHS M
      WHERE TO_DATE(R.DATA_REFERENCIA) BETWEEN M.MONTH_START AND M.MONTH_END
        AND R.COD_ORGANOGRAMA = 8
        AND R.COD_EVENTO IN (1, 17, 19, 21, 26))
   AND CT.COD_UNIDADE = 8
      --AND F.COD_NIVEL_ORG = 5 --OR E.EDICAO_ORG IN ('815', '835', '845', '855'))
   AND CT.COD_ORGANOGRAMA NOT IN
       (293, 301, 302, 304, 305, 309, 313, 315, 316, 318, 320, 322, 326, 327, 328, 329, 330, 331, 335, 349, 399, 939, 1740, 2147, 2148, 2149, 2150, 2151)
   AND CT.COD_ORGANOGRAMA NOT IN (344)
   AND A.VALOR_VD <> 0
   AND A.COD_VD NOT IN (292, 4033)
   AND CT.COD_VINCULO_EMPREG <> 99
 GROUP BY CT.COD_UNIDADE,
          CT.DES_UNIDADE,
          M.MONTH_START,
          M.MONTH_END
),
Combined_Base AS (
SELECT COALESCE(V.COD_UNIDADE_REP, D.COD_UNIDADE_REP, O.COD_UNIDADE_REP) AS COD_UNIDADE_REP,
       COALESCE(V.COD_UNIDADE, D.COD_UNIDADE, O.COD_UNIDADE) AS COD_UNIDADE,
       COALESCE(V.DES_UNIDADE,
                D.DES_UNIDADE,
                O.DES_UNIDADE) AS DES_UNIDADE,
       COALESCE(V.REFERENCIA, D.REFERENCIA, O.REFERENCIA) AS REFERENCIA,
       V.COD_VD AS COD_VD_V,
       V.NOME_VD AS NOME_VD_V,
       TO_CHAR(V.TOTAL_MES, 'FM999G999G990D00') AS TOTAL_MES_V,
       D.COD_VD AS COD_VD_D,
       D.NOME_VD AS NOME_VD_D,
       TO_CHAR(D.TOTAL_MES, 'FM999G999G990D00') AS TOTAL_MES_D,
       O.COD_VD AS COD_VD_O,
       O.NOME_VD AS NOME_VD_O,
       TO_CHAR(O.TOTAL_MES, 'FM999G999G990D00') AS TOTAL_MES_O,
       COALESCE(V.RN, D.RN, O.RN) AS RN,
       DENSE_RANK() OVER(PARTITION BY COALESCE(V.COD_UNIDADE, D.COD_UNIDADE, O.COD_UNIDADE) ORDER BY COALESCE(CASE
         WHEN V.COD_VD = 1003 THEN
          1004
         ELSE
          V.COD_VD
       END,CASE
         WHEN D.COD_VD = 1003 THEN
          1004
         ELSE
          D.COD_VD
       END, O.COD_VD)) AS DR
  FROM Base_V V
  FULL OUTER JOIN Base_D D ON V.COD_UNIDADE = D.COD_UNIDADE
                          AND V.RN = D.RN
  FULL OUTER JOIN Base_O O ON COALESCE(V.COD_UNIDADE, D.COD_UNIDADE) =
                              O.COD_UNIDADE
                          AND COALESCE(V.RN, D.RN) = O.RN
)


SELECT *
FROM Combined_Base
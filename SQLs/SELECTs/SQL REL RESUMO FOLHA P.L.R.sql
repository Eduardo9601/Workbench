-- SQL A reformatado com estrutura visual do SQL B
-- Toda a lógica original foi preservada, apenas formatada com base no estilo do SQL B

WITH
  Base_V AS (
    SELECT
       G.COD_REDE AS COD_REDE_REP,
       G.COD_REDE,
       G.DES_REDE,
      :DATA_INICIO || ' - ' || :DATA_FIM AS REFERENCIA,
      A.COD_VD,
      B.NOME_VD,
      SUM(NVL(A.VALOR_VD, 0)) AS TOTAL_MES,
      ROW_NUMBER() OVER(PARTITION BY G.COD_REDE ORDER BY A.COD_VD) AS RN
    FROM
      RHFP1005 A
      INNER JOIN RHFP1000 B ON A.COD_VD = B.COD_VD
      INNER JOIN RHFP0310 D ON A.COD_CONTRATO = D.COD_CONTRATO AND :DATA_FIM BETWEEN D.DATA_INICIO AND D.DATA_FIM
      LEFT JOIN RHFP0401 E ON D.COD_ORGANOGRAMA = E.COD_ORGANOGRAMA AND SYSDATE BETWEEN E.DATA_INICIO AND NVL(E.DATA_FIM, TO_DATE('31/12/2999', 'DD/MM/YYYY'))
      LEFT JOIN RHFP0400 F ON F.COD_ORGANOGRAMA = CASE WHEN E.COD_NIVEL5 > 0 THEN E.COD_NIVEL5 ELSE E.COD_NIVEL4 END
      LEFT JOIN V_EDICAO_ORG_AVT G ON F.COD_ORGANOGRAMA = G.COD_ORGANOGRAMA
    WHERE
      COD_MESTRE_EVENTO IN (
        SELECT COD_MESTRE_EVENTO
        FROM RHFP1003
        WHERE TO_DATE(DATA_REFERENCIA) BETWEEN :DATA_INICIO AND :DATA_FIM
          AND COD_ORGANOGRAMA = 8
          AND COD_EVENTO = 9
      )
      AND E.EDICAO_NIVEL2 = '008'
      AND B.TIPO_VD = 'V'
      --AND A.COD_VD NOT IN (292, 4033)
      AND A.VALOR_VD <> 0
      AND E.EDICAO_ORG NOT IN ('705','707')
    GROUP BY
      G.COD_REDE,
      G.DES_REDE,
      A.COD_VD,
      B.NOME_VD

  ),

  Base_D AS (
    SELECT
       G.COD_REDE AS COD_REDE_REP,
       G.COD_REDE,
       G.DES_REDE,
      :DATA_INICIO || ' - ' || :DATA_FIM AS REFERENCIA,
      /*CASE
        WHEN A.COD_VD = 1003 THEN 1004
        ELSE A.COD_VD
      END AS COD_VD,
      CASE
        WHEN A.COD_VD = 1003 THEN 'Líquido Pago nas Rescisões'
        ELSE B.NOME_VD
      END AS NOME_VD,*/
      A.COD_VD,
      B.NOME_VD,
      SUM(NVL(A.VALOR_VD, 0)) AS TOTAL_MES,
      ROW_NUMBER() OVER (PARTITION BY G.COD_REDE ORDER BY CASE WHEN A.COD_VD = 622 THEN A.COD_VD ELSE NULL END) AS RN
    FROM
      RHFP1005 A
      INNER JOIN RHFP1000 B ON A.COD_VD = B.COD_VD
      LEFT JOIN RHFP1003 EV ON A.COD_MESTRE_EVENTO = EV.COD_MESTRE_EVENTO
      INNER JOIN RHFP0310 D ON A.COD_CONTRATO = D.COD_CONTRATO AND :DATA_FIM BETWEEN D.DATA_INICIO AND D.DATA_FIM
      LEFT JOIN RHFP0401 E ON D.COD_ORGANOGRAMA = E.COD_ORGANOGRAMA AND SYSDATE BETWEEN E.DATA_INICIO AND NVL(E.DATA_FIM, TO_DATE('31/12/2999', 'DD/MM/YYYY'))
      LEFT JOIN RHFP0400 F ON F.COD_ORGANOGRAMA = CASE WHEN E.COD_NIVEL5 > 0 THEN E.COD_NIVEL5 ELSE E.COD_NIVEL4 END
      LEFT JOIN V_EDICAO_ORG_AVT G ON F.COD_ORGANOGRAMA = G.COD_ORGANOGRAMA
    WHERE
      A.COD_MESTRE_EVENTO IN (
        SELECT COD_MESTRE_EVENTO
        FROM RHFP1003
        WHERE TO_DATE(DATA_REFERENCIA) BETWEEN :DATA_INICIO AND :DATA_FIM
          AND COD_ORGANOGRAMA = 8
          AND COD_EVENTO = 9
      )
      AND E.EDICAO_NIVEL2 = '008'
      AND (
        B.TIPO_VD = 'D'
        OR (A.COD_VD = 622 AND EV.COD_EVENTO IN (9))  -- Ajuste aqui para considerar apenas os eventos 17 e 19 para VD 1003
      )
      AND A.VALOR_VD <> 0
      AND E.EDICAO_ORG NOT IN ('705','707')
      AND A.COD_VD = 622
    GROUP BY
      G.COD_REDE,
      G.DES_REDE,
      A.COD_VD,
      B.NOME_VD,
      CASE WHEN A.COD_VD = 1003 THEN 1004 ELSE A.COD_VD END,
      CASE WHEN A.COD_VD = 1003 THEN 'Líquido Pago nas Rescisões' ELSE B.NOME_VD END
  ),

  Base_O AS (
    SELECT
       G.COD_REDE AS COD_REDE_REP,
       G.COD_REDE,
       G.DES_REDE,
      :DATA_INICIO || ' - ' || :DATA_FIM AS REFERENCIA,
      A.COD_VD,
      B.NOME_VD,
      SUM(NVL(A.VALOR_VD, 0)) AS TOTAL_MES,
      ROW_NUMBER() OVER(PARTITION BY G.COD_REDE ORDER BY A.COD_VD) AS RN
    FROM
      RHFP1005 A
      INNER JOIN RHFP1000 B ON A.COD_VD = B.COD_VD
      INNER JOIN RHFP0310 D ON A.COD_CONTRATO = D.COD_CONTRATO AND :DATA_FIM BETWEEN D.DATA_INICIO AND D.DATA_FIM
      LEFT JOIN RHFP0401 E ON D.COD_ORGANOGRAMA = E.COD_ORGANOGRAMA AND SYSDATE BETWEEN E.DATA_INICIO AND NVL(E.DATA_FIM, TO_DATE('31/12/2999', 'DD/MM/YYYY'))
      LEFT JOIN RHFP0400 F ON F.COD_ORGANOGRAMA = CASE WHEN E.COD_NIVEL5 > 0 THEN E.COD_NIVEL5 ELSE E.COD_NIVEL4 END
      LEFT JOIN V_EDICAO_ORG_AVT G ON F.COD_ORGANOGRAMA = G.COD_ORGANOGRAMA
    WHERE
      COD_MESTRE_EVENTO IN (
        SELECT COD_MESTRE_EVENTO
        FROM RHFP1003
        WHERE TO_DATE(DATA_REFERENCIA) BETWEEN :DATA_INICIO AND :DATA_FIM
          AND COD_ORGANOGRAMA = 8
          AND COD_EVENTO = 9
      )
      AND E.EDICAO_NIVEL2 = '008'
      --AND A.COD_VD IN (12, 4065)
      AND A.COD_VD IN (895, 912, 913, 1146, 1152, 1154, 1155, 1156, 1157, 1159, 1160, 1171, 1172, 1173, 1174, 1179, 2602)
      AND A.VALOR_VD <> 0
      AND E.EDICAO_ORG NOT IN ('705','707')

GROUP BY
      G.COD_REDE,
      G.DES_REDE,
      A.COD_VD,
      B.NOME_VD

  ),

 Totais AS (
    SELECT
      BV.COD_REDE_REP,
      BV.COD_REDE,
      BV.DES_REDE,
      BV.REFERENCIA,
      SUM(BV.TOTAL_MES) AS TOTAL_V,
      NVL(SUM(D.TOTAL_MES), 0) AS TOTAL_D,
      SUM(BV.TOTAL_MES) - NVL(SUM(D.TOTAL_MES), 0) AS TOTAL_LIQUIDO
    FROM (
      SELECT COD_REDE_REP, COD_REDE, DES_REDE, REFERENCIA, TOTAL_MES
      FROM Base_V
    ) BV
    LEFT JOIN (
      SELECT COD_REDE, TOTAL_MES
      FROM Base_D
    ) D ON BV.COD_REDE = D.COD_REDE
    GROUP BY BV.COD_REDE_REP, BV.COD_REDE, BV.DES_REDE, BV.REFERENCIA
  ),

  Totais_Redes AS (
    SELECT
      COD_REDE,
      TO_CHAR(SUM(TOTAL_V), 'FM999G999G990D00') AS TOTAL_REDE_V,
      TO_CHAR(SUM(NVL(TOTAL_D, 0)), 'FM999G999G990D00') AS TOTAL_REDE_D,
      TO_CHAR(SUM(TOTAL_V) - SUM(NVL(TOTAL_D, 0)), 'FM999G999G990D00') AS TOTAL_REDE_LIQUIDO
    FROM Totais
    GROUP BY COD_REDE
  ),

  Combined_Base AS (
    SELECT
      COALESCE(BV.COD_REDE_REP, D.COD_REDE_REP, O.COD_REDE_REP) AS COD_REDE_REP,
      COALESCE(BV.COD_REDE, D.COD_REDE, O.COD_REDE) AS COD_REDE,
      COALESCE(BV.DES_REDE, D.DES_REDE, O.DES_REDE) AS DES_REDE,
      COALESCE(BV.REFERENCIA, D.REFERENCIA, O.REFERENCIA) AS REFERENCIA,
      BV.COD_VD AS COD_VD_V,
      BV.NOME_VD AS NOME_VD_V,
      TO_CHAR(BV.TOTAL_MES, 'FM999G999G990D00') AS TOTAL_MES_V,
      D.COD_VD AS COD_VD_D,
      D.NOME_VD AS NOME_VD_D,
      TO_CHAR(D.TOTAL_MES, 'FM999G999G990D00') AS TOTAL_MES_D,
      O.COD_VD AS COD_VD_O,
      O.NOME_VD AS NOME_VD_O,
      TO_CHAR(O.TOTAL_MES, 'FM999G999G990D00') AS TOTAL_MES_O,
      COALESCE(BV.RN, D.RN, O.RN) AS RN,
      DENSE_RANK() OVER (PARTITION BY COALESCE(BV.COD_REDE, D.COD_REDE, O.COD_REDE) ORDER BY COALESCE(BV.RN, D.RN, O.RN)) AS DR
    FROM
      Base_V BV
      FULL OUTER JOIN Base_D D ON BV.COD_REDE = D.COD_REDE AND BV.RN = D.RN
      FULL OUTER JOIN Base_O O ON COALESCE(BV.COD_REDE, D.COD_REDE) = O.COD_REDE AND COALESCE(BV.RN, D.RN) = O.RN
    WHERE
      NOT (BV.COD_VD IS NULL AND D.COD_VD IS NULL AND O.COD_VD IS NULL)
  ),

  Totais_Gerais AS (
    SELECT
      TO_CHAR(SUM(TOTAL_V), 'FM999G999G990D00') AS TOTAL_GERAL_V,
      TO_CHAR(SUM(NVL(TOTAL_D, 0)), 'FM999G999G990D00') AS TOTAL_GERAL_D,
      TO_CHAR(SUM(TOTAL_V) - SUM(NVL(TOTAL_D, 0)), 'FM999G999G990D00') AS TOTAL_GERAL_LIQUIDO
    FROM Totais
  )

SELECT
  CB.COD_REDE,
  CB.COD_REDE || ' - ' || CB.DES_REDE AS REDE,
  CB.REFERENCIA,
  CASE
    WHEN CB.COD_VD_V IS NOT NULL AND CB.NOME_VD_V IS NOT NULL THEN TO_CHAR(CB.COD_VD_V) || ' - ' || CB.NOME_VD_V
    WHEN CB.COD_VD_V IS NOT NULL THEN TO_CHAR(CB.COD_VD_V)
    WHEN CB.NOME_VD_V IS NOT NULL THEN CB.NOME_VD_V
    ELSE NULL
  END AS DES_VD_V,
  CB.TOTAL_MES_V,
  CASE
    WHEN CB.COD_VD_D IS NOT NULL AND CB.NOME_VD_D IS NOT NULL THEN TO_CHAR(CB.COD_VD_D) || ' - ' || CB.NOME_VD_D
    WHEN CB.COD_VD_D IS NOT NULL THEN TO_CHAR(CB.COD_VD_D)
    WHEN CB.NOME_VD_D IS NOT NULL THEN CB.NOME_VD_D
    ELSE NULL
  END AS DES_VD_D,
  CB.TOTAL_MES_D,
  CASE
    WHEN CB.COD_VD_O IS NOT NULL AND CB.NOME_VD_O IS NOT NULL THEN TO_CHAR(CB.COD_VD_O) || ' - ' || CB.NOME_VD_O
    WHEN CB.COD_VD_O IS NOT NULL THEN TO_CHAR(CB.COD_VD_O)
    WHEN CB.NOME_VD_O IS NOT NULL THEN CB.NOME_VD_O
    ELSE NULL
  END AS DES_VD_O,
  CB.TOTAL_MES_O,
  TR.TOTAL_REDE_V,
  TR.TOTAL_REDE_D,
  TR.TOTAL_REDE_LIQUIDO,
  TG.TOTAL_GERAL_V,
  TG.TOTAL_GERAL_D,
  TG.TOTAL_GERAL_LIQUIDO
FROM Combined_Base CB
LEFT JOIN Totais_Redes TR ON TR.COD_REDE = CB.COD_REDE
LEFT JOIN Totais_Gerais TG ON 1=1
ORDER BY
  COD_REDE_REP,
  DR,
  RN

/*SQLs QUE MONTA A ESTRUTURA DO ORGANOGRAMA DA FOLHA, POR NIVEL HIERARQUICO*/

/*VERSÃO ORIGINAL SEM FORMATAÇÃO*/
WITH
DIVISAO AS (
  SELECT
    EDICAO_ORG AS COD_DIVISAO,
    NOME_ORGANOGRAMA AS DES_DIVISAO,
    COD_ORGANOGRAMA   AS ORG_DIVISAO,
    COD_TIPO
  FROM V_EST_ORG_AVT
  WHERE COD_NIVEL_ORG = 4
  AND COD_TIPO IN (2,3)
),
DEPARTAMENTO AS (  
  SELECT
    EDICAO_ORG AS COD_DEPARTAMENTO,
    NOME_ORGANOGRAMA AS DES_DEPARTAMENTO,
    COD_ORGANOGRAMA   AS ORG_DEPARTAMENTO,
    COD_ORGANOGRAMA_SUB AS ORG_PAI,
    COD_TIPO
  FROM V_EST_ORG_AVT
  WHERE COD_NIVEL_ORG = 5
  AND COD_TIPO IN (2,3)
),
SETOR AS (
  SELECT
    EDICAO_ORG AS COD_SETOR,
    NOME_ORGANOGRAMA AS DES_SETOR,
    COD_ORGANOGRAMA   AS ORG_SETOR,
    COD_ORGANOGRAMA_SUB AS ORG_PAI,
    COD_TIPO
  FROM V_EST_ORG_AVT
  WHERE COD_NIVEL_ORG = 6
  AND COD_TIPO IN (2,3)
)
SELECT
  D.COD_DIVISAO,
  D.DES_DIVISAO,
  P.COD_DEPARTAMENTO,
  P.DES_DEPARTAMENTO,
  S.COD_SETOR,
  S.DES_SETOR
  FROM DIVISAO D
  LEFT JOIN DEPARTAMENTO P ON P.ORG_PAI = D.ORG_DIVISAO
  LEFT JOIN SETOR        S ON S.ORG_PAI = P.ORG_DEPARTAMENTO
ORDER BY D.COD_DIVISAO, P.COD_DEPARTAMENTO, S.COD_SETOR;


/*VERSÃO 2 COM FORMATAÇÃO*/
WITH
DIVISAO AS (
  SELECT
    EDICAO_ORG          AS COD_DIVISAO,
    NOME_ORGANOGRAMA_B  AS NM_DIVISAO,
    COD_ORGANOGRAMA     AS ORG_DIVISAO
  FROM V_EST_ORG_AVT
  WHERE COD_NIVEL_ORG = 4 AND COD_TIPO IN (2,3)
),
DEPARTAMENTO AS (
  SELECT
    EDICAO_ORG          AS COD_DEPARTAMENTO,
    NOME_ORGANOGRAMA_B  AS NM_DEPARTAMENTO,
    COD_ORGANOGRAMA     AS ORG_DEPARTAMENTO,
    COD_ORGANOGRAMA_SUB AS ORG_PAI
  FROM V_EST_ORG_AVT
  WHERE COD_NIVEL_ORG = 5 AND COD_TIPO IN (2,3)
),
SETOR AS (
  SELECT
    EDICAO_ORG          AS COD_SETOR,
    NOME_ORGANOGRAMA_B  AS NM_SETOR,
    COD_ORGANOGRAMA     AS ORG_SETOR,
    COD_ORGANOGRAMA_SUB AS ORG_PAI
  FROM V_EST_ORG_AVT
  WHERE COD_NIVEL_ORG = 6 AND COD_TIPO IN (2,3)
),
J AS (
  SELECT
    D.ORG_DIVISAO,
    -- rótulos "código - nome"
    (TO_CHAR(D.COD_DIVISAO)     || ' - ' || D.NM_DIVISAO)    AS ROT_DIV,
    (TO_CHAR(P.COD_DEPARTAMENTO) || ' - ' || P.NM_DEPARTAMENTO) AS ROT_DEP,
    CASE
      WHEN S.COD_SETOR IS NOT NULL
      THEN (TO_CHAR(S.COD_SETOR) || ' - ' || S.NM_SETOR)
    END AS ROT_SET,

    -- primeira linha de cada divisão
    ROW_NUMBER() OVER (
      PARTITION BY D.ORG_DIVISAO
      ORDER BY P.NM_DEPARTAMENTO, S.NM_SETOR, S.COD_SETOR
    ) AS RN_DIV,

    -- primeira linha de cada departamento
    ROW_NUMBER() OVER (
      PARTITION BY D.ORG_DIVISAO, P.ORG_DEPARTAMENTO
      ORDER BY S.NM_SETOR, S.COD_SETOR
    ) AS RN_DEP,

    -- chaves de ordenação para manter pai acima dos filhos
    D.NM_DIVISAO AS ORD_DIV,
    P.NM_DEPARTAMENTO AS ORD_DEP,
    S.NM_SETOR AS ORD_SET
  FROM DIVISAO D
  LEFT JOIN DEPARTAMENTO P ON P.ORG_PAI = D.ORG_DIVISAO
  LEFT JOIN SETOR        S ON S.ORG_PAI = P.ORG_DEPARTAMENTO
)
SELECT
  CASE WHEN RN_DIV = 1 THEN ROT_DIV END AS DIVISAO,       -- mostra só na 1ª linha do grupo
  CASE WHEN RN_DEP = 1 THEN ROT_DEP END AS DEPARTAMENTO,  -- idem para departamento
  ROT_SET AS SETOR                                         -- setor em todas as linhas (ou NULL)
FROM J
ORDER BY ORD_DIV, ORD_DEP, ORD_SET;
WITH
/* BLOCO PARA ENTRADA DE PARÂMETROS (DINÂMICO POR PERÍODO) */
PARAMS AS (

/*VERSÃO PARA USAR NO PL/SQL*/
/*SELECT
    TO_DATE('&DATA_INICIO','DD/MM/YYYY') AS D_INI,
    TO_DATE('&DATA_FIM','DD/MM/YYYY')    AS D_FIM,
    UPPER(NVL(TRIM('&EXIBIR_PESSOA'),'S')) AS EXIBIR_PESSOA,  -- 'S' ou 'N'

    -- SALT automático:
       - Só é usado quando EXIBIR_IDENT = 'N'
       - Baseado no mês do período para ficar estável entre reexecuções do mesmo mês
         (ajuste se quiser incluir mais componentes)
    CASE
      WHEN UPPER(NVL(TRIM('&EXIBIR_PESSOA'),'S')) = 'N' THEN
        'LGPD:' || TO_CHAR(TRUNC(TO_DATE('&DATA_INICIO','DD/MM/YYYY'),'MM'),'YYYYMM')
      ELSE NULL
    END AS SALT
  FROM DUAL*/


/*VERSÃO PARA USAR NO SAPINHO E DENTRO DA FOLHA*/
SELECT :DATA_INICIO AS D_INI,
       :DATA_FIM AS D_FIM,
        UPPER(NVL(TRIM(:EXIBIR_PESSOA),'S')) AS EXIBIR_PESSOA,
    CASE
      WHEN UPPER(NVL(TRIM(:EXIBIR_PESSOA),'S')) = 'N' THEN
        'LGPD:' || TO_CHAR(TRUNC(TO_DATE(:DATA_INICIO,'DD/MM/YYYY'),'MM'),'YYYYMM')
      ELSE NULL
    END AS SALT
  FROM DUAL

),


/*CALENDÁRIO MENSAL DINÂMICO A PARTIR DOS PARÂMTROS ACIMA (PARAMS)*/
DATAS_REF AS (
  SELECT
  /* MÊS I INICIANDO NO 1º DIA DO MÊS DE D_INI */
   ADD_MONTHS(TRUNC(P.D_INI, 'MM'), LEVEL - 1) AS DTA_INI,
   LAST_DAY(ADD_MONTHS(TRUNC(P.D_INI, 'MM'), LEVEL - 1)) AS DTA_FIM,
   TO_CHAR(ADD_MONTHS(TRUNC(P.D_INI, 'MM'), LEVEL - 1), 'MM/YYYY') AS MES_ANO,
   /* ÍNDICE DO MÊS DENTRO DO PERÍODO */
   LEVEL AS IDX_MES,
   /* QUANTIDADE TOTAL DE MESES DO PERÍODO (MESMA EM TODAS AS LINHAS) */
   MONTHS_BETWEEN(ADD_MONTHS(TRUNC(P.D_FIM, 'MM'), 1), TRUNC(P.D_INI, 'MM')) AS QTD_MESES
    FROM PARAMS P
  CONNECT BY LEVEL <= MONTHS_BETWEEN(ADD_MONTHS(TRUNC(P.D_FIM, 'MM'), 1),
                                     TRUNC(P.D_INI, 'MM'))

),

CONTRATOS AS (
SELECT DISTINCT CT.STATUS,
                CT.COD_CONTRATO,
                CT.DES_PESSOA,
                CT.DATA_NASCIMENTO,
                CT.DATA_ADMISSAO,
                CT.DATA_DEMISSAO,
                CT.DES_DEMISSAO,
                FN.COD_FUNCAO,
                FN.DES_FUNCAO,
                FN.DATA_INI_CLH,
                FN.DATA_FIM_CLH,
                HR.HR_BASE_MES,
                HR.DATA_INI_HR,
                HR.DATA_FIM_HR,
                CT.IND_DEFICIENCIA,
                CT.SEXO,
                ORG.COD_EMP,
                ORG.EDICAO_EMP,
                ORG.DES_EMP,
                ORG.COD_ORGANOGRAMA,
                ORG.COD_UNIDADE,
                ORG.DES_UNIDADE,
                ORG.DATA_INI_ORG,
                ORG.DATA_FIM_ORG,
                CASE
                  WHEN ORG.COD_TIPO = 2 THEN
                   ORG.EDICAO_ORG_3
                  WHEN ORG.COD_TIPO = 3 THEN
                   ORG.EDICAO_ORG_3
                  ELSE
                   ORG.COD_UNIDADE
                END AS COD_FILIAL,
                CASE
                  WHEN ORG.COD_TIPO = 2 THEN
                   ORG.NOME3
                  WHEN ORG.COD_TIPO = 3 THEN
                   ORG.NOME3
                  ELSE
                   ORG.DES_UNIDADE
                END AS DES_FILIAL,
                CASE
                  WHEN ORG.COD_TIPO = 2 THEN
                   ORG.EDICAO_ORG_4
                  WHEN ORG.COD_TIPO = 3 THEN
                   ORG.EDICAO_ORG_4
                  ELSE
                   ORG.COD_UNIDADE
                END AS COD_DIVISAO,
                CASE
                  WHEN ORG.COD_TIPO = 2 THEN
                   ORG.NOME4
                  WHEN ORG.COD_TIPO = 3 THEN
                   ORG.NOME4
                  ELSE
                   ORG.DES_UNIDADE
                END AS DES_DIVISAO,
                ORG.COD_REDE,
                ORG.DES_REDE,
                ORG.COD_TIPO,
                ORG.DES_TIPO
  FROM V_DADOS_CONTRATO_AVT CT
  JOIN VH_EST_ORG_CONTRATO_AVT ORG ON CT.COD_CONTRATO = ORG.COD_CONTRATO
  JOIN VH_HIST_HORAS_COLAB_AVT HR ON CT.COD_CONTRATO = HR.COD_CONTRATO
  JOIN VH_CARGO_CONTRATO_AVT FN ON CT.COD_CONTRATO = FN.COD_CONTRATO
 CROSS JOIN DATAS_REF M
 CROSS JOIN PARAMS P
 WHERE -- CONTRATOS ATIVOS EM QUALQUER DIA DO MÊS
 CT.DATA_ADMISSAO <= M.DTA_FIM
 AND NVL(CT.DATA_DEMISSAO, DATE '2999-12-31') >= M.DTA_INI
/*VERSÕES ALTERNATIVAS DE FILTRAR POR DATA
(('31/03/2025' BETWEEN CT.DATA_ADMISSAO AND CT.DATA_DEMISSAO) OR
        (CT.DATA_ADMISSAO <= '31/03/2025' AND CT.DATA_DEMISSAO IS NULL))
AND (CT.DATA_ADMISSAO <= TO_DATE('31/07/2025','DD/MM/YYYY'))
   AND (CT.DATA_DEMISSAO IS NULL OR CT.DATA_DEMISSAO >= TO_DATE('01/07/2025','DD/MM/YYYY'))
AND (CT.DATA_DEMISSAO IS NULL OR
       CT.DATA_DEMISSAO >= '01/07/2025')*/

 AND P.D_FIM BETWEEN ORG.DATA_INI_ORG AND ORG.DATA_FIM_ORG
 AND P.D_FIM BETWEEN FN.DATA_INI_CLH AND FN.DATA_FIM_CLH
 AND P.D_FIM BETWEEN HR.DATA_INI_HR AND HR.DATA_FIM_HR
 AND ORG.COD_EMP = 8
 --AND ORG.COD_TIPO = 1
 AND CT.STATUS = 1
 AND ORG.EDICAO_ORG_4 IS NOT NULL
--AND ORG.COD_UNIDADE NOT IN (014, 050, 615, 7586, 7608)
--AND ORG.COD_UNIDADE = 004
 ORDER BY CT.COD_CONTRATO

),

/*MAPEIA TODOS OS COLABORADORES MAS TAMBÉM COM INFO DE AFASTAMENTO*/
STATUS_AFASTADOS AS (
SELECT DISTINCT ORG.COD_EMP,
                CT.COD_CONTRATO,
                ORG.COD_ORGANOGRAMA,
                ORG.COD_UNIDADE,
                NVL(AF.COD_CAUSA_AFAST, 0) AS STATUS_AFAST,
                AF.DATA_INICIO AS DATA_INI_AFAST,
                AF.DATA_FIM AS DATA_FIM_AFAST
  FROM RHFP0306                AF,
       RHFP0300                CT,
       VH_EST_ORG_CONTRATO_AVT ORG,
       VH_CARGO_CONTRATO_AVT   FN,
       DATAS_REF               M,
       PARAMS                  P
 WHERE CT.COD_CONTRATO = AF.COD_CONTRATO(+)
   AND CT.COD_CONTRATO = ORG.COD_CONTRATO(+)
   AND CT.COD_CONTRATO = FN.COD_CONTRATO(+)
   AND CT.DATA_INICIO <= M.DTA_FIM
   AND NVL(CT.DATA_FIM, DATE '2999-12-31') >= M.DTA_INI
      /* AND (CT.DATA_INICIO <= '31/03/2025')
         AND (CT.DATA_INICIO IS NULL OR CT.DATA_FIM >= '01/01/2025')*/
   AND P.D_FIM BETWEEN AF.DATA_INICIO(+) AND AF.DATA_FIM(+)
   AND P.D_FIM BETWEEN ORG.DATA_INI_ORG(+) AND ORG.DATA_FIM_ORG(+)
   AND P.D_FIM BETWEEN AF.DATA_INICIO(+) AND
       NVL(AF.DATA_FIM(+), DATE '2999-12-31')
   AND ORG.COD_EMP = 8
   AND ORG.COD_TIPO = 1
--AND ORG.COD_UNIDADE NOT IN (014, 050, 615, 7586, 7608)

),


RESCISAO_FGTS AS (
SELECT A.COD_CONTRATO,
       SUM(CASE
             WHEN A.COD_VD = 1001 THEN
              A.VALOR_VD
             ELSE
              0
           END) AS VENCIMENTOS,
       SUM(CASE
             WHEN A.COD_VD = 1003 THEN
              A.VALOR_VD
             ELSE
              0
           END) AS LIQUIDO,
       SUM(CASE
             WHEN A.COD_VD = 1938 THEN
              A.VALOR_VD
             ELSE
              0
           END) AS RESC_8,
       SUM(CASE
             WHEN A.COD_VD = 1939 THEN
              A.VALOR_VD
             ELSE
              0
           END) AS RESC_CONTABIL,
       SUM(CASE
             WHEN A.COD_VD = 1941 THEN
              A.VALOR_VD
             ELSE
              0
           END) AS RESC_40
  FROM RHFP1006 A
  JOIN RHFP1003 B ON A.COD_MESTRE_EVENTO = B.COD_MESTRE_EVENTO
 CROSS JOIN DATAS_REF D
 WHERE B.COD_EVENTO IN (17, 19)
   AND B.DATA_REFERENCIA BETWEEN D.DTA_INI AND D.DTA_FIM
   AND A.COD_VD IN (1001, 1003, 1938, 1939, 1941)
 GROUP BY A.COD_CONTRATO -- <- não inclua A.COD_VD aqui

),

TOTAIS AS (
SELECT A.COD_CONTRATO,
       B.DES_PESSOA,
       B.DATA_ADMISSAO,
       B.DATA_DEMISSAO,
       B.DES_DEMISSAO,
       B.COD_ORGANOGRAMA,
       B.COD_UNIDADE,
       B.DES_UNIDADE,
       B.COD_EMP,
       B.COD_TIPO,
       SUM(A.VENCIMENTOS) AS VENCIMENTOS,
       SUM(A.LIQUIDO) AS LIQUIDO,
       SUM(A.RESC_8) AS "RESCISAO_8%",
       SUM(A.RESC_CONTABIL) AS RESC_CONTABIL,
       SUM(A.RESC_40) AS "RESC_40%",
       ROUND(SUM(A.RESC_40 + RESC_CONTABIL + A.RESC_8), 2) AS MULTA,
       ROUND(SUM(A.LIQUIDO + RESC_CONTABIL + A.RESC_40 + A.RESC_8), 2) AS TOTAL
  FROM RESCISAO_FGTS A
  JOIN CONTRATOS B ON A.COD_CONTRATO = B.COD_CONTRATO
  WHERE (B.COD_TIPO = :TIPO OR :TIPO = 0)
   AND (:CONTRATO = '0' OR A.COD_CONTRATO IN
        (SELECT * FROM TABLE(SPLIT_CONTRACTS(:CONTRATO ))))
   AND (:UNIDADE = '0' OR  B.COD_UNIDADE IN
        (SELECT * FROM TABLE(SPLIT_CONTRACTS(:UNIDADE ))))
 GROUP BY A.COD_CONTRATO,
          B.DES_PESSOA,
          B.DATA_ADMISSAO,
          B.DATA_DEMISSAO,
          B.DES_DEMISSAO,
          B.COD_ORGANOGRAMA,
          B.COD_UNIDADE,
          B.DES_UNIDADE,
          B.COD_EMP,
          B.COD_TIPO

),

TOTAIS_UNI AS (
SELECT B.COD_ORGANOGRAMA,
       B.COD_UNIDADE,
       --B.DES_UNIDADE AS UNIDADE,
       SUM(A.VENCIMENTOS) AS VENCIMENTOS_UNI,
       SUM(A.LIQUIDO) AS LIQUIDO_UNI,
       SUM(A.RESC_8) AS "RESCISAO_8%_UNI",
       SUM(A.RESC_CONTABIL) AS RESC_CONTABIL_UNI,
       SUM(A.RESC_40) AS "RESC_40%_UNI",
       ROUND(SUM(A.RESC_40 + RESC_CONTABIL + A.RESC_8), 2) AS MULTA_UNI,
       ROUND(SUM(A.LIQUIDO + RESC_CONTABIL + A.RESC_40 + A.RESC_8), 2) AS TOTAL_UNI,
       COUNT(A.COD_CONTRATO) AS QTD_CONTRATOS_UNI
  FROM RESCISAO_FGTS A
  JOIN CONTRATOS B ON A.COD_CONTRATO = B.COD_CONTRATO
 WHERE (B.COD_TIPO = :TIPO OR :TIPO = 0)
   AND (:CONTRATO = '0' OR A.COD_CONTRATO IN
        (SELECT * FROM TABLE(SPLIT_CONTRACTS(:CONTRATO ))))
   AND (:UNIDADE = '0' OR  B.COD_UNIDADE IN
      (SELECT * FROM TABLE(SPLIT_CONTRACTS(:UNIDADE ))))
 GROUP BY B.COD_ORGANOGRAMA,  B.COD_UNIDADE

),

TOTAIS_GERAL AS (
SELECT B.COD_EMP,
       SUM(A.VENCIMENTOS) AS VENCIMENTOS_GE,
       SUM(A.LIQUIDO) AS LIQUIDO_GE,
       SUM(A.RESC_8) AS "RESCISAO_8%_GE",
       SUM(A.RESC_CONTABIL) AS RESC_CONTABIL_GE,
       SUM(A.RESC_40) AS "RESC_40%_GE",
       ROUND(SUM(A.RESC_40 + RESC_CONTABIL + A.RESC_8), 2) AS MULTA_GE,
       ROUND(SUM(A.LIQUIDO + RESC_CONTABIL + A.RESC_40 + A.RESC_8), 2) AS TOTAL_GE,
       COUNT(A.COD_CONTRATO) AS QTD_CONTRATOS_GE
  FROM RESCISAO_FGTS A
  JOIN CONTRATOS B ON A.COD_CONTRATO = B.COD_CONTRATO
 WHERE (B.COD_TIPO = :TIPO OR :TIPO = 0)
   AND (:CONTRATO = '0' OR A.COD_CONTRATO IN
        (SELECT * FROM TABLE(SPLIT_CONTRACTS(:CONTRATO ))))
   AND (:UNIDADE = '0' OR  B.COD_UNIDADE IN
      (SELECT * FROM TABLE(SPLIT_CONTRACTS(:UNIDADE ))))
 GROUP BY B.COD_EMP

)

/* FINAL: MANTENDO TODAS AS CTES EXATAMENTE COMO ESTÃO ACIMA */
SELECT CASE
         WHEN P.EXIBIR_PESSOA = 'S' THEN
          A.COD_CONTRATO
       END AS COD_CONTRATO,
       CASE
         WHEN P.EXIBIR_PESSOA = 'S' THEN
          A.DES_PESSOA
         ELSE
          'OCULTO'
       END AS DES_PESSOA,
       CASE
         WHEN P.EXIBIR_PESSOA = 'S' THEN
          A.DATA_ADMISSAO
       END AS DATA_ADMISSAO,
       CASE
         WHEN P.EXIBIR_PESSOA = 'S' THEN
          A.DATA_DEMISSAO
       END AS DATA_DEMISSAO,
       /*CASE
         WHEN P.EXIBIR_IDENT = 'N' THEN
          SUBSTR(STANDARD_HASH(TO_CHAR(A.COD_CONTRATO) || P.SALT, 'SHA256'),
                 1,
                 12)
       END AS ID_ANONIMO,*/
       CASE
          WHEN P.EXIBIR_PESSOA = 'S' THEN
           NULL
          ELSE
           SUBSTR(RAWTOHEX(STANDARD_HASH(LPAD(TO_CHAR(A.COD_CONTRATO),
                                              10,
                                              '0') || P.SALT,
                                         'SHA256')),
                  1,
                  12)
        END AS ID_ANONIMO,

       -- DEMAIS COLUNAS (SEM ALTERAÇÕES)
       A.DES_DEMISSAO,
       A.COD_ORGANOGRAMA,
       A.COD_UNIDADE,
       A.DES_UNIDADE,
       A.COD_EMP,

       TO_CHAR(NVL(A.VENCIMENTOS, 0), 'FM999G999G990D00') AS VENCIMENTOS,
       TO_CHAR(NVL(A.LIQUIDO, 0), 'FM999G999G990D00') AS LIQUIDO,
       TO_CHAR(NVL(A."RESCISAO_8%", 0), 'FM999G999G990D00') AS "RESCISAO_8%",
       TO_CHAR(NVL(A.RESC_CONTABIL, 0), 'FM999G999G990D00') AS RESC_CONTABIL,
       TO_CHAR(NVL(A."RESC_40%", 0), 'FM999G999G990D00') AS "RESC_40%",
       TO_CHAR(NVL(A.MULTA, 0), 'FM999G999G990D00') AS MULTA,
       TO_CHAR(NVL(A.TOTAL, 0), 'FM999G999G990D00') AS TOTAL,

       ' // //' AS ESP_1,
       -- TOTAIS DE UNIDADE (DESAMBIGUAÇÃO DE NOMES QUE SE REPETEM)
       B.COD_UNIDADE,
       TO_CHAR(NVL(B.VENCIMENTOS_UNI, 0), 'FM999G999G990D00') AS VENCIMENTOS_UNI,
       TO_CHAR(NVL(B.LIQUIDO_UNI, 0), 'FM999G999G990D00') AS LIQUIDO_UNI,
       TO_CHAR(NVL(B."RESCISAO_8%_UNI", 0), 'FM999G999G990D00') AS "RESCISAO_8%_UNI",
       TO_CHAR(NVL(B.RESC_CONTABIL_UNI, 0), 'FM999G999G990D00') AS RESC_CONTABIL_UNI,
       TO_CHAR(NVL(B."RESC_40%_UNI", 0), 'FM999G999G990D00') AS "RESC_40%_UNI",
       TO_CHAR(NVL(B.MULTA_UNI, 0), 'FM999G999G990D00') AS MULTA_UNI,
       TO_CHAR(NVL(B.TOTAL_UNI, 0), 'FM999G999G990D00') AS TOTAL_UNI,
       B.QTD_CONTRATOS_UNI,

       ' // //' AS ESP_2,
       -- TOTAIS GERAIS
       C.COD_EMP,
       TO_CHAR(NVL(C.VENCIMENTOS_GE, 0), 'FM999G999G990D00') AS VENCIMENTOS_GE,
       TO_CHAR(NVL(C.LIQUIDO_GE, 0), 'FM999G999G990D00') AS LIQUIDO_GE,
       TO_CHAR(NVL(C."RESCISAO_8%_GE", 0), 'FM999G999G990D00') AS "RESCISAO_8%_GE",
       TO_CHAR(NVL(C.RESC_CONTABIL_GE, 0), 'FM999G999G990D00') AS RESC_CONTABIL_GE,
       TO_CHAR(NVL(C."RESC_40%_GE", 0), 'FM999G999G990D00') AS "RESC_40%_GE",
       TO_CHAR(NVL(C.MULTA_GE, 0), 'FM999G999G990D00') AS MULTA_GE,
       TO_CHAR(NVL(C.TOTAL_GE, 0), 'FM999G999G990D00') AS TOTAL_GE,
       C.QTD_CONTRATOS_GE,
       'Tipo: ' || :TIPO || ' | ' || 'Unidade(s): ' || :UNIDADE || ' | ' || 'Exibir Contrato? ' || :EXIBIR_PESSOA ||
       ' | ' || 'Referência: ' || :DATA_INICIO || ' - ' || :DATA_FIM AS PARAMETROS
  FROM TOTAIS A
  JOIN TOTAIS_UNI B ON A.COD_ORGANOGRAMA = B.COD_ORGANOGRAMA
  JOIN TOTAIS_GERAL C ON A.COD_EMP = C.COD_EMP
 CROSS JOIN PARAMS P
--WHERE A.COD_CONTRATO = 291250;  -- SEU FILTRO ATUAL
 ORDER BY A.COD_UNIDADE

WITH
MONTHS AS (
/*VERSÃO PARA USAR NO PL/SQL*/
SELECT ADD_MONTHS(TO_DATE('01/07/2025', 'DD/MM/YYYY'), LEVEL - 1) AS MONTH_START,
       LAST_DAY(ADD_MONTHS(TO_DATE('01/07/2025', 'DD/MM/YYYY'), LEVEL - 1)) AS MONTH_END,

       TO_CHAR(ADD_MONTHS(TO_DATE('01/07/2025', 'DD/MM/YYYY'), LEVEL - 1),
               'MM/YYYY') AS MES_ANO,
       INITCAP(TRIM(TO_CHAR(ADD_MONTHS(TO_DATE('01/07/2025', 'DD/MM/YYYY'),
                                       LEVEL - 1),
                            'Month'))) || '/' ||
       TO_CHAR(ADD_MONTHS(TO_DATE('01/07/2025', 'DD/MM/YYYY'), LEVEL - 1),
               'YYYY') AS MES_ANO_EXTENSO
  FROM DUAL
CONNECT BY LEVEL <=
           MONTHS_BETWEEN(TO_DATE('31/07/2025', 'DD/MM/YYYY'),
                          TO_DATE('01/07/2025', 'DD/MM/YYYY')) + 1


/*VERSÃO PARA INFORMAR AS DATAS
SELECT
    ADD_MONTHS(:DATA_INICIO, LEVEL - 1) AS MONTH_START,
    LAST_DAY(ADD_MONTHS(:DATA_INICIO, LEVEL - 1)) AS MONTH_END,

    TO_CHAR(ADD_MONTHS(:DATA_INICIO, LEVEL - 1), 'MM/YYYY') AS MES_ANO,

    INITCAP(TRIM(TO_CHAR(ADD_MONTHS(:DATA_INICIO, LEVEL - 1), 'Month'))) || '/' ||
    TO_CHAR(ADD_MONTHS(:DATA_INICIO, LEVEL - 1), 'YYYY') AS MES_ANO_EXTENSO

FROM DUAL
CONNECT BY LEVEL <= MONTHS_BETWEEN(:DATA_FIM, :DATA_INICIO) + 1*/

/*SELECT
  :DATA_INICIO AS MONTH_START,
  LAST_DAY(:DATA_FIM) AS MONTH_END,
  TO_CHAR(:DATA_INICIO, 'MM/YYYY') || ' - ' || TO_CHAR(:DATA_FIM, 'MM/YYYY') AS MES_ANO,
  INITCAP(TRIM(TO_CHAR(:DATA_INICIO, 'Month'))) || '/' || TO_CHAR(:DATA_INICIO, 'YYYY') || ' - ' ||
  INITCAP(TRIM(TO_CHAR(:DATA_FIM, 'Month'))) || '/' || TO_CHAR(:DATA_FIM, 'YYYY') AS MES_ANO_EXTENSO
FROM DUAL*/

),


CONTRATOS AS (
SELECT DISTINCT CT.STATUS,
                CT.COD_CONTRATO,
                CT.DES_PESSOA,
                CT.DATA_NASCIMENTO,
                CT.DATA_ADMISSAO,
                CT.DATA_DEMISSAO,
                FN.COD_FUNCAO,
                FN.DES_FUNCAO,
                FN.DATA_INI_CLH,
                FN.DATA_FIM_CLH,
                HR.HR_BASE_MES,
                HR.DATA_INI_HR,
                HR.DATA_FIM_HR,
                CT.IND_DEFICIENCIA,
                CT.SEXO,
                ORG.COD_EMP,
                ORG.EDICAO_EMP,
                ORG.DES_EMP,
                ORG.COD_ORGANOGRAMA,
                ORG.COD_UNIDADE,
                ORG.DES_UNIDADE,
                ORG.DATA_INI_ORG,
                ORG.DATA_FIM_ORG,
                CASE
                  WHEN ORG.COD_TIPO = 2 THEN
                   ORG.EDICAO_ORG_3
                  WHEN ORG.COD_TIPO = 3 THEN
                   ORG.EDICAO_ORG_3
                  ELSE
                   ORG.COD_UNIDADE
                END AS COD_FILIAL,
                CASE
                  WHEN ORG.COD_TIPO = 2 THEN
                   ORG.NOME3
                  WHEN ORG.COD_TIPO = 3 THEN
                   ORG.NOME3
                  ELSE
                   ORG.DES_UNIDADE
                END AS DES_FILIAL,
                CASE
                  WHEN ORG.COD_TIPO = 2 THEN
                   ORG.EDICAO_ORG_4
                  WHEN ORG.COD_TIPO = 3 THEN
                   ORG.EDICAO_ORG_4
                  ELSE
                   ORG.COD_UNIDADE
                END AS COD_DIVISAO,
                CASE
                  WHEN ORG.COD_TIPO = 2 THEN
                   ORG.NOME4
                  WHEN ORG.COD_TIPO = 3 THEN
                   ORG.NOME4
                  ELSE
                   ORG.DES_UNIDADE
                END AS DES_DIVISAO,
                ORG.COD_REDE,
                ORG.DES_REDE,
                ORG.COD_TIPO,
                ORG.DES_TIPO
  FROM V_DADOS_CONTRATO_AVT    CT,
       VH_EST_ORG_CONTRATO_AVT ORG,
       VH_HIST_HORAS_COLAB_AVT HR,
       VH_CARGO_CONTRATO_AVT   FN
 WHERE CT.COD_CONTRATO = ORG.COD_CONTRATO
   AND CT.COD_CONTRATO = HR.COD_CONTRATO
   AND CT.COD_CONTRATO = FN.COD_CONTRATO
   AND (CT.DATA_DEMISSAO IS NULL OR
       CT.DATA_DEMISSAO >= '01/07/2025')
   AND '31/07/2025' BETWEEN ORG.DATA_INI_ORG AND ORG.DATA_FIM_ORG
   AND '31/07/2025' BETWEEN FN.DATA_INI_CLH AND FN.DATA_FIM_CLH
   AND '31/07/2025' BETWEEN HR.DATA_INI_HR AND HR.DATA_FIM_HR
   AND ORG.COD_EMP = 8
   --AND ORG.COD_TIPO = 1
   AND ORG.EDICAO_ORG_4 IS NOT NULL
   AND ORG.COD_UNIDADE NOT IN (014, 050, 615, 7586, 7608)
   --AND ORG.COD_UNIDADE = 004
 ORDER BY CT.COD_CONTRATO
),

STATUS_AFASTADOS AS (
SELECT DISTINCT
       ORG.COD_EMP,
       CT.COD_CONTRATO,
       ORG.COD_ORGANOGRAMA,
       ORG.COD_UNIDADE,
       NVL(AF.COD_CAUSA_AFAST,0) AS STATUS_AFAST,
       AF.DATA_INICIO AS DATA_INI_AFAST,
       AF.DATA_FIM AS DATA_FIM_AFAST
  FROM RHFP0306 AF,
       RHFP0300 CT,
       VH_EST_ORG_CONTRATO_AVT ORG,
       VH_CARGO_CONTRATO_AVT FN
 WHERE CT.COD_CONTRATO = AF.COD_CONTRATO(+)
   AND CT.COD_CONTRATO = ORG.COD_CONTRATO(+)
   AND CT.COD_CONTRATO = FN.COD_CONTRATO(+)
   AND (('31/07/2025' BETWEEN CT.DATA_INICIO AND CT.DATA_FIM) OR
        (CT.DATA_INICIO <= '31/07/2025' AND CT.DATA_FIM IS NULL))
   AND '31/07/2025' BETWEEN AF.DATA_INICIO(+) AND AF.DATA_FIM(+)
   AND '31/07/2025' BETWEEN ORG.DATA_INI_ORG(+) AND ORG.DATA_FIM_ORG(+)
   AND '31/07/2025' BETWEEN FN.DATA_INI_CLH AND FN.DATA_FIM_CLH(+)
   AND ORG.COD_EMP = 8
   AND ORG.COD_UNIDADE NOT IN (014, 050, 615, 7586, 7608)
   --AND ORG.COD_TIPO = 1
   --AND ORG.COD_UNIDADE NOT IN (014, 050, 615, 657, 7586, 7608) --657 essa ainda irá inaugurar em agosto
),


EFETIVO_INICIAL_UNI AS (
    SELECT CTR.COD_ORGANOGRAMA,
           CTR.COD_UNIDADE,
           CTR.COD_REDE,
           CTR.COD_EMP,
           CTR.COD_TIPO,
           M.MONTH_START,
           COUNT(DISTINCT CTR.COD_CONTRATO) AS EFETIVO_INICIAL
      FROM CONTRATOS CTR
     CROSS JOIN MONTHS M
     WHERE ('01/' || TO_CHAR(M.MONTH_START, 'MM/YYYY')) BETWEEN
           CTR.DATA_ADMISSAO AND NVL(CTR.DATA_DEMISSAO, '31/12/9999')
       AND ('01/' || TO_CHAR(M.MONTH_START, 'MM/YYYY')) BETWEEN
           CTR.DATA_INI_ORG AND NVL(CTR.DATA_FIM_ORG, '31/12/9999')
       AND (UPPER(CTR.DES_FUNCAO) NOT LIKE '%ESTAGIARIO%' AND
            UPPER(CTR.DES_FUNCAO) NOT LIKE '%APRENDIZ%' AND
            UPPER(CTR.DES_FUNCAO) NOT LIKE '%TEMPORARIO%')

     GROUP BY CTR.COD_ORGANOGRAMA, 
              CTR.COD_UNIDADE,
              CTR.COD_REDE,
              CTR.COD_EMP, 
              M.MONTH_START, 
              CTR.COD_TIPO
),
EFETIVO_FINAL_UNI AS (
    SELECT CTR.COD_ORGANOGRAMA,
           CTR.COD_UNIDADE,
           CTR.COD_REDE,
           CTR.COD_EMP,
           CTR.COD_TIPO,
           M.MONTH_END,
           COUNT(DISTINCT CTR.COD_CONTRATO) AS EFETIVO_FINAL
      FROM CONTRATOS CTR
     CROSS JOIN MONTHS M
     WHERE LAST_DAY(TO_DATE('' || TO_CHAR(M.MONTH_END, 'DD/MM/YYYY'))) BETWEEN
           CTR.DATA_ADMISSAO AND NVL(CTR.DATA_DEMISSAO, '31/12/9999')
       AND LAST_DAY(TO_DATE('' || TO_CHAR(M.MONTH_END, 'DD/MM/YYYY'))) BETWEEN
           CTR.DATA_INI_ORG AND NVL(CTR.DATA_FIM_ORG, '31/12/9999')
       AND (UPPER(CTR.DES_FUNCAO) NOT LIKE '%ESTAGIARIO%' AND
            UPPER(CTR.DES_FUNCAO) NOT LIKE '%APRENDIZ%' AND
            UPPER(CTR.DES_FUNCAO) NOT LIKE '%TEMPORARIO%')
     GROUP BY CTR.COD_ORGANOGRAMA, 
              CTR.COD_UNIDADE,
              CTR.COD_REDE,
              CTR.COD_EMP, 
              M.MONTH_END, 
              CTR.COD_TIPO
),


DATAMETRICS_UNI AS (
SELECT A.COD_ORGANOGRAMA,
       A.COD_UNIDADE,
       A.DES_UNIDADE,
       A.COD_REDE,
       A.COD_EMP,
       A.COD_TIPO,
       M.MONTH_START,
       M.MONTH_END,
       
       COUNT(DISTINCT CASE
               WHEN A.DATA_DEMISSAO IS NULL OR A.DATA_DEMISSAO > SYSDATE THEN
                A.COD_CONTRATO
             END) AS ATIVOS_ATUAIS,
       
       COUNT(DISTINCT CASE
               WHEN A.DATA_ADMISSAO <= M.MONTH_END AND
                   (A.DATA_DEMISSAO IS NULL OR A.DATA_DEMISSAO >= M.MONTH_END) THEN
                A.COD_CONTRATO
             END) AS ATIVOS_PERIODO,
       
       COUNT(DISTINCT CASE
               WHEN B.DATA_INI_AFAST <= M.MONTH_END AND
                   (B.DATA_FIM_AFAST IS NULL OR B.DATA_FIM_AFAST >= M.MONTH_START) AND
                    B.DATA_FIM_AFAST <> TO_DATE('31/12/2999', 'DD/MM/YYYY') AND
                    B.STATUS_AFAST <> 7 THEN
                A.COD_CONTRATO
             END) AS AFAST_PERIODO,
       
       COUNT(DISTINCT CASE
               WHEN A.DATA_ADMISSAO BETWEEN M.MONTH_START AND M.MONTH_END THEN
                A.COD_CONTRATO
             END) AS ADMITIDOS,
       
       COUNT(DISTINCT CASE
               WHEN A.DATA_DEMISSAO BETWEEN M.MONTH_START AND M.MONTH_END THEN
                A.COD_CONTRATO
             END) AS DEMITIDOS

  FROM CONTRATOS A
  LEFT JOIN STATUS_AFASTADOS B ON A.COD_CONTRATO = B.COD_CONTRATO
 CROSS JOIN MONTHS M
 WHERE (UPPER(A.DES_FUNCAO) NOT LIKE '%ESTAGIARIO%' AND
        UPPER(A.DES_FUNCAO) NOT LIKE '%APRENDIZ%' AND
        UPPER(A.DES_FUNCAO) NOT LIKE '%TEMPORARIO%')
 GROUP BY A.COD_ORGANOGRAMA,
          A.COD_UNIDADE,
          A.DES_UNIDADE,
          A.COD_REDE,
          A.COD_EMP,
          A.COD_TIPO,
          M.MONTH_START,
          M.MONTH_END
),

TURNOVER_UNI AS (
SELECT A.COD_ORGANOGRAMA,
       A.COD_UNIDADE,
       A.DES_UNIDADE,
       A.COD_REDE,
       A.DES_REDE,
       A.COD_EMP,
       A.COD_TIPO,
       DM.ATIVOS_ATUAIS,
       DM.ATIVOS_PERIODO,
       DM.AFAST_PERIODO,
       DM.ADMITIDOS,
       DM.DEMITIDOS,
       EI.EFETIVO_INICIAL,
       EF.EFETIVO_FINAL,
       (EI.EFETIVO_INICIAL + EF.EFETIVO_FINAL) / 2 AS EFETIVO_MEDIO,
       ROUND(CASE
               WHEN (EI.EFETIVO_INICIAL + EF.EFETIVO_FINAL) / 2 = 0 THEN
                0
               ELSE
                (DM.DEMITIDOS * 100) /
                ((EI.EFETIVO_INICIAL + EF.EFETIVO_FINAL) / 2)
             END,
             2) AS TURNOVER
  FROM (SELECT DISTINCT COD_ORGANOGRAMA,
                        COD_UNIDADE,
                        DES_UNIDADE,
                        COD_REDE,
                        DES_REDE,
                        COD_EMP,
                        COD_TIPO
          FROM CONTRATOS) A
  LEFT JOIN EFETIVO_INICIAL_UNI EI ON A.COD_ORGANOGRAMA =
                                      EI.COD_ORGANOGRAMA
  LEFT JOIN EFETIVO_FINAL_UNI EF ON A.COD_ORGANOGRAMA = EF.COD_ORGANOGRAMA
  LEFT JOIN DATAMETRICS_UNI DM ON A.COD_ORGANOGRAMA = DM.COD_ORGANOGRAMA
  /*WHERE (A.COD_UNIDADE = :UNIDADE OR :UNIDADE = 0)
    AND (A.COD_REDE = :REDE OR :REDE = 0)*/
    --AND (A.COD_TIPO = :TIPO OR :TIPO = 0)

),



/*RELAÇÃO POR REDE/ADM/CD*/

EFETIVO_INICIAL_RD AS (
    SELECT CTR.COD_REDE,
           CTR.COD_EMP,
           CTR.COD_TIPO,
           M.MONTH_START,
           COUNT(DISTINCT CTR.COD_CONTRATO) AS EFETIVO_INICIAL
      FROM CONTRATOS CTR
     CROSS JOIN MONTHS M
     WHERE ('01/' || TO_CHAR(M.MONTH_START, 'MM/YYYY')) BETWEEN
           CTR.DATA_ADMISSAO AND NVL(CTR.DATA_DEMISSAO, '31/12/9999')
       AND ('01/' || TO_CHAR(M.MONTH_START, 'MM/YYYY')) BETWEEN
           CTR.DATA_INI_ORG AND NVL(CTR.DATA_FIM_ORG, '31/12/9999')
       AND (UPPER(CTR.DES_FUNCAO) NOT LIKE '%ESTAGIARIO%' AND
            UPPER(CTR.DES_FUNCAO) NOT LIKE '%APRENDIZ%' AND
            UPPER(CTR.DES_FUNCAO) NOT LIKE '%TEMPORARIO%')

     GROUP BY CTR.COD_REDE,
              CTR.COD_EMP, 
              M.MONTH_START,
              CTR.COD_TIPO
),
EFETIVO_FINAL_RD AS (
    SELECT CTR.COD_REDE,
           CTR.COD_EMP,
           CTR.COD_TIPO,
           M.MONTH_END,
           COUNT(DISTINCT CTR.COD_CONTRATO) AS EFETIVO_FINAL
      FROM CONTRATOS CTR
     CROSS JOIN MONTHS M
     WHERE LAST_DAY(TO_DATE('' || TO_CHAR(M.MONTH_END, 'DD/MM/YYYY'))) BETWEEN
           CTR.DATA_ADMISSAO AND NVL(CTR.DATA_DEMISSAO, '31/12/9999')
       AND LAST_DAY(TO_DATE('' || TO_CHAR(M.MONTH_END, 'DD/MM/YYYY'))) BETWEEN
           CTR.DATA_INI_ORG AND NVL(CTR.DATA_FIM_ORG, '31/12/9999')
       AND (UPPER(CTR.DES_FUNCAO) NOT LIKE '%ESTAGIARIO%' AND
            UPPER(CTR.DES_FUNCAO) NOT LIKE '%APRENDIZ%' AND
            UPPER(CTR.DES_FUNCAO) NOT LIKE '%TEMPORARIO%')
     GROUP BY CTR.COD_REDE,
              CTR.COD_EMP, 
              M.MONTH_END,
              CTR.COD_TIPO
),


DATAMETRICS_RD AS (
SELECT A.COD_REDE,
       A.COD_EMP,
       A.COD_TIPO,
       M.MONTH_START,
       M.MONTH_END,
       
       COUNT(DISTINCT CASE
               WHEN A.DATA_DEMISSAO IS NULL OR A.DATA_DEMISSAO > SYSDATE THEN
                A.COD_CONTRATO
             END) AS ATIVOS_ATUAIS,
       
       COUNT(DISTINCT CASE
               WHEN A.DATA_ADMISSAO <= M.MONTH_END AND
                   (A.DATA_DEMISSAO IS NULL OR A.DATA_DEMISSAO >= M.MONTH_END) THEN
                A.COD_CONTRATO
             END) AS ATIVOS_PERIODO,
       
       COUNT(DISTINCT CASE
               WHEN B.DATA_INI_AFAST <= M.MONTH_END AND
                   (B.DATA_FIM_AFAST IS NULL OR B.DATA_FIM_AFAST >= M.MONTH_START) AND
                    B.DATA_FIM_AFAST <> TO_DATE('31/12/2999', 'DD/MM/YYYY') AND
                    B.STATUS_AFAST <> 7 THEN
                A.COD_CONTRATO
             END) AS AFAST_PERIODO,
       
       COUNT(DISTINCT CASE
               WHEN A.DATA_ADMISSAO BETWEEN M.MONTH_START AND M.MONTH_END THEN
                A.COD_CONTRATO
             END) AS ADMITIDOS,
       
       COUNT(DISTINCT CASE
               WHEN A.DATA_DEMISSAO BETWEEN M.MONTH_START AND M.MONTH_END THEN
                A.COD_CONTRATO
             END) AS DEMITIDOS

  FROM CONTRATOS A
  LEFT JOIN STATUS_AFASTADOS B ON A.COD_CONTRATO = B.COD_CONTRATO
 CROSS JOIN MONTHS M
 WHERE (UPPER(A.DES_FUNCAO) NOT LIKE '%ESTAGIARIO%' AND
        UPPER(A.DES_FUNCAO) NOT LIKE '%APRENDIZ%' AND
        UPPER(A.DES_FUNCAO) NOT LIKE '%TEMPORARIO%')
 GROUP BY A.COD_REDE,
          A.COD_EMP,
          A.COD_TIPO,
          M.MONTH_START,
          M.MONTH_END
),

TURNOVER_RD AS (
SELECT A.COD_REDE AS REDE,
       A.DES_REDE,
       A.COD_EMP,
       A.COD_TIPO AS TIPO,
       DM.ATIVOS_ATUAIS,
       DM.ATIVOS_PERIODO,
       DM.AFAST_PERIODO,
       DM.ADMITIDOS,
       DM.DEMITIDOS,
       EI.EFETIVO_INICIAL,
       EF.EFETIVO_FINAL,
       (EI.EFETIVO_INICIAL + EF.EFETIVO_FINAL) / 2 AS EFETIVO_MEDIO,
       ROUND(CASE
               WHEN (EI.EFETIVO_INICIAL + EF.EFETIVO_FINAL) / 2 = 0 THEN
                0
               ELSE
                (DM.DEMITIDOS * 100) /
                ((EI.EFETIVO_INICIAL + EF.EFETIVO_FINAL) / 2)
             END,
             2) AS TURNOVER
  FROM (SELECT DISTINCT COD_REDE,
                        DES_REDE,
                        COD_EMP,
                        COD_TIPO
          FROM CONTRATOS) A
  LEFT JOIN EFETIVO_INICIAL_RD EI
         ON A.COD_REDE = EI.COD_REDE AND A.COD_TIPO = EI.COD_TIPO AND A.COD_EMP = EI.COD_EMP
  LEFT JOIN EFETIVO_FINAL_RD EF
         ON A.COD_REDE = EF.COD_REDE AND A.COD_TIPO = EF.COD_TIPO AND A.COD_EMP = EF.COD_EMP
  LEFT JOIN DATAMETRICS_RD DM
         ON A.COD_REDE = DM.COD_REDE AND A.COD_TIPO = DM.COD_TIPO AND A.COD_EMP = DM.COD_EMP
  /*WHERE (A.COD_UNIDADE = :UNIDADE OR :UNIDADE = 0)
    AND (A.COD_REDE = :REDE OR :REDE = 0)*/
    --AND (A.COD_TIPO = :TIPO OR :TIPO = 0)

),

TURNOVER_UNIDADE AS (
  SELECT ROW_NUMBER() OVER (
           ORDER BY COD_TIPO, COD_REDE, COD_ORGANOGRAMA, COD_EMP
         ) AS RN, T.*
  FROM TURNOVER_UNI T
  
),

TURNOVER_REDE AS (
  SELECT
    ROW_NUMBER() OVER (ORDER BY TIPO, REDE, DES_REDE) AS RN,
    R.*
  FROM TURNOVER_RD R
),



PERIODO AS (
  SELECT MIN(MONTH_START) AS INI, MAX(MONTH_END) AS FIM FROM MONTHS
)



SELECT --A.COD_UNIDADE AS COD_UNIDADE,
       U.COD_TIPO,
       U.DES_UNIDADE,
       U.DES_REDE,
       'Ref: ' || P.INI || ' - ' || P.FIM AS REFERENCIA,

       --NVL(PFM.TOT_COLAB, 0) AS COLABORADORES,
       U.ATIVOS_ATUAIS,
       U.ATIVOS_PERIODO,
       U.AFAST_PERIODO,
       U.ADMITIDOS,
       U.DEMITIDOS,
       U.EFETIVO_INICIAL,
       U.EFETIVO_FINAL,
       U.EFETIVO_MEDIO,

       ROUND(U.TURNOVER, 2) AS "%_TURNOVER",
       
       R.REDE,
       R.DES_REDE,
       R.ATIVOS_ATUAIS,
       R.ATIVOS_PERIODO,
       R.AFAST_PERIODO,
       R.ADMITIDOS,
       R.DEMITIDOS,
       R.EFETIVO_INICIAL,
       R.EFETIVO_FINAL,
       R.EFETIVO_MEDIO,

       ROUND(R.TURNOVER, 2) AS "%_TURNOVER"

  FROM /*(SELECT DISTINCT COD_UNIDADE,
                        DES_UNIDADE,
                        COD_REDE,
                        DES_REDE,
                        COD_EMP,
                        COD_TIPO,
                        COD_ORGANOGRAMA
          FROM CONTRATOS) A*/

  TURNOVER_UNIDADE U
  FULL OUTER JOIN TURNOVER_REDE R ON U.RN = R.RN
  CROSS JOIN PERIODO P

 /*WHERE NVL(U.TURNOVER, 0) <> 0
    OR NVL(R.TURNOVER, 0) <> 0*/
    
ORDER BY NVL(U.RN, R.RN);

-- Agrupamento por unidade
 /*GROUP BY U.COD_TIPO,
          --A.COD_UNIDADE,
          U.DES_UNIDADE,
          U.DES_REDE,
          M.MONTH_START,
          M.MONTH_END,
          U.ATIVOS_ATUAIS,
          U.ATIVOS_PERIODO,
          U.AFAST_PERIODO,
          U.ADMITIDOS,
          U.DEMITIDOS,
          U.EFETIVO_INICIAL,
          U.EFETIVO_FINAL,
          U.EFETIVO_MEDIO,
          
          \*REDES*\
          R.REDE,
          R.DES_REDE,
          R.ATIVOS_ATUAIS,
          R.ATIVOS_PERIODO,
          R.AFAST_PERIODO,
          R.ADMITIDOS,
          R.DEMITIDOS,
          R.EFETIVO_INICIAL,
          R.EFETIVO_FINAL,
          R.EFETIVO_MEDIO

ORDER BY U.COD_TIPO, U.DES_UNIDADE*/

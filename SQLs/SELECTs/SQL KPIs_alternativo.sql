WITH
CONTRATOS AS (
SELECT DISTINCT CT.STATUS,
                CT.COD_CONTRATO,
                CT.DES_PESSOA,
                CT.DATA_NASCIMENTO,
                CT.DATA_ADMISSAO,
                CT.DATA_DEMISSAO,
                FN.COD_FUNCAO,
                FN.DES_FUNCAO,
                FN.DATA_INI_CLH,
                FN.DATA_FIM_CLH,
                HR.HR_BASE_MES,
                HR.DATA_INI_HR,
                HR.DATA_FIM_HR,
                CT.IND_DEFICIENCIA,
                CT.SEXO,
                ORG.COD_EMP,
                ORG.EDICAO_EMP,
                ORG.DES_EMP,
                ORG.COD_ORGANOGRAMA,
                ORG.COD_UNIDADE,
                ORG.DES_UNIDADE,
                ORG.DATA_INI_ORG,
                ORG.DATA_FIM_ORG,
                CASE
                  WHEN ORG.COD_TIPO = 2 THEN
                   ORG.EDICAO_ORG_3
                  WHEN ORG.COD_TIPO = 3 THEN
                   ORG.EDICAO_ORG_3
                  ELSE
                   ORG.COD_UNIDADE
                END AS COD_FILIAL,
                CASE
                  WHEN ORG.COD_TIPO = 2 THEN
                   ORG.NOME3
                  WHEN ORG.COD_TIPO = 3 THEN
                   ORG.NOME3
                  ELSE
                   ORG.DES_UNIDADE
                END AS DES_FILIAL,
                CASE
                  WHEN ORG.COD_TIPO = 2 THEN
                   ORG.EDICAO_ORG_4
                  WHEN ORG.COD_TIPO = 3 THEN
                   ORG.EDICAO_ORG_4
                  ELSE
                   ORG.COD_UNIDADE
                END AS COD_DIVISAO,
                CASE
                  WHEN ORG.COD_TIPO = 2 THEN
                   ORG.NOME4
                  WHEN ORG.COD_TIPO = 3 THEN
                   ORG.NOME4
                  ELSE
                   ORG.DES_UNIDADE
                END AS DES_DIVISAO,
                ORG.COD_REDE,
                ORG.DES_REDE,
                ORG.COD_TIPO,
                ORG.DES_TIPO
  FROM V_DADOS_CONTRATO_AVT    CT,
       VH_EST_ORG_CONTRATO_AVT ORG,
       VH_HIST_HORAS_COLAB_AVT HR,
       VH_CARGO_CONTRATO_AVT   FN
 WHERE CT.COD_CONTRATO = ORG.COD_CONTRATO
   AND CT.COD_CONTRATO = HR.COD_CONTRATO
   AND CT.COD_CONTRATO = FN.COD_CONTRATO
   AND (CT.DATA_DEMISSAO IS NULL OR
       CT.DATA_DEMISSAO >= TO_DATE('01/06/2025', 'DD/MM/YYYY'))      
   AND '30/06/2025' BETWEEN ORG.DATA_INI_ORG AND ORG.DATA_FIM_ORG
   AND '30/06/2025' BETWEEN FN.DATA_INI_CLH AND FN.DATA_FIM_CLH
   AND '30/06/2025' BETWEEN HR.DATA_INI_HR AND HR.DATA_FIM_HR
   AND ORG.COD_EMP = 8
   AND ORG.COD_TIPO = 1
   AND ORG.EDICAO_ORG_4 IS NOT NULL
   AND ORG.COD_UNIDADE NOT IN (014, 050, 615, 657, 7586, 7608)
   --AND ORG.COD_UNIDADE = 004
 ORDER BY CT.COD_CONTRATO
),

STATUS_AFASTADOS AS (
SELECT DISTINCT
       ORG.COD_EMP,
       CT.COD_CONTRATO,
       ORG.COD_ORGANOGRAMA,
       ORG.COD_UNIDADE,
       NVL(AF.COD_CAUSA_AFAST,0) AS STATUS_AFAST,
       AF.DATA_INICIO AS DATA_INI_AFAST,
       AF.DATA_FIM AS DATA_FIM_AFAST
  FROM RHFP0306 AF,
       RHFP0300 CT,
       VH_EST_ORG_CONTRATO_AVT ORG,
       VH_CARGO_CONTRATO_AVT FN
 WHERE CT.COD_CONTRATO = AF.COD_CONTRATO(+)
   AND CT.COD_CONTRATO = ORG.COD_CONTRATO(+)
   AND CT.COD_CONTRATO = FN.COD_CONTRATO(+)
   AND (('30/06/2025' BETWEEN CT.DATA_INICIO AND CT.DATA_FIM) OR
        (CT.DATA_INICIO <= '30/06/2025' AND CT.DATA_FIM IS NULL))
   AND '30/06/2025' BETWEEN AF.DATA_INICIO(+) AND AF.DATA_FIM(+)
   AND '30/06/2025' BETWEEN ORG.DATA_INI_ORG(+) AND ORG.DATA_FIM_ORG(+)
   AND '30/06/2025' BETWEEN FN.DATA_INI_CLH AND FN.DATA_FIM_CLH(+)
   AND ORG.COD_EMP = 8
   AND ORG.COD_UNIDADE NOT IN (014, 050, 615, 657, 7586, 7608)
   AND ORG.COD_TIPO = 1
   --AND ORG.COD_UNIDADE NOT IN (014, 050, 615, 657, 7586, 7608) --657 essa ainda irá inaugurar em agosto
),


MONTHS AS (
--versão para usar no PL/SQL
/*SELECT ADD_MONTHS(TO_DATE('01/06/2025', 'DD/MM/YYYY'), LEVEL - 1) AS MONTH_START,
       LAST_DAY(ADD_MONTHS(TO_DATE('01/06/2025', 'DD/MM/YYYY'), LEVEL - 1)) AS MONTH_END
  FROM DUAL
CONNECT BY LEVEL <=
           MONTHS_BETWEEN(TO_DATE('30/06/2025', 'DD/MM/YYYY'),
                          TO_DATE('01/06/2025', 'DD/MM/YYYY')) + 1*/


SELECT ADD_MONTHS(TO_DATE('01/06/2025', 'DD/MM/YYYY'), LEVEL - 1) AS MONTH_START,
       LAST_DAY(ADD_MONTHS(TO_DATE('01/06/2025', 'DD/MM/YYYY'), LEVEL - 1)) AS MONTH_END,
       
       TO_CHAR(ADD_MONTHS(TO_DATE('01/06/2025', 'DD/MM/YYYY'), LEVEL - 1),
               'MM/YYYY') AS MES_ANO,
       INITCAP(TRIM(TO_CHAR(ADD_MONTHS(TO_DATE('01/06/2025', 'DD/MM/YYYY'),
                                       LEVEL - 1),
                            'Month'))) || '/' ||
       TO_CHAR(ADD_MONTHS(TO_DATE('01/06/2025', 'DD/MM/YYYY'), LEVEL - 1),
               'YYYY') AS MES_ANO_EXTENSO
  FROM DUAL
CONNECT BY LEVEL <=
           MONTHS_BETWEEN(TO_DATE('30/06/2025', 'DD/MM/YYYY'),
                          TO_DATE('01/06/2025', 'DD/MM/YYYY')) + 1


/*VERSÃO PARA INFORMAR AS DATAS*/
/*SELECT
  ADD_MONTHS(:DATA_INICIO, LEVEL - 1) AS MONTH_START,
  LAST_DAY(ADD_MONTHS(:DATA_INICIO, LEVEL - 1)) AS MONTH_END,
  TO_CHAR(ADD_MONTHS(:DATA_INICIO, LEVEL - 1), 'MM/YYYY') AS MES_ANO,
  INITCAP(TRIM(TO_CHAR(ADD_MONTHS(:DATA_INICIO, LEVEL - 1), 'Month'))) || '/' ||
  TO_CHAR(ADD_MONTHS(:DATA_INICIO, LEVEL - 1), 'YYYY') AS MES_ANO_EXTENSO
FROM DUAL
CONNECT BY LEVEL <= MONTHS_BETWEEN(:DATA_FIM, :DATA_INICIO) + 1*/

),



/*KPI 1 - PRODUTIVIDADE*/

VENDAS AS (
SELECT GE.COD_QUEBRA REGIAO,
       DECODE(A.COD_UNIDADE,
              7022, 22,
              7047, 47,
              7065, 65,
              7138, 138,
              7140, 140,
              7183, 183,
              7244, 244,
              7353, 353,
              7386, 386,
              7412, 412,
              7430, 430,
              7442, 442,
              7461, 461,
              7466, 466,
              7491, 491,
              7543, 543,
              7555, 555,
              7570, 570,
              7577, 653,
              7587, 587,
              7588, 588,
              7592, 592,
              7597, 597,
              7601, 601,
              7602, 608,
              7620, 620,
              7500, 651,
              7051, 652,
              7066, 654,
              A.COD_UNIDADE) COD_UNIDADE,
       GE.COD_GRUPO,
       MIN(D.DES_FANTASIA) DES_FANTASIA, -- USA MIN PARA "UNIFICAR"
       MIN(D.DTA_CADASTRO) DTA_CADASTRO, -- IDEM
       MIN(A.DTA_EMISSAO) DTA_ATUALIZACAO,
       SUM(OPER.VLR_OPERACAO) VALOR_VENDA_LOJA,
       SUM(CASE
             WHEN TO_CHAR(A.DTA_EMISSAO, 'D') = 1 THEN
              NVL(OPER.VLR_OPERACAO, 0)
             ELSE
              0
           END) VDA_DOMINGO
  FROM NL.NS_NOTAS@NLGRZ A
  JOIN NL.NS_NOTAS_OPERACOES@NLGRZ OPER ON A.NUM_SEQ = OPER.NUM_SEQ
                                       AND A.COD_MAQUINA = OPER.COD_MAQUINA
  JOIN NL.GE_GRUPOS_UNIDADES@NLGRZ GE ON A.COD_UNIDADE = GE.COD_UNIDADE
  JOIN NL.PS_PESSOAS@NLGRZ D ON A.COD_UNIDADE = D.COD_PESSOA
  CROSS JOIN MONTHS M
 WHERE A.DTA_EMISSAO BETWEEN M.MONTH_START AND M.MONTH_END
   AND GE.COD_GRUPO = 999
   AND GE.COD_EMP = 1
   --AND (A.COD_UNIDADE = :UNIDADE OR :UNIDADE = 0)
      --AND A.COD_UNIDADE >= 0
      --AND A.COD_UNIDADE <= 999
   AND A.IND_STATUS = 1
   AND A.TIP_NOTA = 4
   AND D.IND_INATIVO = 0
 GROUP BY GE.COD_QUEBRA,
          DECODE(A.COD_UNIDADE,
                 7022, 22,
                 7047, 47,
                 7065, 65,
                 7138, 138,
                 7140, 140,
                 7183, 183,
                 7244, 244,
                 7353, 353,
                 7386, 386,
                 7412, 412,
                 7430, 430,
                 7442, 442,
                 7461, 461,
                 7466, 466,
                 7491, 491,
                 7543, 543,
                 7555, 555,
                 7570, 570,
                 7577, 653,
                 7587, 587,
                 7588, 588,
                 7592, 592,
                 7597, 597,
                 7601, 601,
                 7602, 608,
                 7620, 620,
                 7500, 651,
                 7051, 652,
                 7066, 654,
                 A.COD_UNIDADE),
          GE.COD_GRUPO
 ORDER BY GE.COD_QUEBRA, COD_UNIDADE, DES_FANTASIA

),

TOTAL_HORAS AS (
SELECT A.COD_ORGANOGRAMA,
       A.COD_UNIDADE,
       SUM(CASE
             WHEN A.IND_DEFICIENCIA = 'S' THEN
              0
             ELSE
              TO_NUMBER(A.HR_BASE_MES)
           END) AS TOTAL_HRS
  FROM CONTRATOS A
  LEFT JOIN STATUS_AFASTADOS B ON A.COD_CONTRATO = B.COD_CONTRATO
 CROSS JOIN MONTHS M
 WHERE NVL(B.STATUS_AFAST, 0) IN (0, 6, 7, 107)
   AND A.COD_FUNCAO NOT IN (74, 75, 310, 409, 68)
      --AND A.COD_TIPO = 1
   AND A.DATA_ADMISSAO <= LAST_DAY(M.MONTH_END)
   AND (A.DATA_DEMISSAO IS NULL OR A.DATA_DEMISSAO >= M.MONTH_END)
   AND M.MONTH_END BETWEEN A.DATA_INI_ORG AND A.DATA_FIM_ORG
   AND M.MONTH_END BETWEEN A.DATA_INI_CLH AND A.DATA_FIM_CLH
   AND M.MONTH_END BETWEEN A.DATA_INI_HR AND A.DATA_FIM_HR
 GROUP BY A.COD_ORGANOGRAMA, A.COD_UNIDADE
),


PRODUTIVIDADE AS (
SELECT A.COD_UNIDADE,
       MIN(A.DES_FANTASIA) AS DES_FANTASIA,
       TT.TOTAL_HRS,
       TRUNC(A.VALOR_VENDA_LOJA / NULLIF(TT.TOTAL_HRS, 0)) AS PRODUTIVIDADE
  FROM VENDAS A
  LEFT JOIN TOTAL_HORAS TT ON A.COD_UNIDADE = TT.COD_UNIDADE
 GROUP BY A.COD_UNIDADE, A.VALOR_VENDA_LOJA, TT.TOTAL_HRS
),


--===========================================

/*KPI 2 - TURNOVER*/

EFETIVO_INICIAL_TUR AS (
    SELECT CTR.COD_ORGANOGRAMA,
           CTR.COD_UNIDADE,
           M.MONTH_START,
           COUNT(DISTINCT CTR.COD_CONTRATO) AS EFETIVO_INICIAL
      FROM CONTRATOS CTR
     CROSS JOIN MONTHS M
     WHERE ('01/' || TO_CHAR(M.MONTH_START, 'MM/YYYY')) BETWEEN
           CTR.DATA_ADMISSAO AND NVL(CTR.DATA_DEMISSAO, '31/12/9999')
       AND ('01/' || TO_CHAR(M.MONTH_START, 'MM/YYYY')) BETWEEN
           CTR.DATA_INI_ORG AND NVL(CTR.DATA_FIM_ORG, '31/12/9999')
       AND (UPPER(CTR.DES_FUNCAO) NOT LIKE '%ESTAGIARIO%' AND
           UPPER(CTR.DES_FUNCAO) NOT LIKE '%APRENDIZ%' AND
           UPPER(CTR.DES_FUNCAO) NOT LIKE '%TEMPORARIO%')
    
     GROUP BY CTR.COD_ORGANOGRAMA, CTR.COD_UNIDADE, M.MONTH_START
),
EFETIVO_FINAL_TUR AS (
    SELECT CTR.COD_ORGANOGRAMA,
           CTR.COD_UNIDADE,
           M.MONTH_END,
           COUNT(DISTINCT CTR.COD_CONTRATO) AS EFETIVO_FINAL
      FROM CONTRATOS CTR
     CROSS JOIN MONTHS M
     WHERE LAST_DAY(TO_DATE('' || TO_CHAR(M.MONTH_END, 'DD/MM/YYYY'))) BETWEEN
           CTR.DATA_ADMISSAO AND NVL(CTR.DATA_DEMISSAO, '31/12/9999')
       AND LAST_DAY(TO_DATE('' || TO_CHAR(M.MONTH_END, 'DD/MM/YYYY'))) BETWEEN
           CTR.DATA_INI_ORG AND NVL(CTR.DATA_FIM_ORG, '31/12/9999')
       AND (UPPER(CTR.DES_FUNCAO) NOT LIKE '%ESTAGIARIO%' AND
            UPPER(CTR.DES_FUNCAO) NOT LIKE '%APRENDIZ%' AND
            UPPER(CTR.DES_FUNCAO) NOT LIKE '%TEMPORARIO%')
     GROUP BY CTR.COD_ORGANOGRAMA, CTR.COD_UNIDADE, M.MONTH_END
),


DEMITIDOS_TUR AS (
SELECT A.COD_ORGANOGRAMA,
       A.COD_UNIDADE,
       A.DES_UNIDADE,
       M.MONTH_START,
       M.MONTH_END,
       COUNT(DISTINCT CASE
               WHEN A.DATA_DEMISSAO BETWEEN M.MONTH_START AND M.MONTH_END THEN
                A.COD_CONTRATO
             END) AS DEMITIDOS
  FROM CONTRATOS A
 CROSS JOIN MONTHS M
 WHERE (UPPER(A.DES_FUNCAO) NOT LIKE '%ESTAGIARIO%' AND
       UPPER(A.DES_FUNCAO) NOT LIKE '%APRENDIZ%' AND
       UPPER(A.DES_FUNCAO) NOT LIKE '%TEMPORARIO%')
 GROUP BY A.COD_ORGANOGRAMA,
          A.COD_UNIDADE,
          A.DES_UNIDADE,
          M.MONTH_START,
          M.MONTH_END

),


TURNOVER AS (
SELECT A.COD_ORGANOGRAMA,
       A.COD_UNIDADE,
       A.DES_UNIDADE,
       A.COD_REDE,
       A.DES_REDE,
       A.COD_TIPO,
       (EI.EFETIVO_INICIAL + EF.EFETIVO_FINAL) / 2 AS EFETIVO_MEDIO,
       ROUND(CASE
               WHEN (EI.EFETIVO_INICIAL + EF.EFETIVO_FINAL) / 2 = 0 THEN
                0
               ELSE
                (DM.DEMITIDOS * 100) /
                ((EI.EFETIVO_INICIAL + EF.EFETIVO_FINAL) / 2)
             END,
             2) AS TURNOVER
  FROM (SELECT DISTINCT COD_ORGANOGRAMA,
                        COD_UNIDADE,
                        DES_UNIDADE,
                        COD_REDE,
                        DES_REDE,
                        COD_TIPO
          FROM CONTRATOS) A
  LEFT JOIN EFETIVO_INICIAL_TUR EI ON A.COD_ORGANOGRAMA =
                                      EI.COD_ORGANOGRAMA
  LEFT JOIN EFETIVO_FINAL_TUR EF ON A.COD_ORGANOGRAMA = EF.COD_ORGANOGRAMA
  LEFT JOIN DEMITIDOS_TUR DM ON A.COD_ORGANOGRAMA = DM.COD_ORGANOGRAMA
),




--===========================================


/*KPI 3 - ROTATIVIDADE*/

EFETIVO_INICIAL_ROT AS (
SELECT CTR.COD_ORGANOGRAMA,
       CTR.COD_UNIDADE,
       M.MONTH_START,
       COUNT(DISTINCT CTR.COD_CONTRATO) AS EFETIVO_INICIAL
  FROM CONTRATOS CTR
 CROSS JOIN MONTHS M
 WHERE ('01/' || TO_CHAR(M.MONTH_START, 'MM/YYYY')) BETWEEN
       CTR.DATA_ADMISSAO AND NVL(CTR.DATA_DEMISSAO, '31/12/9999')
   AND ('01/' || TO_CHAR(M.MONTH_START, 'MM/YYYY')) BETWEEN
       CTR.DATA_INI_ORG AND NVL(CTR.DATA_FIM_ORG, '31/12/9999')
   AND (UPPER(CTR.DES_FUNCAO) NOT LIKE '%ESTAGIARIO%' AND
       UPPER(CTR.DES_FUNCAO) NOT LIKE '%APRENDIZ%')
-- sem barrar TEMPORÁRIO!

 GROUP BY CTR.COD_ORGANOGRAMA, CTR.COD_UNIDADE, M.MONTH_START
),
EFETIVO_FINAL_ROT AS (
SELECT CTR.COD_ORGANOGRAMA,
       CTR.COD_UNIDADE,
       M.MONTH_END,
       COUNT(DISTINCT CTR.COD_CONTRATO) AS EFETIVO_FINAL
  FROM CONTRATOS CTR
 CROSS JOIN MONTHS M
 WHERE LAST_DAY(TO_DATE('' || TO_CHAR(M.MONTH_END, 'DD/MM/YYYY'))) BETWEEN
       CTR.DATA_ADMISSAO AND NVL(CTR.DATA_DEMISSAO, '31/12/9999')
   AND LAST_DAY(TO_DATE('' || TO_CHAR(M.MONTH_END, 'DD/MM/YYYY'))) BETWEEN
       CTR.DATA_INI_ORG AND NVL(CTR.DATA_FIM_ORG, '31/12/9999')
   AND (UPPER(CTR.DES_FUNCAO) NOT LIKE '%ESTAGIARIO%' AND
        UPPER(CTR.DES_FUNCAO) NOT LIKE '%APRENDIZ%')
-- sem barrar TEMPORÁRIO!

 GROUP BY CTR.COD_ORGANOGRAMA, CTR.COD_UNIDADE, M.MONTH_END
),



ADMITIDOS_ROT AS (
SELECT A.COD_ORGANOGRAMA,
       A.COD_UNIDADE,
       A.DES_UNIDADE,
       M.MONTH_START,
       M.MONTH_END,
       COUNT(DISTINCT CASE
               WHEN A.DATA_ADMISSAO BETWEEN M.MONTH_START AND M.MONTH_END THEN
                A.COD_CONTRATO
             END) AS ADMITIDOS
  FROM CONTRATOS A
 CROSS JOIN MONTHS M
 WHERE (UPPER(A.DES_FUNCAO) NOT LIKE '%ESTAGIARIO%' AND
       UPPER(A.DES_FUNCAO) NOT LIKE '%APRENDIZ%')
-- sem barrar TEMPORÁRIO!
 GROUP BY A.COD_ORGANOGRAMA,
          A.COD_UNIDADE,
          A.DES_UNIDADE,
          M.MONTH_START,
          M.MONTH_END

),


DEMITIDOS_ROT AS (
SELECT A.COD_ORGANOGRAMA,
       A.COD_UNIDADE,
       A.DES_UNIDADE,
       M.MONTH_START,
       M.MONTH_END,
       COUNT(DISTINCT CASE
               WHEN A.DATA_DEMISSAO BETWEEN M.MONTH_START AND M.MONTH_END THEN
                A.COD_CONTRATO
             END) AS DEMITIDOS
  FROM CONTRATOS A
 CROSS JOIN MONTHS M
 WHERE (UPPER(A.DES_FUNCAO) NOT LIKE '%ESTAGIARIO%' AND
       UPPER(A.DES_FUNCAO) NOT LIKE '%APRENDIZ%')
-- sem barrar TEMPORÁRIO!
 GROUP BY A.COD_ORGANOGRAMA,
          A.COD_UNIDADE,
          A.DES_UNIDADE,
          M.MONTH_START,
          M.MONTH_END

),


ROTATIVIDADE AS (
SELECT A.COD_ORGANOGRAMA,
       A.COD_UNIDADE,
       A.DES_UNIDADE,
       A.COD_REDE,
       A.DES_REDE,
       A.COD_TIPO,
       AD.ADMITIDOS,
       DM.DEMITIDOS,
       (EI.EFETIVO_INICIAL + EF.EFETIVO_FINAL) / 2 AS EFETIVO_MEDIO,
       ROUND(CASE
               WHEN (EI.EFETIVO_INICIAL + EF.EFETIVO_FINAL) / 2 = 0 THEN
                0
               ELSE
                (((NVL(AD.ADMITIDOS, 0) + NVL(DM.DEMITIDOS, 0)) / 2) * 100) /
                ((EI.EFETIVO_INICIAL + EF.EFETIVO_FINAL) / 2)
             END,
             2) AS ROTATIVIDADE
  FROM (SELECT DISTINCT COD_ORGANOGRAMA,
                        COD_UNIDADE,
                        DES_UNIDADE,
                        COD_REDE,
                        DES_REDE,
                        COD_TIPO
          FROM CONTRATOS) A
  LEFT JOIN EFETIVO_INICIAL_ROT EI ON A.COD_ORGANOGRAMA =
                                      EI.COD_ORGANOGRAMA
  LEFT JOIN EFETIVO_FINAL_ROT EF ON A.COD_ORGANOGRAMA = EF.COD_ORGANOGRAMA
  LEFT JOIN DEMITIDOS_ROT DM ON A.COD_ORGANOGRAMA = DM.COD_ORGANOGRAMA
  LEFT JOIN ADMITIDOS_ROT AD ON A.COD_ORGANOGRAMA = AD.COD_ORGANOGRAMA

),


--==============================================

/*KPI 4 - ABSENTEISMO*/


-- CTE para consolidar as ocorrências do período
CTE_HORAS AS (
    SELECT CT.COD_ORGANOGRAMA,
           CT.COD_UNIDADE,
           CT.DES_UNIDADE,
           CT.COD_REDE,
           CT.DES_REDE,
           CT.COD_TIPO,
           CT.COD_EMP,
           TO_CHAR(TRUNC(HM.DATA_OCORRENCIA, 'MM'), 'MM/YYYY') AS MES_ANO,
           SUM(CASE
                 WHEN COD_OCORRENCIA = 2 THEN
                  NUM_HORAS
                 ELSE
                  0
               END) AS TOT_HORAS_TRAB
    
      FROM RHAF1123 HM
      LEFT JOIN RHAF1119 TU ON HM.COD_CONTRATO = TU.COD_CONTRATO
     INNER JOIN CONTRATOS CT ON HM.COD_CONTRATO = CT.COD_CONTRATO
      LEFT JOIN STATUS_AFASTADOS AF ON HM.COD_CONTRATO = AF.COD_CONTRATO
     CROSS JOIN MONTHS M
     WHERE HM.DATA_OCORRENCIA BETWEEN M.MONTH_START AND M.MONTH_END
       AND (TU.DATA_FIM = '31/12/2999' OR TU.DATA_FIM >= M.MONTH_END)
       AND (TU.DATA_INICIO <= M.MONTH_END)
       AND TU.COD_TURNO <> 85
       AND AF.STATUS_AFAST IN (0, 6, 7, 107)
    /*AND (B.COD_TIPO = :TIPO OR :TIPO = 0)
           AND (B.COD_UNIDADE = :FILIAL OR :FILIAL = 0)
           AND (B.COD_REDE = TO_CHAR(:REDE) OR TO_CHAR(:REDE) = 0)*/
    --AND HM.COD_CONTRATO = 392184
     GROUP BY CT.COD_ORGANOGRAMA,
              CT.COD_UNIDADE,
              CT.DES_UNIDADE,
              CT.COD_REDE,
              CT.DES_REDE,
              CT.COD_TIPO,
              CT.COD_EMP,
              TRUNC(HM.DATA_OCORRENCIA, 'MM')

),


CTE_ATESTADOS_FALTAS AS (
    SELECT B.COD_ORGANOGRAMA,
           B.COD_UNIDADE,
           B.DES_UNIDADE,
           B.COD_REDE,
           B.DES_REDE,
           B.COD_TIPO,
           B.COD_EMP,
           TO_CHAR(TRUNC(D.DATA_REFERENCIA, 'MM'), 'MM/YYYY') AS MES_ANO,
           -- TOTAL FALTAS
           SUM(CASE WHEN C.COD_VD = 632 THEN C.QTDE_VD ELSE 0 END) AS TOT_FALTAS,

           -- TOTAL ATESTADOS
           SUM(CASE WHEN C.COD_VD = 897 THEN C.QTDE_VD ELSE 0 END) AS TOT_ATESTADOS,

           -- TOTAL FALTAS + ATESTADOS
           SUM(CASE WHEN C.COD_VD IN (632, 897) THEN C.QTDE_VD ELSE 0 END) AS TOT_FALTAS_ATESTADOS
           --TO_HOUR_MINUTES_03(SUM(C.QTDE_VD)) AS TOTAL_HORAS_ATESTADOS
      FROM RHFP1006 C
     INNER JOIN RHFP1003 D ON C.COD_MESTRE_EVENTO = D.COD_MESTRE_EVENTO
     INNER JOIN CONTRATOS B ON C.COD_CONTRATO = B.COD_CONTRATO
     CROSS JOIN MONTHS M                                    
     WHERE D.DATA_REFERENCIA BETWEEN M.MONTH_START AND M.MONTH_END
       AND D.COD_ORGANOGRAMA = 8
       /*AND (B.COD_TIPO = :TIPO OR :TIPO = 0)
       AND (B.COD_UNIDADE = :FILIAL OR :FILIAL = 0)
       AND (B.COD_REDE = TO_CHAR(:REDE) OR TO_CHAR(:REDE) = 0)*/
    --AND C.COD_CONTRATO = 392184
     GROUP BY B.COD_ORGANOGRAMA,
              B.COD_UNIDADE,
              B.DES_UNIDADE,
              B.COD_REDE,
              B.DES_REDE,
              B.COD_TIPO,
              B.COD_EMP,
              TRUNC(D.DATA_REFERENCIA, 'MM')
),


ABSENTEISMO AS (
SELECT H.COD_ORGANOGRAMA,
       H.COD_UNIDADE,
       H.DES_UNIDADE,
       NVL(ROUND(NVL(FT.TOT_FALTAS_ATESTADOS, 0) * 100 / NULLIF(NVL(H.TOT_HORAS_TRAB, 0), 0), 2), 0) AS ABSENTEISMO
FROM CTE_HORAS H
 LEFT JOIN CTE_ATESTADOS_FALTAS FT ON H.COD_ORGANOGRAMA = FT.COD_ORGANOGRAMA

),


--==============================================

/*KPI 5 - HORAS EXTRAS/BONUS DOMINGO*/


-- CTE para consolidar as ocorrências do período
HORAS_EXTRAS AS (
  SELECT CT.COD_EMP,
         CT.COD_UNIDADE,
         CT.DES_UNIDADE,
         SUM(CASE
               WHEN A.COD_VD IN
                    (325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 336) THEN
                COALESCE(A.QTDE_VD, 0)
               ELSE
                0
             END) AS QTDE_HORAS_EXTRAS,
         SUM(CASE
               WHEN A.COD_VD IN
                    (325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 336) THEN
                COALESCE(A.VALOR_VD, 0)
               ELSE
                0
             END) AS VLR_HORAS_EXTRAS,
         B.DATA_REFERENCIA,
         B.COD_EVENTO
    FROM RHFP1006 A
   INNER JOIN RHFP1003 B ON A.COD_MESTRE_EVENTO = B.COD_MESTRE_EVENTO
   INNER JOIN CONTRATOS CT ON A.COD_CONTRATO = CT.COD_CONTRATO
   CROSS JOIN MONTHS M 
   WHERE A.COD_VD IN
         (325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 336)
     AND B.COD_EVENTO IN (1, 8, 17, 19)
     AND B.DATA_REFERENCIA BETWEEN M.MONTH_START AND M.MONTH_END
   GROUP BY CT.COD_EMP,
            CT.COD_UNIDADE,
            CT.DES_UNIDADE,
            B.DATA_REFERENCIA,
            B.COD_EVENTO
),

REPOUSO_HORAS_EXTRAS AS (
  SELECT CT.COD_EMP,
         CT.COD_UNIDADE,
         CT.DES_UNIDADE,
         SUM(CASE
               WHEN A.COD_VD = 158 THEN
                COALESCE(A.QTDE_VD, 0)
               ELSE
                0
             END) AS QTDE_REP_HORAS_EXTRAS,
         SUM(CASE
               WHEN A.COD_VD = 158 THEN
                COALESCE(A.VALOR_VD, 0)
               ELSE
                0
             END) AS VLR_REP_HORAS_EXTRAS,
         B.DATA_REFERENCIA,
         B.COD_EVENTO
    FROM RHFP1006 A
   INNER JOIN RHFP1003 B ON A.COD_MESTRE_EVENTO = B.COD_MESTRE_EVENTO
   INNER JOIN CONTRATOS CT ON A.COD_CONTRATO = CT.COD_CONTRATO
   CROSS JOIN MONTHS M 
   WHERE A.COD_VD = 158
     AND B.COD_EVENTO IN (1, 8, 17, 19)
     AND B.DATA_REFERENCIA BETWEEN M.MONTH_START AND M.MONTH_END
   GROUP BY CT.COD_EMP,
            CT.COD_UNIDADE,
            CT.DES_UNIDADE,
            B.DATA_REFERENCIA,
            B.COD_EVENTO
),

BONUS_DOMINGO AS (
  SELECT CT.COD_EMP,
         CT.COD_UNIDADE,
         CT.DES_UNIDADE,
         SUM(CASE
               WHEN A.COD_VD = 323 THEN
                COALESCE(A.QTDE_VD, 0)
               ELSE
                0
             END) AS QTDE_BONUS_DOM,
         SUM(CASE
               WHEN A.COD_VD = 323 THEN
                COALESCE(A.VALOR_VD, 0)
               ELSE
                0
             END) AS VLR_BONUS_DOM,
         B.DATA_REFERENCIA,
         B.COD_EVENTO
    FROM RHFP1006 A
   INNER JOIN RHFP1003 B ON A.COD_MESTRE_EVENTO = B.COD_MESTRE_EVENTO
   INNER JOIN CONTRATOS CT ON A.COD_CONTRATO = CT.COD_CONTRATO
   CROSS JOIN MONTHS M 
   WHERE A.COD_VD = 323
     AND B.COD_EVENTO IN (1, 8, 17, 19)
     AND B.DATA_REFERENCIA BETWEEN M.MONTH_START AND M.MONTH_END
   GROUP BY CT.COD_EMP,
            CT.COD_UNIDADE,
            CT.DES_UNIDADE,
            B.DATA_REFERENCIA,
            B.COD_EVENTO
),

HRS_EXTRAS AS (
SELECT CT.COD_UNIDADE,
       NVL(HE.QTDE_HORAS_EXTRAS, 0) AS QTDE_HORAS_EXTRAS,
       NVL(HE.VLR_HORAS_EXTRAS, 0) AS VLR_HORAS_EXTRAS,
       NVL(RHE.VLR_REP_HORAS_EXTRAS, 0) AS VLR_REPOUSO_HR_EXTRAS,
       NVL(BD.VLR_BONUS_DOM, 0) AS VLR_BONUS_DOM
  FROM CONTRATOS CT
  LEFT JOIN HORAS_EXTRAS HE ON CT.COD_UNIDADE = HE.COD_UNIDADE
  LEFT JOIN REPOUSO_HORAS_EXTRAS RHE ON CT.COD_UNIDADE = RHE.COD_UNIDADE
  LEFT JOIN BONUS_DOMINGO BD ON CT.COD_UNIDADE = BD.COD_UNIDADE

),


--==============================================

/*KPI 5 - HORAS EXTRAS/BONUS DOMINGO*/

IRREGULARIDADES_PONTO AS (
  SELECT CT.COD_UNIDADE, CT.DES_UNIDADE, M.MES_ANO, CT.COD_CONTRATO
    FROM RHAF1123 A
    JOIN RHAF1129 B ON A.COD_OCORRENCIA = B.COD_OCORRENCIA
    JOIN RHAF1138 C ON B.COD_MOTIVO_OCO = C.COD_MOTIVO_OCO
    JOIN RHAF1108 D ON A.COD_CONTRATO = D.COD_CONTRATO
    JOIN RHAF1119 E ON A.COD_CONTRATO = E.COD_CONTRATO
    JOIN RHAF1145 F ON E.COD_TURNO = F.COD_TURNO
    JOIN CONTRATOS CT ON A.COD_CONTRATO = CT.COD_CONTRATO
   CROSS JOIN MONTHS M
   WHERE A.DATA_OCORRENCIA BETWEEN M.MONTH_START AND M.MONTH_END
     AND M.MONTH_END BETWEEN E.DATA_INICIO AND E.DATA_FIM
     AND (
         -- REGRA: +2HRS
          (ROUND(A.NUM_HORAS, 2) > 2 AND
          A.COD_OCORRENCIA IN
          (203, 204, 207, 208, 209, 210, 211, 212, 213, 214, 2022, 2023, 2026, 2029, 2036, 2041, 2043)) OR
         
         -- REGRA: +10HRS
          (A.COD_OCORRENCIA = 2 AND A.NUM_HORAS > 10) OR
         
         -- REGRA: INTERVALO <15 MIN
          (F.CARGA_HORARIA BETWEEN 165 AND 180 AND A.COD_OCORRENCIA = 2049) OR
         
         -- REGRA: INTERVALO <1HR
          (F.CARGA_HORARIA BETWEEN 195 AND 220 AND A.COD_OCORRENCIA = 2048) OR
         
         -- REGRA: INTRAJORNADA <11HR
          (A.COD_OCORRENCIA = 901 AND A.NUM_HORAS < 11))
),

IRREGULARIDADES AS (
  SELECT COD_UNIDADE,
         DES_UNIDADE,
         COUNT(DISTINCT COD_CONTRATO || MES_ANO) AS QTD_COLAB_IRREGULAR
    FROM IRREGULARIDADES_PONTO
   GROUP BY COD_UNIDADE, DES_UNIDADE
),


--==============================================

/*KPI 6 - ÍNDICE DE FEMININO E MASCULINO*/

PER_FEM_MASC AS (
  SELECT A.COD_UNIDADE,
         A.DES_UNIDADE,
         COUNT(DISTINCT CASE WHEN A.SEXO = 'F' THEN A.COD_CONTRATO END) AS QTD_COLAB_FEM,
         ROUND(COUNT(CASE WHEN A.SEXO = 'F'  THEN 1 END) * 100.0 / COUNT(*), 2) AS PERC_FEM,
         COUNT(DISTINCT CASE WHEN A.SEXO = 'M' THEN A.COD_CONTRATO END) AS QTD_COLAB_MASC,
         ROUND(COUNT(CASE WHEN A.SEXO = 'M' THEN 1 END) * 100.0 / COUNT(*), 2) AS PERC_MASC,
         COUNT(DISTINCT A.COD_CONTRATO) AS TOT_COLAB
    FROM CONTRATOS A
         LEFT JOIN STATUS_AFASTADOS S ON A.COD_CONTRATO = S.COD_CONTRATO
         CROSS JOIN (
           SELECT MAX(MONTH_END) AS REF_DATA FROM MONTHS
         ) M
   WHERE M.REF_DATA BETWEEN A.DATA_ADMISSAO AND NVL(A.DATA_DEMISSAO, M.REF_DATA)
   GROUP BY A.COD_UNIDADE, A.DES_UNIDADE
),



--==============================================

/*KPI 7 - CUSTO FOLHA DE CADA UNIDADE*/


VENCIMENTOS AS (
  SELECT
    CT.COD_UNIDADE,
    M.MONTH_START,
    SUM(A.VALOR_VD) AS TOTAL_VENCIMENTOS
  FROM RHFP1006 A
  JOIN RHFP1000 B ON A.COD_VD = B.COD_VD
  JOIN CONTRATOS CT ON A.COD_CONTRATO = CT.COD_CONTRATO
  CROSS JOIN MONTHS M
  JOIN RHFP1003 R ON A.COD_MESTRE_EVENTO = R.COD_MESTRE_EVENTO
     AND R.DATA_REFERENCIA BETWEEN M.MONTH_START AND M.MONTH_END
     AND R.COD_ORGANOGRAMA = 8
     AND R.COD_EVENTO IN (1,17,19,21,26)
  WHERE B.TIPO_VD = 'V'
    AND A.VALOR_VD <> 0
  GROUP BY CT.COD_UNIDADE, M.MONTH_START
),
ENCARGOS AS (
  SELECT
    CT.COD_UNIDADE,
    M.MONTH_START,
    SUM(A.VALOR_VD) AS TOTAL_ENCARGOS
  FROM RHFP1006 A
  JOIN RHFP1000 B ON A.COD_VD = B.COD_VD
  JOIN CONTRATOS CT ON A.COD_CONTRATO = CT.COD_CONTRATO
  CROSS JOIN MONTHS M
  JOIN RHFP1003 R ON A.COD_MESTRE_EVENTO = R.COD_MESTRE_EVENTO
     AND R.DATA_REFERENCIA BETWEEN M.MONTH_START AND M.MONTH_END
     AND R.COD_ORGANOGRAMA = 8
     AND R.COD_EVENTO IN (1,17,19,21,26)
  WHERE A.COD_VD IN (
    1461,1463,2601,2602,2605,2611,2612,2615,2616,2617,
    2701,2705,2706,2711,2712,2713,2714,2715,2716,2717
  )
    AND A.VALOR_VD <> 0
  GROUP BY CT.COD_UNIDADE, M.MONTH_START
),
CUSTO_FOLHA AS (
  SELECT
    V.COD_UNIDADE,
    V.MONTH_START,
    NVL(V.TOTAL_VENCIMENTOS,0) AS TOTAL_VENCIMENTOS,
    NVL(E.TOTAL_ENCARGOS,0) AS TOTAL_ENCARGOS,
    (V.TOTAL_VENCIMENTOS + NVL(E.TOTAL_ENCARGOS,0)) AS CUSTO_FOLHA
  FROM VENCIMENTOS V
  LEFT JOIN ENCARGOS E
    ON V.COD_UNIDADE = E.COD_UNIDADE
   AND V.MONTH_START = E.MONTH_START
   
),



--==============================================

/*KPI 8 - AFASTADOS, APRENDIZES, PCDs E TEMPO MÉDIO EMPRESA*/

BASE_CONTRATOS AS (
  SELECT CT.COD_UNIDADE,
         
         -- AFASTADOS: considera como afastado quem NÃO estiver nos status permitidos
         COUNT(DISTINCT CASE
                 WHEN S.STATUS_AFAST NOT IN (0, 6, 7, 107) THEN
                  CT.COD_CONTRATO
               END) AS QTD_AFASTADOS,
         
         -- APRENDIZ
         COUNT(DISTINCT CASE
                 WHEN UPPER(CT.DES_FUNCAO) LIKE '%APRENDIZ%' THEN
                  CT.COD_CONTRATO
               END) AS QTD_APRENDIZ,
         
         ROUND((COUNT(DISTINCT CASE
                        WHEN UPPER(CT.DES_FUNCAO) LIKE '%APRENDIZ%' THEN
                         CT.COD_CONTRATO
                      END) * 100.0) /
               NULLIF(COUNT(DISTINCT CT.COD_CONTRATO), 0),
               2) AS PERC_APRENDIZ,
         
         -- PCD
         COUNT(DISTINCT CASE
                 WHEN CT.IND_DEFICIENCIA = 'S' THEN
                  CT.COD_CONTRATO
               END) AS QTD_PCD,
         
         ROUND((COUNT(DISTINCT CASE
                        WHEN CT.IND_DEFICIENCIA = 'S' THEN
                         CT.COD_CONTRATO
                      END) * 100.0) /
               NULLIF(COUNT(DISTINCT CT.COD_CONTRATO), 0),
               2) AS PERC_PCD,
         
         -- Faixas Etárias
         COUNT(DISTINCT CASE
                 WHEN FLOOR(MONTHS_BETWEEN(M.MONTH_END, CT.DATA_NASCIMENTO) / 12) <= 30 THEN
                  CT.COD_CONTRATO
               END) AS QTDE_ATE_30,
         
         COUNT(DISTINCT CASE
                 WHEN FLOOR(MONTHS_BETWEEN(M.MONTH_END, CT.DATA_NASCIMENTO) / 12) > 30 AND
                      FLOOR(MONTHS_BETWEEN(M.MONTH_END, CT.DATA_NASCIMENTO) / 12) < 50 THEN
                  CT.COD_CONTRATO
               END) AS QTDE_30_50,
         
         COUNT(DISTINCT CASE
                 WHEN FLOOR(MONTHS_BETWEEN(M.MONTH_END, CT.DATA_NASCIMENTO) / 12) >= 50 THEN
                  CT.COD_CONTRATO
               END) AS QTDE_50_MAIS,
         
         -- TEMPO MÉDIO DE EMPRESA FORMATADO
         FLOOR(AVG(MONTHS_BETWEEN(M.MONTH_END, CT.DATA_ADMISSAO)) / 12) ||
         ' anos e ' ||
         MOD(FLOOR(AVG(MONTHS_BETWEEN(M.MONTH_END, CT.DATA_ADMISSAO))), 12) ||
         ' meses' AS TEMPO_MEDIO_EMPRESA
  
    FROM CONTRATOS CT
    LEFT JOIN STATUS_AFASTADOS S ON CT.COD_CONTRATO = S.COD_CONTRATO
   CROSS JOIN MONTHS M
   WHERE M.MONTH_END BETWEEN CT.DATA_ADMISSAO AND
         NVL(CT.DATA_DEMISSAO, TO_DATE('31/12/9999', 'DD/MM/YYYY'))
   GROUP BY CT.COD_UNIDADE
),


/*******=====******/

/* DADOS GERAL */

/*KPI 1 - PRODUTIVIDADE*/

VENDAS_EMP AS (
SELECT CASE
         WHEN GE.COD_EMP = 1 THEN
          8
         ELSE
          0
       END AS COD_EMP,
       GE.COD_GRUPO,
       --MIN(D.DES_FANTASIA) DES_FANTASIA, -- USA MIN PARA "UNIFICAR"
       MIN(D.DTA_CADASTRO) DTA_CADASTRO, -- IDEM
       MIN(A.DTA_EMISSAO) DTA_ATUALIZACAO,
       SUM(OPER.VLR_OPERACAO) VALOR_VENDA_LOJA,
       SUM(CASE
             WHEN TO_CHAR(A.DTA_EMISSAO, 'D') = 1 THEN
              NVL(OPER.VLR_OPERACAO, 0)
             ELSE
              0
           END) VDA_DOMINGO
  FROM NL.NS_NOTAS@NLGRZ A
  JOIN NL.NS_NOTAS_OPERACOES@NLGRZ OPER ON A.NUM_SEQ = OPER.NUM_SEQ
                                       AND A.COD_MAQUINA = OPER.COD_MAQUINA
  JOIN NL.GE_GRUPOS_UNIDADES@NLGRZ GE ON A.COD_UNIDADE = GE.COD_UNIDADE
  JOIN NL.PS_PESSOAS@NLGRZ D ON A.COD_UNIDADE = D.COD_PESSOA
  CROSS JOIN MONTHS M
 WHERE A.DTA_EMISSAO BETWEEN M.MONTH_START AND M.MONTH_END
   AND GE.COD_GRUPO = 999
   AND GE.COD_EMP = 1
   --AND (A.COD_UNIDADE = :UNIDADE OR :UNIDADE = 0)
      --AND A.COD_UNIDADE >= 0
      --AND A.COD_UNIDADE <= 999
   AND A.IND_STATUS = 1
   AND A.TIP_NOTA = 4
   AND D.IND_INATIVO = 0
 GROUP BY GE.COD_EMP, GE.COD_GRUPO
 ORDER BY GE.COD_EMP


),

TOTAL_HORAS_EMP AS (
SELECT A.COD_EMP,
       SUM(CASE
             WHEN A.IND_DEFICIENCIA = 'S' THEN
              0
             ELSE
              TO_NUMBER(A.HR_BASE_MES)
           END) AS TOTAL_HRS
  FROM CONTRATOS A
  LEFT JOIN STATUS_AFASTADOS B ON A.COD_CONTRATO = B.COD_CONTRATO
 CROSS JOIN MONTHS M
 WHERE NVL(B.STATUS_AFAST, 0) IN (0, 6, 7, 107)
   AND A.COD_FUNCAO NOT IN (74, 75, 310, 409, 68)
   AND A.COD_TIPO = 1
   AND A.DATA_ADMISSAO <= LAST_DAY(M.MONTH_END)
   AND (A.DATA_DEMISSAO IS NULL OR A.DATA_DEMISSAO >= M.MONTH_END)
   AND M.MONTH_END BETWEEN A.DATA_INI_ORG AND A.DATA_FIM_ORG
   AND M.MONTH_END BETWEEN A.DATA_INI_CLH AND A.DATA_FIM_CLH
   AND M.MONTH_END BETWEEN A.DATA_INI_HR AND A.DATA_FIM_HR
 GROUP BY A.COD_EMP
),


PRODUTIVIDADE_EMP AS (
SELECT A.COD_EMP,
       --MIN(A.DES_FANTASIA) AS DES_FANTASIA,
       TT.TOTAL_HRS,
       TRUNC(A.VALOR_VENDA_LOJA / NULLIF(TT.TOTAL_HRS, 0)) AS PRODUTIVIDADE_EMP
  FROM VENDAS_EMP A
  LEFT JOIN TOTAL_HORAS_EMP TT ON A.COD_EMP = TT.COD_EMP
 GROUP BY A.COD_EMP, A.VALOR_VENDA_LOJA, TT.TOTAL_HRS
),


--===========================================

/*KPI 2 - TURNOVER*/

EFETIVO_INICIAL_TUR_EMP AS (
    SELECT CTR.COD_EMP,
           M.MONTH_START,
           COUNT(DISTINCT CTR.COD_CONTRATO) AS EFETIVO_INICIAL_EMP
      FROM CONTRATOS CTR
     CROSS JOIN MONTHS M
     WHERE ('01/' || TO_CHAR(M.MONTH_START, 'MM/YYYY')) BETWEEN
           CTR.DATA_ADMISSAO AND NVL(CTR.DATA_DEMISSAO, '31/12/9999')
       AND ('01/' || TO_CHAR(M.MONTH_START, 'MM/YYYY')) BETWEEN
           CTR.DATA_INI_ORG AND NVL(CTR.DATA_FIM_ORG, '31/12/9999')
       AND (UPPER(CTR.DES_FUNCAO) NOT LIKE '%ESTAGIARIO%' AND
           UPPER(CTR.DES_FUNCAO) NOT LIKE '%APRENDIZ%' AND
           UPPER(CTR.DES_FUNCAO) NOT LIKE '%TEMPORARIO%')
    
     GROUP BY CTR.COD_EMP, M.MONTH_START
),
EFETIVO_FINAL_TUR_EMP AS (
    SELECT CTR.COD_EMP,
           M.MONTH_END,
           COUNT(DISTINCT CTR.COD_CONTRATO) AS EFETIVO_FINAL_EMP
      FROM CONTRATOS CTR
     CROSS JOIN MONTHS M
     WHERE LAST_DAY(TO_DATE('' || TO_CHAR(M.MONTH_END, 'DD/MM/YYYY'))) BETWEEN
           CTR.DATA_ADMISSAO AND NVL(CTR.DATA_DEMISSAO, '31/12/9999')
       AND LAST_DAY(TO_DATE('' || TO_CHAR(M.MONTH_END, 'DD/MM/YYYY'))) BETWEEN
           CTR.DATA_INI_ORG AND NVL(CTR.DATA_FIM_ORG, '31/12/9999')
       AND (UPPER(CTR.DES_FUNCAO) NOT LIKE '%ESTAGIARIO%' AND
            UPPER(CTR.DES_FUNCAO) NOT LIKE '%APRENDIZ%' AND
            UPPER(CTR.DES_FUNCAO) NOT LIKE '%TEMPORARIO%')
     GROUP BY CTR.COD_EMP, M.MONTH_END
),


DEMITIDOS_TUR_EMP AS (
SELECT A.COD_EMP,
       M.MONTH_START,
       M.MONTH_END,
       COUNT(DISTINCT CASE
               WHEN A.DATA_DEMISSAO BETWEEN M.MONTH_START AND M.MONTH_END THEN
                A.COD_CONTRATO
             END) AS DEMITIDOS_EMP
  FROM CONTRATOS A
 CROSS JOIN MONTHS M
 WHERE (UPPER(A.DES_FUNCAO) NOT LIKE '%ESTAGIARIO%' AND
       UPPER(A.DES_FUNCAO) NOT LIKE '%APRENDIZ%' AND
       UPPER(A.DES_FUNCAO) NOT LIKE '%TEMPORARIO%')
 GROUP BY A.COD_EMP,
          M.MONTH_START,
          M.MONTH_END

),


TURNOVER_EMP AS (
SELECT A.COD_EMP,
       (EI.EFETIVO_INICIAL_EMP + EF.EFETIVO_FINAL_EMP) / 2 AS EFETIVO_MEDIO_EMP,
       ROUND(CASE
               WHEN (EI.EFETIVO_INICIAL_EMP + EF.EFETIVO_FINAL_EMP) / 2 = 0 THEN
                0
               ELSE
                (DM.DEMITIDOS_EMP * 100) /
                ((EI.EFETIVO_INICIAL_EMP + EF.EFETIVO_FINAL_EMP) / 2)
             END,
             2) AS TURNOVER_EMP
  FROM (SELECT DISTINCT COD_EMP
          FROM CONTRATOS) A
  LEFT JOIN EFETIVO_INICIAL_TUR_EMP EI ON A.COD_EMP = EI.COD_EMP
  LEFT JOIN EFETIVO_FINAL_TUR_EMP EF ON A.COD_EMP = EF.COD_EMP
  LEFT JOIN DEMITIDOS_TUR_EMP DM ON A.COD_EMP = DM.COD_EMP
),




--===========================================


/*KPI 3 - ROTATIVIDADE*/

EFETIVO_INICIAL_ROT_EMP AS (
SELECT CTR.COD_EMP,
       M.MONTH_START,
       COUNT(DISTINCT CTR.COD_CONTRATO) AS EFETIVO_INICIAL_EMP
  FROM CONTRATOS CTR
 CROSS JOIN MONTHS M
 WHERE ('01/' || TO_CHAR(M.MONTH_START, 'MM/YYYY')) BETWEEN
       CTR.DATA_ADMISSAO AND NVL(CTR.DATA_DEMISSAO, '31/12/9999')
   AND ('01/' || TO_CHAR(M.MONTH_START, 'MM/YYYY')) BETWEEN
       CTR.DATA_INI_ORG AND NVL(CTR.DATA_FIM_ORG, '31/12/9999')
   AND (UPPER(CTR.DES_FUNCAO) NOT LIKE '%ESTAGIARIO%' AND
       UPPER(CTR.DES_FUNCAO) NOT LIKE '%APRENDIZ%')
-- sem barrar TEMPORÁRIO!

 GROUP BY CTR.COD_EMP, M.MONTH_START
),
EFETIVO_FINAL_ROT_EMP AS (
SELECT CTR.COD_EMP,
       M.MONTH_END,
       COUNT(DISTINCT CTR.COD_CONTRATO) AS EFETIVO_FINAL_EMP
  FROM CONTRATOS CTR
 CROSS JOIN MONTHS M
 WHERE LAST_DAY(TO_DATE('' || TO_CHAR(M.MONTH_END, 'DD/MM/YYYY'))) BETWEEN
       CTR.DATA_ADMISSAO AND NVL(CTR.DATA_DEMISSAO, '31/12/9999')
   AND LAST_DAY(TO_DATE('' || TO_CHAR(M.MONTH_END, 'DD/MM/YYYY'))) BETWEEN
       CTR.DATA_INI_ORG AND NVL(CTR.DATA_FIM_ORG, '31/12/9999')
   AND (UPPER(CTR.DES_FUNCAO) NOT LIKE '%ESTAGIARIO%' AND
        UPPER(CTR.DES_FUNCAO) NOT LIKE '%APRENDIZ%')
-- sem barrar TEMPORÁRIO!

 GROUP BY CTR.COD_EMP, M.MONTH_END
),



ADMITIDOS_ROT_EMP AS (
SELECT A.COD_EMP,
       M.MONTH_START,
       M.MONTH_END,
       COUNT(DISTINCT CASE
               WHEN A.DATA_ADMISSAO BETWEEN M.MONTH_START AND M.MONTH_END THEN
                A.COD_CONTRATO
             END) AS ADMITIDOS_EMP
  FROM CONTRATOS A
 CROSS JOIN MONTHS M
 WHERE (UPPER(A.DES_FUNCAO) NOT LIKE '%ESTAGIARIO%' AND
       UPPER(A.DES_FUNCAO) NOT LIKE '%APRENDIZ%')
-- sem barrar TEMPORÁRIO!
 GROUP BY A.COD_EMP,
          M.MONTH_START,
          M.MONTH_END

),


DEMITIDOS_ROT_EMP AS (
SELECT A.COD_EMP,
       M.MONTH_START,
       M.MONTH_END,
       COUNT(DISTINCT CASE
               WHEN A.DATA_DEMISSAO BETWEEN M.MONTH_START AND M.MONTH_END THEN
                A.COD_CONTRATO
             END) AS DEMITIDOS_EMP
  FROM CONTRATOS A
 CROSS JOIN MONTHS M
 WHERE (UPPER(A.DES_FUNCAO) NOT LIKE '%ESTAGIARIO%' AND
       UPPER(A.DES_FUNCAO) NOT LIKE '%APRENDIZ%')
-- sem barrar TEMPORÁRIO!
 GROUP BY A.COD_EMP,
          M.MONTH_START,
          M.MONTH_END

),


ROTATIVIDADE_EMP AS (
SELECT A.COD_EMP,
       AD.ADMITIDOS_EMP,
       DM.DEMITIDOS_EMP,
       (EI.EFETIVO_INICIAL_EMP + EF.EFETIVO_FINAL_EMP) / 2 AS EFETIVO_MEDIO_EMP,
       ROUND(CASE
               WHEN (EI.EFETIVO_INICIAL_EMP + EF.EFETIVO_FINAL_EMP) / 2 = 0 THEN
                0
               ELSE
                (((NVL(AD.ADMITIDOS_EMP, 0) + NVL(DM.DEMITIDOS_EMP, 0)) / 2) * 100) /
                ((EI.EFETIVO_INICIAL_EMP + EF.EFETIVO_FINAL_EMP) / 2)
             END,
             2) AS ROTATIVIDADE_EMP
  FROM (SELECT DISTINCT COD_EMP
          FROM CONTRATOS) A
  LEFT JOIN EFETIVO_INICIAL_ROT_EMP EI ON A.COD_EMP = EI.COD_EMP
  LEFT JOIN EFETIVO_FINAL_ROT_EMP EF ON A.COD_EMP = EF.COD_EMP
  LEFT JOIN DEMITIDOS_ROT_EMP DM ON A.COD_EMP = DM.COD_EMP
  LEFT JOIN ADMITIDOS_ROT_EMP AD ON A.COD_EMP = AD.COD_EMP

),


--==============================================

/*KPI 4 - ABSENTEISMO*/


-- CTE para consolidar as ocorrências do período
CTE_HORAS_EMP AS (
    SELECT CT.COD_EMP,
           TO_CHAR(TRUNC(HM.DATA_OCORRENCIA, 'MM'), 'MM/YYYY') AS MES_ANO_EMP,
           SUM(CASE
                 WHEN COD_OCORRENCIA = 2 THEN
                  NUM_HORAS
                 ELSE
                  0
               END) AS TOT_HORAS_TRAB_EMP
    
      FROM RHAF1123 HM
      LEFT JOIN RHAF1119 TU ON HM.COD_CONTRATO = TU.COD_CONTRATO
     INNER JOIN CONTRATOS CT ON HM.COD_CONTRATO = CT.COD_CONTRATO
      LEFT JOIN STATUS_AFASTADOS AF ON HM.COD_CONTRATO = AF.COD_CONTRATO
     CROSS JOIN MONTHS M
     WHERE HM.DATA_OCORRENCIA BETWEEN M.MONTH_START AND M.MONTH_END
       AND (TU.DATA_FIM = '31/12/2999' OR TU.DATA_FIM >= M.MONTH_END)
       AND (TU.DATA_INICIO <= M.MONTH_END)
       AND TU.COD_TURNO <> 85
       AND AF.STATUS_AFAST IN (0, 6, 7, 107)
    /*AND (B.COD_TIPO = :TIPO OR :TIPO = 0)
           AND (B.COD_UNIDADE = :FILIAL OR :FILIAL = 0)
           AND (B.COD_REDE = TO_CHAR(:REDE) OR TO_CHAR(:REDE) = 0)*/
    --AND HM.COD_CONTRATO = 392184
     GROUP BY CT.COD_EMP,
              TRUNC(HM.DATA_OCORRENCIA, 'MM')

),


CTE_ATESTADOS_FALTAS_EMP AS (
    SELECT B.COD_EMP,
           TO_CHAR(TRUNC(D.DATA_REFERENCIA, 'MM'), 'MM/YYYY') AS MES_ANO_EMP,
           -- TOTAL FALTAS
           SUM(CASE WHEN C.COD_VD = 632 THEN C.QTDE_VD ELSE 0 END) AS TOT_FALTAS_EMP,

           -- TOTAL ATESTADOS
           SUM(CASE WHEN C.COD_VD = 897 THEN C.QTDE_VD ELSE 0 END) AS TOT_ATESTADOS_EMP,

           -- TOTAL FALTAS + ATESTADOS
           SUM(CASE WHEN C.COD_VD IN (632, 897) THEN C.QTDE_VD ELSE 0 END) AS TOT_FALTAS_ATESTADOS_EMP
           --TO_HOUR_MINUTES_03(SUM(C.QTDE_VD)) AS TOTAL_HORAS_ATESTADOS
      FROM RHFP1006 C
     INNER JOIN RHFP1003 D ON C.COD_MESTRE_EVENTO = D.COD_MESTRE_EVENTO
     INNER JOIN CONTRATOS B ON C.COD_CONTRATO = B.COD_CONTRATO
     CROSS JOIN MONTHS M                                    
     WHERE D.DATA_REFERENCIA BETWEEN M.MONTH_START AND M.MONTH_END
       AND D.COD_ORGANOGRAMA = 8
       /*AND (B.COD_TIPO = :TIPO OR :TIPO = 0)
       AND (B.COD_UNIDADE = :FILIAL OR :FILIAL = 0)
       AND (B.COD_REDE = TO_CHAR(:REDE) OR TO_CHAR(:REDE) = 0)*/
    --AND C.COD_CONTRATO = 392184
     GROUP BY B.COD_EMP,
              TRUNC(D.DATA_REFERENCIA, 'MM')
),


ABSENTEISMO_EMP AS (
SELECT H.COD_EMP,
       NVL(ROUND(NVL(FT.TOT_FALTAS_ATESTADOS_EMP, 0) * 100 / NULLIF(NVL(H.TOT_HORAS_TRAB_EMP, 0), 0), 2), 0) AS ABSENTEISMO_EMP
FROM CTE_HORAS_EMP H
 LEFT JOIN CTE_ATESTADOS_FALTAS_EMP FT ON H.COD_EMP = FT.COD_EMP

),


--============================================== 

/*KPI 5 - HORAS EXTRAS/BONUS DOMINGO*/


-- CTE para consolidar as ocorrências do período
HORAS_EXTRAS_EMP AS (
  SELECT CT.COD_EMP,
         SUM(CASE
               WHEN A.COD_VD IN
                    (325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 336) THEN
                COALESCE(A.QTDE_VD, 0)
               ELSE
                0
             END) AS QTDE_HORAS_EXTRAS_EMP,
         SUM(CASE
               WHEN A.COD_VD IN
                    (325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 336) THEN
                COALESCE(A.VALOR_VD, 0)
               ELSE
                0
             END) AS VLR_HORAS_EXTRAS_EMP,
         B.DATA_REFERENCIA,
         B.COD_EVENTO
    FROM RHFP1006 A
   INNER JOIN RHFP1003 B ON A.COD_MESTRE_EVENTO = B.COD_MESTRE_EVENTO
   INNER JOIN CONTRATOS CT ON A.COD_CONTRATO = CT.COD_CONTRATO
   CROSS JOIN MONTHS M 
   WHERE A.COD_VD IN
         (325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 336)
     AND B.COD_EVENTO IN (1, 8, 17, 19)
     AND B.DATA_REFERENCIA BETWEEN M.MONTH_START AND M.MONTH_END
   GROUP BY CT.COD_EMP,
            B.DATA_REFERENCIA,
            B.COD_EVENTO
),

REPOUSO_HORAS_EXTRAS_EMP AS (
  SELECT CT.COD_EMP,
         SUM(CASE
               WHEN A.COD_VD = 158 THEN
                COALESCE(A.QTDE_VD, 0)
               ELSE
                0
             END) AS QTDE_REP_HORAS_EXTRAS_EMP,
         SUM(CASE
               WHEN A.COD_VD = 158 THEN
                COALESCE(A.VALOR_VD, 0)
               ELSE
                0
             END) AS VLR_REP_HORAS_EXTRAS_EMP,
         B.DATA_REFERENCIA,
         B.COD_EVENTO
    FROM RHFP1006 A
   INNER JOIN RHFP1003 B ON A.COD_MESTRE_EVENTO = B.COD_MESTRE_EVENTO
   INNER JOIN CONTRATOS CT ON A.COD_CONTRATO = CT.COD_CONTRATO
   CROSS JOIN MONTHS M 
   WHERE A.COD_VD = 158
     AND B.COD_EVENTO IN (1, 8, 17, 19)
     AND B.DATA_REFERENCIA BETWEEN M.MONTH_START AND M.MONTH_END
   GROUP BY CT.COD_EMP,
            B.DATA_REFERENCIA,
            B.COD_EVENTO
),

BONUS_DOMINGO_EMP AS (
  SELECT CT.COD_EMP,
         SUM(CASE
               WHEN A.COD_VD = 323 THEN
                COALESCE(A.QTDE_VD, 0)
               ELSE
                0
             END) AS QTDE_BONUS_DOM_EMP,
         SUM(CASE
               WHEN A.COD_VD = 323 THEN
                COALESCE(A.VALOR_VD, 0)
               ELSE
                0
             END) AS VLR_BONUS_DOM_EMP,
         B.DATA_REFERENCIA,
         B.COD_EVENTO
    FROM RHFP1006 A
   INNER JOIN RHFP1003 B ON A.COD_MESTRE_EVENTO = B.COD_MESTRE_EVENTO
   INNER JOIN CONTRATOS CT ON A.COD_CONTRATO = CT.COD_CONTRATO
   CROSS JOIN MONTHS M 
   WHERE A.COD_VD = 323
     AND B.COD_EVENTO IN (1, 8, 17, 19)
     AND B.DATA_REFERENCIA BETWEEN M.MONTH_START AND M.MONTH_END
   GROUP BY CT.COD_EMP,
            B.DATA_REFERENCIA,
            B.COD_EVENTO
),

HRS_EXTRAS_EMP AS (
SELECT CT.COD_EMP,
       NVL(HE.QTDE_HORAS_EXTRAS_EMP, 0) AS QTDE_HORAS_EXTRAS_EMP,
       NVL(HE.VLR_HORAS_EXTRAS_EMP, 0) AS VLR_HORAS_EXTRAS_EMP,
       NVL(RHE.VLR_REP_HORAS_EXTRAS_EMP, 0) AS VLR_REPOUSO_HR_EXTRAS_EMP,
       NVL(BD.VLR_BONUS_DOM_EMP, 0) AS VLR_BONUS_DOM_EMP
  FROM CONTRATOS CT
  LEFT JOIN HORAS_EXTRAS_EMP HE ON CT.COD_EMP = HE.COD_EMP
  LEFT JOIN REPOUSO_HORAS_EXTRAS_EMP RHE ON CT.COD_EMP = RHE.COD_EMP
  LEFT JOIN BONUS_DOMINGO_EMP BD ON CT.COD_EMP = BD.COD_EMP

),


--==============================================

/*KPI 5 - HORAS EXTRAS/BONUS DOMINGO*/

IRREGULARIDADES_PONTO_EMP AS (
  SELECT CT.COD_EMP, M.MES_ANO, CT.COD_CONTRATO
    FROM RHAF1123 A
    JOIN RHAF1129 B ON A.COD_OCORRENCIA = B.COD_OCORRENCIA
    JOIN RHAF1138 C ON B.COD_MOTIVO_OCO = C.COD_MOTIVO_OCO
    JOIN RHAF1108 D ON A.COD_CONTRATO = D.COD_CONTRATO
    JOIN RHAF1119 E ON A.COD_CONTRATO = E.COD_CONTRATO
    JOIN RHAF1145 F ON E.COD_TURNO = F.COD_TURNO
    JOIN CONTRATOS CT ON A.COD_CONTRATO = CT.COD_CONTRATO
   CROSS JOIN MONTHS M
   WHERE A.DATA_OCORRENCIA BETWEEN M.MONTH_START AND M.MONTH_END
     AND M.MONTH_END BETWEEN E.DATA_INICIO AND E.DATA_FIM
     AND (
         -- REGRA: +2HRS
          (ROUND(A.NUM_HORAS, 2) > 2 AND
          A.COD_OCORRENCIA IN
          (203, 204, 207, 208, 209, 210, 211, 212, 213, 214, 2022, 2023, 2026, 2029, 2036, 2041, 2043)) OR
         
         -- REGRA: +10HRS
          (A.COD_OCORRENCIA = 2 AND A.NUM_HORAS > 10) OR
         
         -- REGRA: INTERVALO <15 MIN
          (F.CARGA_HORARIA BETWEEN 165 AND 180 AND A.COD_OCORRENCIA = 2049) OR
         
         -- REGRA: INTERVALO <1HR
          (F.CARGA_HORARIA BETWEEN 195 AND 220 AND A.COD_OCORRENCIA = 2048) OR
         
         -- REGRA: INTRAJORNADA <11HR
          (A.COD_OCORRENCIA = 901 AND A.NUM_HORAS < 11))
),

IRREGULARIDADES_EMP AS (
  SELECT COD_EMP,
         COUNT(DISTINCT COD_CONTRATO || MES_ANO) AS QTD_COLAB_IRREGULAR_EMP
    FROM IRREGULARIDADES_PONTO_EMP
   GROUP BY COD_EMP
),


--==============================================

/*KPI 6 - ÍNDICE DE FEMININO E MASCULINO*/

PER_FEM_MASC_EMP AS (
  SELECT A.COD_EMP,
         COUNT(DISTINCT CASE WHEN A.SEXO = 'F' THEN A.COD_CONTRATO END) AS QTD_COLAB_FEM_EMP,
         ROUND(COUNT(CASE WHEN A.SEXO = 'F'  THEN 1 END) * 100.0 / COUNT(*), 2) AS PERC_FEM_EMP,
         COUNT(DISTINCT CASE WHEN A.SEXO = 'M' THEN A.COD_CONTRATO END) AS QTD_COLAB_MASC_EMP,
         ROUND(COUNT(CASE WHEN A.SEXO = 'M' THEN 1 END) * 100.0 / COUNT(*), 2) AS PERC_MASC_EMP,
         COUNT(DISTINCT A.COD_CONTRATO) AS TOT_COLAB_EMP
    FROM CONTRATOS A
         LEFT JOIN STATUS_AFASTADOS S ON A.COD_CONTRATO = S.COD_CONTRATO
         CROSS JOIN (
           SELECT MAX(MONTH_END) AS REF_DATA FROM MONTHS
         ) M
   WHERE M.REF_DATA BETWEEN A.DATA_ADMISSAO AND NVL(A.DATA_DEMISSAO, M.REF_DATA)
   GROUP BY A.COD_EMP
),



--==============================================

/*KPI 7 - CUSTO FOLHA DE CADA UNIDADE*/


VENCIMENTOS_EMP AS (
  SELECT
    CT.COD_EMP,
    M.MONTH_START,
    SUM(A.VALOR_VD) AS TOTAL_VENCIMENTOS_EMP
  FROM RHFP1006 A
  JOIN RHFP1000 B ON A.COD_VD = B.COD_VD
  JOIN CONTRATOS CT ON A.COD_CONTRATO = CT.COD_CONTRATO
  CROSS JOIN MONTHS M
  JOIN RHFP1003 R ON A.COD_MESTRE_EVENTO = R.COD_MESTRE_EVENTO
     AND R.DATA_REFERENCIA BETWEEN M.MONTH_START AND M.MONTH_END
     AND R.COD_ORGANOGRAMA = 8
     AND R.COD_EVENTO IN (1,17,19,21,26)
  WHERE B.TIPO_VD = 'V'
    AND A.VALOR_VD <> 0
  GROUP BY CT.COD_EMP, M.MONTH_START
),
ENCARGOS_EMP AS (
  SELECT
    CT.COD_EMP,
    M.MONTH_START,
    SUM(A.VALOR_VD) AS TOTAL_ENCARGOS_EMP
  FROM RHFP1006 A
  JOIN RHFP1000 B ON A.COD_VD = B.COD_VD
  JOIN CONTRATOS CT ON A.COD_CONTRATO = CT.COD_CONTRATO
  CROSS JOIN MONTHS M
  JOIN RHFP1003 R ON A.COD_MESTRE_EVENTO = R.COD_MESTRE_EVENTO
     AND R.DATA_REFERENCIA BETWEEN M.MONTH_START AND M.MONTH_END
     AND R.COD_ORGANOGRAMA = 8
     AND R.COD_EVENTO IN (1,17,19,21,26)
  WHERE A.COD_VD IN (
    1461,1463,2601,2602,2605,2611,2612,2615,2616,2617,
    2701,2705,2706,2711,2712,2713,2714,2715,2716,2717
  )
    AND A.VALOR_VD <> 0
  GROUP BY CT.COD_EMP, M.MONTH_START
),
CUSTO_FOLHA_EMP AS (
  SELECT
    V.COD_EMP,
    V.MONTH_START,
    NVL(V.TOTAL_VENCIMENTOS_EMP,0) AS TOTAL_VENCIMENTOS_EMP,
    NVL(E.TOTAL_ENCARGOS_EMP,0) AS TOTAL_ENCARGOS_EMP,
    (V.TOTAL_VENCIMENTOS_EMP + NVL(E.TOTAL_ENCARGOS_EMP,0)) AS CUSTO_FOLHA_EMP
  FROM VENCIMENTOS_EMP V
  LEFT JOIN ENCARGOS_EMP E
    ON V.COD_EMP = E.COD_EMP
   AND V.MONTH_START = E.MONTH_START
   
),



--==============================================

/*KPI 8 - AFASTADOS, APRENDIZES, PCDs E TEMPO MÉDIO EMPRESA*/

BASE_CONTRATOS_EMP AS (
  SELECT CT.COD_EMP,
         
         -- AFASTADOS: considera como afastado quem NÃO estiver nos status permitidos
         COUNT(DISTINCT CASE
                 WHEN S.STATUS_AFAST NOT IN (0, 6, 7, 107) THEN
                  CT.COD_CONTRATO
               END) AS QTD_AFASTADOS_EMP,
         
         -- APRENDIZ
         COUNT(DISTINCT CASE
                 WHEN UPPER(CT.DES_FUNCAO) LIKE '%APRENDIZ%' THEN
                  CT.COD_CONTRATO
               END) AS QTD_APRENDIZ_EMP,
         
         ROUND((COUNT(DISTINCT CASE
                        WHEN UPPER(CT.DES_FUNCAO) LIKE '%APRENDIZ%' THEN
                         CT.COD_CONTRATO
                      END) * 100.0) /
               NULLIF(COUNT(DISTINCT CT.COD_CONTRATO), 0),
               2) AS PERC_APRENDIZ_EMP,
         
         -- PCD
         COUNT(DISTINCT CASE
                 WHEN CT.IND_DEFICIENCIA = 'S' THEN
                  CT.COD_CONTRATO
               END) AS QTD_PCD_EMP,
         
         ROUND((COUNT(DISTINCT CASE
                        WHEN CT.IND_DEFICIENCIA = 'S' THEN
                         CT.COD_CONTRATO
                      END) * 100.0) /
               NULLIF(COUNT(DISTINCT CT.COD_CONTRATO), 0),
               2) AS PERC_PCD_EMP,
         
         -- Faixas Etárias
         COUNT(DISTINCT CASE
                 WHEN FLOOR(MONTHS_BETWEEN(M.MONTH_END, CT.DATA_NASCIMENTO) / 12) <= 30 THEN
                  CT.COD_CONTRATO
               END) AS QTDE_ATE_30_EMP,
         
         COUNT(DISTINCT CASE
                 WHEN FLOOR(MONTHS_BETWEEN(M.MONTH_END, CT.DATA_NASCIMENTO) / 12) > 30 AND
                      FLOOR(MONTHS_BETWEEN(M.MONTH_END, CT.DATA_NASCIMENTO) / 12) < 50 THEN
                  CT.COD_CONTRATO
               END) AS QTDE_30_50_EMP,
         
         COUNT(DISTINCT CASE
                 WHEN FLOOR(MONTHS_BETWEEN(M.MONTH_END, CT.DATA_NASCIMENTO) / 12) >= 50 THEN
                  CT.COD_CONTRATO
               END) AS QTDE_50_MAIS_EMP,
         
         -- TEMPO MÉDIO DE EMPRESA FORMATADO
         FLOOR(AVG(MONTHS_BETWEEN(M.MONTH_END, CT.DATA_ADMISSAO)) / 12) ||
         ' anos e ' ||
         MOD(FLOOR(AVG(MONTHS_BETWEEN(M.MONTH_END, CT.DATA_ADMISSAO))), 12) ||
         ' meses' AS TEMPO_MEDIO_EMPRESA_EMP
  
    FROM CONTRATOS CT
    LEFT JOIN STATUS_AFASTADOS S ON CT.COD_CONTRATO = S.COD_CONTRATO
   CROSS JOIN MONTHS M
   WHERE M.MONTH_END BETWEEN CT.DATA_ADMISSAO AND
         NVL(CT.DATA_DEMISSAO, TO_DATE('31/12/9999', 'DD/MM/YYYY'))
   GROUP BY CT.COD_EMP
)

/*******=====******/


/*KPI FINAL - RESULTADO FINAL DOS KPIs*/

SELECT A.COD_UNIDADE AS ORDEM,
       A.DES_UNIDADE,
       A.DES_REDE,
       
       -- KPIs com base na data final da referência, para não gerar distorções
       NVL(PFM.TOT_COLAB, 0) AS COLABORADORES,
       
       -- KPIs agregados com AVG (evita somatórios incorretos em range único)
       ROUND(AVG(B.TURNOVER), 2) AS "%_TURNOVER",
       ROUND(AVG(C.PRODUTIVIDADE), 2) AS PRODUTIVIDADE,
       ROUND(AVG(E.ABSENTEISMO), 2) AS "%_ABSENTEISMO",
       ROUND(AVG(D.ROTATIVIDADE), 2) AS "%_ROTATIVIDADE",
       NVL(G.QTD_COLAB_IRREGULAR, 0) AS QTD_IRREGULARIDADES_PONTO,
       
       -- KPI de horas extras já pré-agrupado na view (sem necessidade de SUM aqui)
       ROUND(AVG(F.QTDE_HORAS_EXTRAS), 2) AS QTD_HORAS_EXTRAS,
       TO_CHAR(ROUND(AVG(F.VLR_HORAS_EXTRAS), 2), 'FM999G999G990D00') AS VLR_HORAS_EXTRAS,
       TO_CHAR(ROUND(AVG(F.VLR_REPOUSO_HR_EXTRAS), 2), 'FM999G999G990D00') AS VLR_REPOUSO_HR_EXTRAS,
       TO_CHAR(ROUND(AVG(F.VLR_BONUS_DOM), 2), 'FM999G999G990D00') AS VLR_BONUS_DOM,
       TO_CHAR(ROUND(AVG(CF.TOTAL_VENCIMENTOS), 2), 'FM999G999G990D00') AS VENCIMENTOS,
       TO_CHAR(ROUND(AVG(CF.TOTAL_ENCARGOS), 2), 'FM999G999G990D00') AS ENCARGOS, 
       TO_CHAR(ROUND(AVG(CF.CUSTO_FOLHA), 2), 'FM999G999G990D00') AS CUSTO_FOLHA,
       
       NVL(PFM.QTD_COLAB_FEM, 0) AS FEMININO,
       NVL(PFM.PERC_FEM, 0) AS "%_FEM",
       NVL(PFM.QTD_COLAB_MASC, 0) AS MASCULINO,
       NVL(PFM.PERC_MASC, 0) AS "%_MASC",
       NVL(B.QTD_AFASTADOS, 0) AS AFASTADOS,
       NVL(B.QTD_APRENDIZ, 0) AS APRENDIZ,
       NVL(B.PERC_APRENDIZ, 0) AS "%_APREN",
       NVL(B.QTD_PCD, 0) AS PCD,
       NVL(B.PERC_PCD, 0) AS "%_PCD",
       NVL(B.QTDE_ATE_30, 0) AS ATE_30_ANOS,
       NVL(B.QTDE_30_50, 0) AS DE_30_50_ANOS,
       NVL(B.QTDE_50_MAIS, 0) AS DE_50_ANOS_MAIS,
       NVL(B.TEMPO_MEDIO_EMPRESA, 0) AS TEMPO_MEDIO_EMPRESA       

  FROM (SELECT DISTINCT COD_UNIDADE,
                        DES_UNIDADE,
                        COD_REDE,
                        DES_REDE,
                        COD_TIPO,
                        COD_ORGANOGRAMA
          FROM CONTRATOS) A

-- KPIs principais
  JOIN TURNOVER B ON A.COD_ORGANOGRAMA = B.COD_ORGANOGRAMA
  LEFT JOIN PRODUTIVIDADE C ON A.COD_UNIDADE = C.COD_UNIDADE
  LEFT JOIN ROTATIVIDADE D ON A.COD_UNIDADE = D.COD_UNIDADE
  LEFT JOIN ABSENTEISMO E ON A.COD_ORGANOGRAMA = E.COD_ORGANOGRAMA
  LEFT JOIN HRS_EXTRAS F ON A.COD_UNIDADE = F.COD_UNIDADE -- Corrigido para refletir unidade
  LEFT JOIN IRREGULARIDADES G ON A.COD_UNIDADE = G.COD_UNIDADE
  LEFT JOIN PER_FEM_MASC PFM ON PFM.COD_UNIDADE = A.COD_UNIDADE
  LEFT JOIN BASE_CONTRATOS B ON A.COD_UNIDADE = B.COD_UNIDADE
  LEFT JOIN CUSTO_FOLHA CF ON A.COD_UNIDADE = CF.COD_UNIDADE

-- Filtros
 WHERE (B.TURNOVER IS NOT NULL OR B.TURNOVER <> 0)
   AND (C.PRODUTIVIDADE IS NOT NULL OR C.PRODUTIVIDADE <> 0)
   AND (D.ROTATIVIDADE IS NOT NULL OR D.ROTATIVIDADE <> 0)
   AND (E.ABSENTEISMO IS NOT NULL OR E.ABSENTEISMO <> 0)

-- Agrupamento por unidade
 GROUP BY A.COD_UNIDADE,
          A.DES_UNIDADE,
          A.DES_REDE,
          PFM.TOT_COLAB,
          G.QTD_COLAB_IRREGULAR,
          PFM.QTD_COLAB_FEM,
          PFM.PERC_FEM,
          PFM.QTD_COLAB_MASC,
          PFM.PERC_MASC,
          B.QTD_AFASTADOS,
          B.QTD_APRENDIZ,
          B.PERC_APRENDIZ,
          B.QTD_PCD,
          B.PERC_PCD,
          B.QTDE_ATE_30,
          B.QTDE_30_50,
          B.QTDE_50_MAIS,
          B.TEMPO_MEDIO_EMPRESA

--ORDER BY A.COD_UNIDADE


UNION ALL


SELECT NULL AS ORDEM,
       NULL AS DES_UNIDADE,
       'TOTAL GERAL' AS DES_REDE,
       
       -- KPIs com base na data final da referência, para não gerar distorções
       NVL(PFM.TOT_COLAB_EMP, 0) AS COLABORADORES,
       
       -- KPIs agregados com AVG (evita somatórios incorretos em range único)
       ROUND(AVG(B.TURNOVER_EMP), 2) AS "%_TURNOVER",
       ROUND(AVG(C.PRODUTIVIDADE_EMP), 2) AS PRODUTIVIDADE,
       ROUND(AVG(E.ABSENTEISMO_EMP), 2) AS "%_ABSENTEISMO",
       ROUND(AVG(D.ROTATIVIDADE_EMP), 2) AS "%_ROTATIVIDADE",
       NVL(G.QTD_COLAB_IRREGULAR_EMP, 0) AS QTD_IRREGULARIDADES_PONTO,
       
       -- KPI de horas extras já pré-agrupado na view (sem necessidade de SUM aqui)
       ROUND(AVG(F.QTDE_HORAS_EXTRAS_EMP), 2) AS QTD_HORAS_EXTRAS,
       TO_CHAR(ROUND(AVG(F.VLR_HORAS_EXTRAS_EMP), 2), 'FM999G999G990D00') AS VLR_HORAS_EXTRAS,
       TO_CHAR(ROUND(AVG(F.VLR_REPOUSO_HR_EXTRAS_EMP), 2), 'FM999G999G990D00') AS VLR_REPOUSO_HR_EXTRAS,
       TO_CHAR(ROUND(AVG(F.VLR_BONUS_DOM_EMP), 2), 'FM999G999G990D00') AS VLR_BONUS_DOM,
       TO_CHAR(ROUND(AVG(CF.TOTAL_VENCIMENTOS_EMP), 2), 'FM999G999G990D00') AS VENCIMENTOS,
       TO_CHAR(ROUND(AVG(CF.TOTAL_ENCARGOS_EMP), 2), 'FM999G999G990D00') AS ENCARGOS, 
       TO_CHAR(ROUND(AVG(CF.CUSTO_FOLHA_EMP), 2), 'FM999G999G990D00') AS CUSTO_FOLHA,
       
       NVL(PFM.QTD_COLAB_FEM_EMP, 0) AS FEMININO,
       NVL(PFM.PERC_FEM_EMP, 0) AS "%_FEM",
       NVL(PFM.QTD_COLAB_MASC_EMP, 0) AS MASCULINO,
       NVL(PFM.PERC_MASC_EMP, 0) AS "%_MASC",
       NVL(B.QTD_AFASTADOS_EMP, 0) AS AFASTADOS,
       NVL(B.QTD_APRENDIZ_EMP, 0) AS APRENDIZ,
       NVL(B.PERC_APRENDIZ_EMP, 0) AS "%_APREN",
       NVL(B.QTD_PCD_EMP, 0) AS PCD,
       NVL(B.PERC_PCD_EMP, 0) AS "%_PCD",
       NVL(B.QTDE_ATE_30_EMP, 0) AS ATE_30_ANOS,
       NVL(B.QTDE_30_50_EMP, 0) AS DE_30_50_ANOS,
       NVL(B.QTDE_50_MAIS_EMP, 0) AS DE_50_ANOS_MAIS,
       NVL(B.TEMPO_MEDIO_EMPRESA_EMP, 0) AS TEMPO_MEDIO_EMPRESA       

  FROM (SELECT DISTINCT COD_EMP
          FROM CONTRATOS) A

-- KPIs principais
  JOIN TURNOVER_EMP B ON A.COD_EMP = B.COD_EMP
  LEFT JOIN PRODUTIVIDADE_EMP C ON A.COD_EMP = C.COD_EMP
  LEFT JOIN ROTATIVIDADE_EMP D ON A.COD_EMP = D.COD_EMP
  LEFT JOIN ABSENTEISMO_EMP E ON A.COD_EMP = E.COD_EMP
  LEFT JOIN HRS_EXTRAS_EMP F ON A.COD_EMP = F.COD_EMP -- Corrigido para refletir unidade
  LEFT JOIN IRREGULARIDADES_EMP G ON A.COD_EMP = G.COD_EMP
  LEFT JOIN PER_FEM_MASC_EMP PFM ON PFM.COD_EMP = A.COD_EMP
  LEFT JOIN BASE_CONTRATOS_EMP B ON A.COD_EMP = B.COD_EMP
  LEFT JOIN CUSTO_FOLHA_EMP CF ON A.COD_EMP = CF.COD_EMP

-- Filtros
 WHERE (B.TURNOVER_EMP IS NOT NULL OR B.TURNOVER_EMP <> 0)
   AND (C.PRODUTIVIDADE_EMP IS NOT NULL OR C.PRODUTIVIDADE_EMP <> 0)
   AND (D.ROTATIVIDADE_EMP IS NOT NULL OR D.ROTATIVIDADE_EMP <> 0)
   AND (E.ABSENTEISMO_EMP IS NOT NULL OR E.ABSENTEISMO_EMP <> 0)

-- Agrupamento por unidade
 GROUP BY 
          PFM.TOT_COLAB_EMP,
          G.QTD_COLAB_IRREGULAR_EMP,
          PFM.QTD_COLAB_FEM_EMP,
          PFM.PERC_FEM_EMP,
          PFM.QTD_COLAB_MASC_EMP,
          PFM.PERC_MASC_EMP,
          B.QTD_AFASTADOS_EMP,
          B.QTD_APRENDIZ_EMP,
          B.PERC_APRENDIZ_EMP,
          B.QTD_PCD_EMP,
          B.PERC_PCD_EMP,
          B.QTDE_ATE_30_EMP,
          B.QTDE_30_50_EMP,
          B.QTDE_50_MAIS_EMP,
          B.TEMPO_MEDIO_EMPRESA_EMP

ORDER BY ORDEM
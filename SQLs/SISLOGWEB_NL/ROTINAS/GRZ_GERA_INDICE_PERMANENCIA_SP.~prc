CREATE OR REPLACE PROCEDURE GRZ_GERA_INDICE_PERMANENCIA_SP(P_DTA_REF IN VARCHAR2 -- FORMATO 'DD/MM/YYYY' (MÊS A INSERIR, EX.: '01/09/2025')
                                                           ) IS
  V_DTA_REF DATE; -- 1º DIA DO MÊS A INSERIR
  E_INVALID_DATE EXCEPTION;
  PRAGMA EXCEPTION_INIT(E_INVALID_DATE, -01843); -- INVALID MONTH
BEGIN
  IF P_DTA_REF IS NULL THEN
    RAISE_APPLICATION_ERROR(-20000,
                            'INFORME P_DTA_REF NO FORMATO DD/MM/YYYY.');
  END IF;

  -- 1) NORMALIZA PARA 1º DIA DO MÊS
  V_DTA_REF := TRUNC(TO_DATE(P_DTA_REF, 'DD/MM/YYYY'), 'MM');

  -- 2) CHECAGEM DO LOG: DEVE EXISTIR REGISTRO DO MÊS SEGUINTE (FECHAMENTO DO MÊS V_DTA_REF)
  DECLARE
    V_DUMMY NUMBER;
  BEGIN
    SELECT 1
      INTO V_DUMMY
      FROM GRZ_FECHAMENTO_GERENCIA
     WHERE TRUNC(DTA_SISTEMA, 'MM') = TRUNC(ADD_MONTHS(V_DTA_REF, 1), 'MM')
       AND ROWNUM = 1;
  EXCEPTION
    WHEN NO_DATA_FOUND THEN
      RAISE_APPLICATION_ERROR(-20002,
                              'FECHAMENTO AINDA NÃO CONCLUÍDO. ESPERADO REGISTRO NO LOG PARA ' ||
                              TO_CHAR(ADD_MONTHS(V_DTA_REF, 1),
                                      'DD/MM/YYYY') ||
                              ' (1º DIA DO MÊS SEGUINTE).');
  END;
  
/*
  -- 3) IDEMPOTÊNCIA: REMOVE A REFERÊNCIA ALVO
  DELETE FROM GRZ_INDICE_PERMANENCIA_TB T
   WHERE T.DTA_REFERENCIA = V_DTA_REF;
   */

  -- 4) CARGA
  INSERT INTO GRZ_INDICE_PERMANENCIA_TB
    (COD_EMP,
     COD_UNIDADE,
     DES_UNIDADE,
     DTA_REFERENCIA,
     VLR_CUSTO,
     VLR_ESTOQUE_ANT,
     VLR_MEDIO_EMP,
     VLR_ESTMEDIO_PERM,
     PERMANENCIA) WITH PARAMS AS
    (SELECT V_DTA_REF AS DTA_REF FROM DUAL), AGREGADO AS
    (SELECT A.COD_EMP,
            A.COD_UNIDADE,
            P1.DES_FANTASIA AS DES_UNIDADE,
            SUM(NVL(A.VLR_CUSTO, 0)) AS VLR_CUSTO,
            SUM(NVL(A.VLR_ESTOQUE_ANT, 0)) AS VLR_ESTOQUE_ANT,
            SUM(NVL(A.VLR_MEDIO_EMP, 0)) AS VLR_MEDIO_EMP,
            SUM(NVL(A.VLR_ESTOQUE_ANT, 0) + NVL(A.VLR_MEDIO_EMP, 0)) AS VLR_ESTMEDIO_PERM
       FROM NL.ES_0124_CE_ESTMEDIO A
       JOIN NL.PS_PESSOAS P1 ON P1.COD_PESSOA = A.COD_UNIDADE
      CROSS JOIN PARAMS PRM
      WHERE A.DTA_MVTO BETWEEN ADD_MONTHS(PRM.DTA_REF, -11) AND PRM.DTA_REF
           --AND A.COD_UNIDADE IN (4)
        AND A.COD_ITEM <> 344356
        AND A.COD_UNIDADE NOT IN (818, 838, 848, 858, 1145, 1406, 1437, 1446, 1485, 1504, 1541, 1563, 1586, 1587, 1620, 3066, 3145, 3485, 3587, 3620, 5406, 5437, 5446, 5485,
             1081808)
        AND EXISTS
      (SELECT 1 FROM NL.IE_ITENS T WHERE T.COD_ITEM = A.COD_ITEM)
        AND EXISTS (SELECT 1
               FROM NL.IE_MASCARAS E
              WHERE E.COD_ITEM = A.COD_ITEM
                AND E.COD_MASCARA = 170
                AND E.COD_NIV0 = '1')
      GROUP BY A.COD_EMP, A.COD_UNIDADE, P1.DES_FANTASIA)
    SELECT A.COD_EMP,
           A.COD_UNIDADE,
           A.DES_UNIDADE,
           PRM.DTA_REF AS DTA_REFERENCIA,
           SUM(NVL(A.VLR_CUSTO, 0)) AS VLR_CUSTO,
           SUM(NVL(A.VLR_ESTOQUE_ANT, 0)) AS VLR_ESTOQUE_ANT,
           SUM(NVL(A.VLR_MEDIO_EMP, 0)) AS VLR_MEDIO_EMP,
           SUM(NVL(A.VLR_ESTMEDIO_PERM, 0)) AS VLR_ESTMEDIO_PERM,
           -- CÁLCULO COM TRATAMENTO LIMPO DE DIVISÃO POR ZERO
           ROUND(360 /
                 NULLIF((SUM(NVL(A.VLR_CUSTO, 0)) /
                        NULLIF((SUM(NVL(A.VLR_ESTMEDIO_PERM, 0)) / 365.25),
                                0)),
                        0),
                 0) AS PERMANENCIA
      FROM AGREGADO A
     CROSS JOIN PARAMS PRM
     GROUP BY A.COD_EMP, A.COD_UNIDADE, A.DES_UNIDADE, PRM.DTA_REF
     ORDER BY A.COD_UNIDADE;

  COMMIT;

EXCEPTION
  WHEN E_INVALID_DATE THEN
    RAISE_APPLICATION_ERROR(-20001,
                            'P_DTA_REF INVÁLIDA. USE DD/MM/YYYY (EX.: 01/09/2025).');
  WHEN OTHERS THEN
    ROLLBACK;
    RAISE;
END GRZ_GERA_INDICE_PERMANENCIA_SP;
/

WITH
  Base_V AS (
    SELECT
       G.COD_REDE AS COD_REDE_REP,
       G.COD_REDE,
       G.DES_REDE,
      :DATA_INICIO || ' - ' || :DATA_FIM AS REFERENCIA,
      A.COD_VD,
      B.NOME_VD,
      SUM(NVL(A.VALOR_VD, 0)) AS TOTAL_MES,
      ROW_NUMBER() OVER(PARTITION BY G.COD_REDE ORDER BY A.COD_VD) AS RN
    FROM
      RHFP1006 A
      INNER JOIN RHFP1000 B ON A.COD_VD = B.COD_VD
      INNER JOIN RHFP0310 D ON A.COD_CONTRATO = D.COD_CONTRATO AND :DATA_FIM BETWEEN D.DATA_INICIO AND D.DATA_FIM
      LEFT JOIN RHFP0401 E ON D.COD_ORGANOGRAMA = E.COD_ORGANOGRAMA AND SYSDATE BETWEEN E.DATA_INICIO AND NVL(E.DATA_FIM, TO_DATE('31/12/2999', 'DD/MM/YYYY'))
      LEFT JOIN RHFP0400 F ON F.COD_ORGANOGRAMA = CASE WHEN E.COD_NIVEL5 > 0 THEN E.COD_NIVEL5 ELSE E.COD_NIVEL4 END
      LEFT JOIN V_EDICAO_ORG_AVT G ON F.COD_ORGANOGRAMA = G.COD_ORGANOGRAMA
    WHERE
      COD_MESTRE_EVENTO IN (
        SELECT COD_MESTRE_EVENTO
        FROM RHFP1003
        WHERE TO_DATE(DATA_REFERENCIA) BETWEEN :DATA_INICIO AND :DATA_FIM
          AND COD_ORGANOGRAMA = 8
          AND COD_EVENTO = 9
      )
      AND E.EDICAO_NIVEL2 = '008'
      AND B.TIPO_VD = 'V'
      --AND A.COD_VD NOT IN (292, 4033)
      AND A.VALOR_VD <> 0
      AND E.EDICAO_ORG NOT IN ('705','707')
    GROUP BY
      G.COD_REDE,
      G.DES_REDE,
      A.COD_VD,
      B.NOME_VD
  ),
  Base_D AS (
    SELECT
       G.COD_REDE AS COD_REDE_REP,
       G.COD_REDE,
       G.DES_REDE,
      :DATA_INICIO || ' - ' || :DATA_FIM AS REFERENCIA,
      /*CASE
        WHEN A.COD_VD = 1003 THEN 1004
        ELSE A.COD_VD
      END AS COD_VD,
      CASE
        WHEN A.COD_VD = 1003 THEN 'Líquido Pago nas Rescisões'
        ELSE B.NOME_VD
      END AS NOME_VD,*/
      A.COD_VD,
      B.NOME_VD,
      SUM(NVL(A.VALOR_VD, 0)) AS TOTAL_MES,
      ROW_NUMBER() OVER (PARTITION BY G.COD_REDE ORDER BY CASE WHEN A.COD_VD = 622 THEN A.COD_VD ELSE NULL END) AS RN
    FROM
      RHFP1006 A
      INNER JOIN RHFP1000 B ON A.COD_VD = B.COD_VD
      LEFT JOIN RHFP1003 EV ON A.COD_MESTRE_EVENTO = EV.COD_MESTRE_EVENTO
      INNER JOIN RHFP0310 D ON A.COD_CONTRATO = D.COD_CONTRATO AND :DATA_FIM BETWEEN D.DATA_INICIO AND D.DATA_FIM
      LEFT JOIN RHFP0401 E ON D.COD_ORGANOGRAMA = E.COD_ORGANOGRAMA AND SYSDATE BETWEEN E.DATA_INICIO AND NVL(E.DATA_FIM, TO_DATE('31/12/2999', 'DD/MM/YYYY'))
      LEFT JOIN RHFP0400 F ON F.COD_ORGANOGRAMA = CASE WHEN E.COD_NIVEL5 > 0 THEN E.COD_NIVEL5 ELSE E.COD_NIVEL4 END
      LEFT JOIN V_EDICAO_ORG_AVT G ON F.COD_ORGANOGRAMA = G.COD_ORGANOGRAMA
    WHERE
      A.COD_MESTRE_EVENTO IN (
        SELECT COD_MESTRE_EVENTO
        FROM RHFP1003
        WHERE TO_DATE(DATA_REFERENCIA) BETWEEN :DATA_INICIO AND :DATA_FIM
          AND COD_ORGANOGRAMA = 8
          AND COD_EVENTO = 9
      )
      AND E.EDICAO_NIVEL2 = '008'
      AND (
        B.TIPO_VD = 'D'
        OR (A.COD_VD = 622 AND EV.COD_EVENTO IN (9))  -- Ajuste aqui para considerar apenas os eventos 17 e 19 para VD 1003
      )
      AND A.VALOR_VD <> 0
      AND E.EDICAO_ORG NOT IN ('705','707')
      AND A.COD_VD = 622
    GROUP BY
      G.COD_REDE,
      G.DES_REDE,
      A.COD_VD,
      B.NOME_VD,
      CASE WHEN A.COD_VD = 1003 THEN 1004 ELSE A.COD_VD END,
      CASE WHEN A.COD_VD = 1003 THEN 'Líquido Pago nas Rescisões' ELSE B.NOME_VD END
  ),
  Base_O AS (
    SELECT
       G.COD_REDE AS COD_REDE_REP,
       G.COD_REDE,
       G.DES_REDE,
      :DATA_INICIO || ' - ' || :DATA_FIM AS REFERENCIA,
      A.COD_VD,
      B.NOME_VD,
      SUM(NVL(A.VALOR_VD, 0)) AS TOTAL_MES,
      ROW_NUMBER() OVER(PARTITION BY G.COD_REDE ORDER BY A.COD_VD) AS RN
    FROM
      RHFP1006 A
      INNER JOIN RHFP1000 B ON A.COD_VD = B.COD_VD
      INNER JOIN RHFP0310 D ON A.COD_CONTRATO = D.COD_CONTRATO AND :DATA_FIM BETWEEN D.DATA_INICIO AND D.DATA_FIM
      LEFT JOIN RHFP0401 E ON D.COD_ORGANOGRAMA = E.COD_ORGANOGRAMA AND SYSDATE BETWEEN E.DATA_INICIO AND NVL(E.DATA_FIM, TO_DATE('31/12/2999', 'DD/MM/YYYY'))
      LEFT JOIN RHFP0400 F ON F.COD_ORGANOGRAMA = CASE WHEN E.COD_NIVEL5 > 0 THEN E.COD_NIVEL5 ELSE E.COD_NIVEL4 END
      LEFT JOIN V_EDICAO_ORG_AVT G ON F.COD_ORGANOGRAMA = G.COD_ORGANOGRAMA
    WHERE
      COD_MESTRE_EVENTO IN (
        SELECT COD_MESTRE_EVENTO
        FROM RHFP1003
        WHERE TO_DATE(DATA_REFERENCIA) BETWEEN :DATA_INICIO AND :DATA_FIM
          AND COD_ORGANOGRAMA = 8
          AND COD_EVENTO = 9
      )
      AND E.EDICAO_NIVEL2 = '008'
      --AND A.COD_VD IN (12, 4065)
      AND A.COD_VD IN (895, 912, 913, 1146, 1152, 1154, 1155, 1156, 1157, 1159, 1160, 1171, 1172, 1173, 1174, 1179, 2602)
      AND A.VALOR_VD <> 0
      AND E.EDICAO_ORG NOT IN ('705','707')

GROUP BY
      G.COD_REDE,
      G.DES_REDE,
      A.COD_VD,
      B.NOME_VD
  ),
Totais AS (
    SELECT
       G.COD_REDE AS COD_REDE_REP,
       G.COD_REDE,
       G.DES_REDE,
      :DATA_INICIO || ' - ' || :DATA_FIM AS REFERENCIA,
      SUM(CASE WHEN B.TIPO_VD = 'V' THEN NVL(A.VALOR_VD, 0) ELSE 0 END) AS TOTAL_V,
      SUM(CASE WHEN B.TIPO_VD = 'D' /*OR (A.COD_VD = 1003 AND EV.COD_EVENTO IN (17, 19))*/ THEN NVL(A.VALOR_VD, 0) ELSE 0 END) AS TOTAL_D,
      SUM(CASE WHEN B.TIPO_VD = 'V' THEN NVL(A.VALOR_VD, 0) ELSE 0 END) - SUM(CASE WHEN B.TIPO_VD = 'D' OR (A.COD_VD = 622) THEN NVL(A.VALOR_VD, 0) ELSE 0
END) AS TOTAL_LIQUIDO
    FROM
      RHFP1006 A
      INNER JOIN RHFP1000 B ON A.COD_VD = B.COD_VD
      LEFT JOIN RHFP1003 EV ON A.COD_MESTRE_EVENTO = EV.COD_MESTRE_EVENTO
      INNER JOIN RHFP0310 D ON A.COD_CONTRATO = D.COD_CONTRATO AND :DATA_FIM BETWEEN D.DATA_INICIO AND D.DATA_FIM
      LEFT JOIN RHFP0401 E ON D.COD_ORGANOGRAMA = E.COD_ORGANOGRAMA AND SYSDATE BETWEEN E.DATA_INICIO AND NVL(E.DATA_FIM, TO_DATE('31/12/2999', 'DD/MM/YYYY'))
      LEFT JOIN RHFP0400 F ON F.COD_ORGANOGRAMA = CASE WHEN E.COD_NIVEL5 > 0 THEN E.COD_NIVEL5 ELSE E.COD_NIVEL4 END
      LEFT JOIN V_EDICAO_ORG_AVT G ON F.COD_ORGANOGRAMA = G.COD_ORGANOGRAMA
    WHERE
      A.COD_MESTRE_EVENTO IN (
        SELECT COD_MESTRE_EVENTO
        FROM RHFP1003
        WHERE TO_DATE(DATA_REFERENCIA) BETWEEN :DATA_INICIO AND :DATA_FIM
          AND COD_ORGANOGRAMA = 8
          AND COD_EVENTO = 9
      )
      AND E.EDICAO_NIVEL2 = '008'
      AND E.COD_ORGANOGRAMA NOT IN (293,301,302,304,305,309,313,315,316,318,320,322,326,327,328,329,330,331,335,349,399,939,1740,2147,2148,2149,2150,2151)
      AND E.COD_ORGANOGRAMA_SUB NOT IN (344)
      AND A.VALOR_VD <> 0
      AND A.COD_VD NOT IN (292, 4033)
      AND E.EDICAO_ORG NOT IN ('705','707')
    GROUP BY
      G.COD_REDE,
      G.DES_REDE
  ),
  Combined_Base AS (
    SELECT DISTINCT
      COALESCE(V.COD_REDE_REP, D.COD_REDE_REP, O.COD_REDE_REP) AS COD_REDE_REP,
      COALESCE(V.COD_REDE, D.COD_REDE, O.COD_REDE) AS COD_REDE,
      COALESCE(V.DES_REDE, D.DES_REDE, O.DES_REDE) AS DES_REDE,
      COALESCE(V.REFERENCIA, D.REFERENCIA, O.REFERENCIA) AS REFERENCIA,
      CASE
          WHEN V.COD_VD <> 0 THEN
           V.COD_VD
          ELSE
           NULL
      END AS COD_VD_V,  -- Aqui ajusta para não retornar 0
      V.NOME_VD AS NOME_VD_V,
      TO_CHAR(V.TOTAL_MES, 'FM999G999G990D00') AS TOTAL_MES_V,
      CASE
          WHEN D.COD_VD <> 0 THEN
           D.COD_VD
          ELSE
           NULL
      END AS COD_VD_D , -- Aqui ajusta para não retornar 0
      D.NOME_VD AS NOME_VD_D,
      TO_CHAR(D.TOTAL_MES, 'FM999G999G990D00') AS TOTAL_MES_D,
      CASE
          WHEN O.COD_VD <> 0 THEN
           O.COD_VD
          ELSE
           NULL
      END AS COD_VD_O,  -- Aqui ajusta para não retornar 0
      O.NOME_VD AS NOME_VD_O,
      TO_CHAR(O.TOTAL_MES, 'FM999G999G990D00') AS TOTAL_MES_O,
      COALESCE(V.RN, D.RN, O.RN) AS RN,
      DENSE_RANK() OVER(PARTITION BY COALESCE(V.COD_REDE, D.COD_REDE, O.COD_REDE)
      ORDER BY COALESCE(CASE WHEN V.COD_VD = 1003 THEN 1004 ELSE V.COD_VD END, CASE WHEN D.COD_VD = 1003 THEN 1004 ELSE D.COD_VD END, O.COD_VD)) AS DR
    FROM
      Base_V V
      FULL OUTER JOIN Base_D D ON V.COD_REDE = D.COD_REDE AND V.RN = D.RN
      FULL OUTER JOIN Base_O O ON COALESCE(V.COD_REDE, D.COD_REDE) = O.COD_REDE AND COALESCE(V.RN, D.RN) = O.RN
    WHERE
      (NVL(V.TOTAL_MES, 0) + NVL(D.TOTAL_MES, 0) + NVL(O.TOTAL_MES, 0)) <> 0 -- Filtro mais robusto para totais zerados
  ),
Headers AS (
    SELECT
      COD_REDE_REP,
      COD_REDE,
      DES_REDE,
      REFERENCIA,
      'VENCIMENTOS' AS HEADER_V,
      'DESCONTOS' AS HEADER_D,
      'OUTROS' AS HEADER_O,
      0 AS RN,
      1 AS ORDER_COL  -- Header sempre terá ORDER_COL = 1
    FROM
      (SELECT DISTINCT COD_REDE_REP, COD_REDE, DES_REDE, REFERENCIA FROM Combined_Base)
  ),
  Totals AS (
    SELECT
      COD_REDE_REP,
      COD_REDE,
      DES_REDE,
      REFERENCIA,
      NULL AS COD_VD_V,
      'TOTAL VENCIMENTOS' AS NOME_VD_V,
      TO_CHAR(T.TOTAL_V, 'FM999G999G990D00') AS TOTAL_MES_V,
      NULL AS COD_VD_D,
      'TOTAL DESCONTOS' AS NOME_VD_D,
      TO_CHAR(T.TOTAL_D, 'FM999G999G990D00') AS TOTAL_MES_D,
      NULL AS COD_VD_O,
      'TOTAL LÍQUIDO' AS NOME_VD_O,
      TO_CHAR(T.TOTAL_LIQUIDO, 'FM999G999G990D00') AS TOTAL_MES_O,
      NULL AS RN,
      2 AS ORDER_COL
    FROM
      Totais T
    WHERE T.TOTAL_V <> 0 OR T.TOTAL_D <> 0 OR T.TOTAL_LIQUIDO <> 0
  ),
  Grand_Totals AS (
    SELECT
      NULL AS COD_REDE,
      NULL AS DES_REDE,
      NULL AS REFERENCIA,
      NULL AS COD_VD_V,
      'TOTAL GERAL VENCIMENTOS' AS NOME_VD_V,
      TO_CHAR(SUM(T.TOTAL_V), 'FM999G999G990D00') AS TOTAL_MES_V,
      NULL AS COD_VD_D,
      'TOTAL GERAL DESCONTOS' AS NOME_VD_D,
      TO_CHAR(SUM(T.TOTAL_D), 'FM999G999G990D00') AS TOTAL_MES_D,
      NULL AS COD_VD_O,
      'TOTAL GERAL LÍQUIDO' AS NOME_VD_O,
      TO_CHAR(SUM(T.TOTAL_LIQUIDO), 'FM999G999G990D00') AS TOTAL_MES_O,
      NULL AS RN,
      3 AS ORDER_COL
    FROM
      Totais T
  ),
  Blank_Lines AS (
    SELECT
      DISTINCT
      COD_REDE_REP,
      COD_REDE,
      DES_REDE,
      REFERENCIA,
      NULL AS COD_VD_V,
      NULL AS NOME_VD_V,
      NULL AS TOTAL_MES_V,
      NULL AS COD_VD_D,
      NULL AS NOME_VD_D,
      NULL AS TOTAL_MES_D,
      NULL AS COD_VD_O,
      NULL AS NOME_VD_O,
      NULL AS TOTAL_MES_O,
      NULL AS RN,
      4 AS ORDER_COL  -- Definimos como "4" para garantir que as linhas em branco sejam exibidas antes dos totais
    FROM
      Headers
  ),
  Final_Result AS (
    SELECT
        COD_REDE_REP,
        CASE WHEN ROW_NUMBER() OVER (PARTITION BY COD_REDE_REP ORDER BY ORDER_COL, RN) = 1 THEN TO_CHAR(COD_REDE) END AS COD_REDE, -- Mostrar apenas uma vez
        CASE WHEN ROW_NUMBER() OVER (PARTITION BY COD_REDE_REP ORDER BY ORDER_COL, RN) = 1 THEN TO_CHAR(DES_REDE) END AS DES_REDE,     -- Mostrar apenas uma vez
        CASE WHEN ROW_NUMBER() OVER (PARTITION BY COD_REDE_REP ORDER BY ORDER_COL, RN) = 1 THEN REFERENCIA END AS REFERENCIA,             -- Mostrar apenas uma vez
        COD_VD_V,
        NOME_VD_V,
        TOTAL_MES_V,
        COD_VD_D,
        NOME_VD_D,
        TOTAL_MES_D,
        COD_VD_O,
        NOME_VD_O,
        TOTAL_MES_O,
        RN,
        ORDER_COL
    FROM (
        SELECT
            COD_REDE_REP,
            COD_REDE,
            DES_REDE,
            REFERENCIA,
            NULL AS COD_VD_V,
            HEADER_V AS NOME_VD_V,
            NULL AS TOTAL_MES_V,
            NULL AS COD_VD_D,
            HEADER_D AS NOME_VD_D,
            NULL AS TOTAL_MES_D,
            NULL AS COD_VD_O,
            HEADER_O AS NOME_VD_O,
            NULL AS TOTAL_MES_O,
            RN,
            ORDER_COL
        FROM Headers
        UNION ALL
        SELECT
            COD_REDE_REP,
            COD_REDE,
            DES_REDE,
            REFERENCIA,
            COD_VD_V,
            NOME_VD_V,
            TOTAL_MES_V,
            COD_VD_D,
            NOME_VD_D,
            TOTAL_MES_D,
            COD_VD_O,
            NOME_VD_O,
            TOTAL_MES_O,
            RN,
            2 AS ORDER_COL
        FROM Combined_Base
        UNION ALL
        SELECT
            COD_REDE_REP,
            NULL AS COD_REDE,
            NULL AS DES_REDE,
            NULL AS REFERENCIA,
            NULL AS COD_VD_V,
            'TOTAL VENCIMENTOS' AS NOME_VD_V,
            TO_CHAR(TOTAL_V, 'FM999G999G990D00') AS TOTAL_MES_V,
            NULL AS COD_VD_D,
            'TOTAL DESCONTOS' AS NOME_VD_D,
            TO_CHAR(TOTAL_D, 'FM999G999G990D00') AS TOTAL_MES_D,
            NULL AS COD_VD_O,
            'TOTAL LÍQUIDO' AS NOME_VD_O,
            TO_CHAR(TOTAL_LIQUIDO, 'FM999G999G990D00') AS TOTAL_MES_O,
            NULL AS RN,
            3 AS ORDER_COL
        FROM Totais
        WHERE TOTAL_V <> 0 OR TOTAL_D <> 0 OR TOTAL_LIQUIDO <> 0 -- Filtro para não incluir totais zerados
        UNION ALL
        SELECT
            NULL AS COD_REDE_REP,
            NULL AS COD_REDE,
            NULL AS DES_REDE,
            NULL AS REFERENCIA,
            NULL AS COD_VD_V,
            'TOTAL GERAL VENCIMENTOS' AS NOME_VD_V,
            TO_CHAR(SUM(TOTAL_V), 'FM999G999G990D00') AS TOTAL_MES_V,
            NULL AS COD_VD_D,
            'TOTAL GERAL DESCONTOS' AS NOME_VD_D,
            TO_CHAR(SUM(TOTAL_D), 'FM999G999G990D00') AS TOTAL_MES_D,
            NULL AS COD_VD_O,
            'TOTAL GERAL LÍQUIDO' AS NOME_VD_O,
            TO_CHAR(SUM(TOTAL_LIQUIDO), 'FM999G999G990D00') AS TOTAL_MES_O,
            NULL AS RN,
            4 AS ORDER_COL
        FROM Totais
    ) H
    UNION ALL
    SELECT
        COD_REDE_REP,
        NULL AS COD_REDE,
        NULL AS DES_REDE,
        NULL AS REFERENCIA,
        NULL AS COD_VD_V,
        NULL AS NOME_VD_V,
        NULL AS TOTAL_MES_V,
        NULL AS COD_VD_D,
        NULL AS NOME_VD_D,
        NULL AS TOTAL_MES_D,
        NULL AS COD_VD_O,
        NULL AS NOME_VD_O,
        NULL AS TOTAL_MES_O,
        NULL AS RN,
        5 AS ORDER_COL  -- Linha em branco para separação
    FROM Headers
)
SELECT
    COD_REDE,
    DES_REDE,
    REFERENCIA,
    COD_VD_V,
    NOME_VD_V,
    TOTAL_MES_V,
    COD_VD_D,
    NOME_VD_D,
    TOTAL_MES_D,
    COD_VD_O,
    NOME_VD_O,
    TOTAL_MES_O
FROM
    Final_Result
ORDER BY
    COD_REDE_REP ASC, -- Ordenação principal por contrato
    ORDER_COL ASC,
    RN ASC
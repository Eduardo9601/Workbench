/*PROCEDIMENTO PRA GERAR E INSERIR PERMANÊNCIA PRONTA EM TABELA PREPARADA*/



/* =================================================================================
   ==== PROCEDIMENTO PRA GERAR E INSERIR PERMANÊNCIA PRONTA EM TABELA PREPARADA ====
   ================================================================================= */

-- =============================================
-- 1) TABELA DESTINO = GRZ_INDICE_PERMANENCIA_TB
-- =============================================
-- Opcional: DROP TABLE GRZ_INDICE_PERMANENCIA_TB PURGE;

CREATE TABLE GRZ_INDICE_PERMANENCIA_TB (
  COD_EMP           NUMBER          NOT NULL,
  COD_UNIDADE       NUMBER          NOT NULL,
  DES_UNIDADE       VARCHAR(200),
  DTA_REFERENCIA    DATE            NOT NULL,  -- 1º dia do mês de referência
  VLR_CUSTO         NUMBER(18,2),
  VLR_ESTOQUE_ANT   NUMBER(18,2),
  VLR_MEDIO_EMP     NUMBER(18,2),
  VLR_ESTMEDIO_PERM NUMBER(18,2),
  PERMANENCIA       NUMBER,
  CONSTRAINT PK_GRZ_INDICE_PERM PRIMARY KEY (COD_EMP, COD_UNIDADE, DTA_REFERENCIA)
);

SELECT * FROM GRZ_INDICE_PERMANENCIA_TB
ORDER BY COD_UNIDADE, REFERENCIA



INSERT
INTO GRZ_INDICE_PERMANENCIA_TB
  (COD_EMP, COD_UNIDADE, DES_UNIDADE, DTA_REFERENCIA, VLR_CUSTO, VLR_ESTOQUE_ANT, VLR_MEDIO_EMP, VLR_ESTMEDIO_PERM, PERMANENCIA)
  
WITH
PARAMS AS (
  SELECT '&DTA_REF' AS DTA_REF
  FROM DUAL 
  --CONNECT BY LEVEL <= 12
),

AGREGADO AS (
  SELECT A.COD_EMP,
         A.COD_UNIDADE,
         P.DES_FANTASIA AS DES_UNIDADE,
         SUM(NVL(A.VLR_CUSTO, 0)) AS VLR_CUSTO,
         SUM(NVL(A.VLR_ESTOQUE_ANT, 0)) AS VLR_ESTOQUE_ANT,
         SUM(NVL(A.VLR_MEDIO_EMP, 0)) AS VLR_MEDIO_EMP,
         SUM(NVL(A.VLR_ESTOQUE_ANT, 0) + NVL(A.VLR_MEDIO_EMP, 0)) AS VLR_ESTMEDIO_PERM
    FROM NL.ES_0124_CE_ESTMEDIO A
    JOIN NL.PS_PESSOAS P ON P.COD_PESSOA = A.COD_UNIDADE
    CROSS JOIN PARAMS P
   WHERE A.DTA_MVTO BETWEEN ADD_MONTHS(P.DTA_REF, -11) AND P.DTA_REF
     --AND A.COD_UNIDADE IN (4)
     AND A.COD_ITEM <> 344356
     AND A.COD_UNIDADE NOT IN (818, 838, 848, 858, 
                               1145, 1406, 1437, 1446, 1485, 1504, 1541, 
                               1563, 1586, 1587, 1620, 3066, 3145, 3485, 
                               3587, 3620, 5406, 5437, 5446, 5485, 
                               1081808)
     AND EXISTS (SELECT 1 
                 FROM NL.IE_ITENS T 
                 WHERE T.COD_ITEM = A.COD_ITEM)
     AND EXISTS (SELECT 1
                 FROM NL.IE_MASCARAS E
                 WHERE E.COD_ITEM = A.COD_ITEM
                  AND E.COD_MASCARA = 170
                  AND E.COD_NIV0 = '1')
   GROUP BY A.COD_EMP, A.COD_UNIDADE, P.DES_FANTASIA
)

SELECT A.COD_EMP,
       A.COD_UNIDADE,
       A.DES_UNIDADE,
       P.DTA_REF AS DTA_REFERENCIA,       
       SUM(NVL(A.VLR_CUSTO,0)) AS VLR_CUSTO,
       SUM(NVL(A.VLR_ESTOQUE_ANT, 0)) AS VLR_ESTOQUE_ANT,
       SUM(NVL(A.VLR_MEDIO_EMP, 0)) AS VLR_MEDIO_EMP,
       SUM(NVL(A.VLR_ESTMEDIO_PERM, 0)) VLR_ESTMEDIO_PERM,
       ROUND(360 / CASE WHEN (SUM(A.VLR_CUSTO) / CASE WHEN (SUM(A.VLR_ESTMEDIO_PERM) / 365.25) > 0 THEN (SUM(A.VLR_ESTMEDIO_PERM) / 365.25) ELSE 1 END ) > 0 THEN -- CASES INCLUÍDOS PARA TRATAMENTO DE DIVISÃO POR 0
             (SUM(A.VLR_CUSTO) / CASE WHEN (SUM(A.VLR_ESTMEDIO_PERM) / 365.25) > 0 THEN (SUM(A.VLR_ESTMEDIO_PERM) / 365.25) ELSE 1 END ) ELSE 1 END,0) AS PERMANENCIA       
             
/*VERSÃO DE CALCULO ALTERNATIVA*/
/*ROUND(360 / NULLIF(A.VLR_CUSTO / NULLIF(A.VLR_ESTOQUE_ANT / 365.25, 0), 0),
       0) AS PERMANENCIA*/
  FROM AGREGADO A
  CROSS JOIN PARAMS P
 GROUP BY A.COD_EMP,
          A.COD_UNIDADE,
          A.DES_UNIDADE,
          P.DTA_REF
 ORDER BY A.COD_UNIDADE;









/*
SELECT DISTINCT COD_UNIDADE
FROM GRZ_INDICE_PERMANENCIA_TB
/*WHERE COD_UNIDADE IN (818, 838, 848, 858, 
1145, 1406, 1437, 1446, 1485, 1504, 1541, 
1563, 1586, 1587, 1620, 3066, 3145, 3485, 
3587, 3620, 5406, 5437, 5446, 5485, 
1081808)
ORDER BY COD_UNIDADE


DELETE 
FROM GRZ_INDICE_PERMANENCIA_TB
WHERE COD_UNIDADE IN (818, 838, 848, 858, 
1145, 1406, 1437, 1446, 1485, 1504, 1541, 
1563, 1586, 1587, 1620, 3066, 3145, 3485, 
3587, 3620, 5406, 5437, 5446, 5485, 
1081808)

*/
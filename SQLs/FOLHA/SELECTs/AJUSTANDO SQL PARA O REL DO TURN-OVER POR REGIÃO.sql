/*ajustando SQL para o rel do TURN-OVER POR REGIÃO*/


WITH MONTHS AS (
    SELECT ADD_MONTHS(TO_CHAR(:DATA_INICIO, 'DD/MM/YYYY'), LEVEL - 1) AS MONTH_START,
           LAST_DAY(ADD_MONTHS(TO_CHAR(:DATA_INICIO, 'DD/MM/YYYY'), LEVEL - 1)) AS MONTH_END
      FROM DUAL
    CONNECT BY LEVEL <=
               MONTHS_BETWEEN(TO_CHAR(:DATA_FIM, 'DD/MM/YYYY'),
                              TO_CHAR(:DATA_INICIO, 'DD/MM/YYYY')) + 1
),
EFETIVO_INICIAL AS (
    SELECT CCO.COD_REGIAO,
           M.MONTH_START,
           COUNT(DISTINCT CCO.COD_CONTRATO) AS EFETIVO_INICIAL
     FROM V_DADOS_COLAB_AVT CCO
     CROSS JOIN MONTHS M
     WHERE ('01/' || TO_CHAR(M.MONTH_START, 'MM/YYYY')) BETWEEN
           CCO.DATA_ADMISSAO AND NVL(CCO.DATA_DEMISSAO, '31/12/9999')
       AND ('01/' || TO_CHAR(M.MONTH_START, 'MM/YYYY')) BETWEEN
           CCO.DATA_INICIO_ORG AND NVL(CCO.DATA_FIM_ORG, '31/12/9999')
     GROUP BY CCO.COD_REGIAO, M.MONTH_START
),
EFETIVO_FINAL AS (
    SELECT CCO.COD_REGIAO,
           M.MONTH_END,
           COUNT(DISTINCT CCO.COD_CONTRATO) AS EFETIVO_FINAL
     FROM V_DADOS_COLAB_AVT CCO
     CROSS JOIN MONTHS M
     WHERE LAST_DAY(TO_DATE('' || TO_CHAR(M.MONTH_END, 'DD/MM/YYYY'))) BETWEEN
           CCO.DATA_ADMISSAO AND NVL(CCO.DATA_DEMISSAO, '31/12/9999')
       AND LAST_DAY(TO_DATE('' || TO_CHAR(M.MONTH_END, 'DD/MM/YYYY'))) BETWEEN
           CCO.DATA_INICIO_ORG AND NVL(CCO.DATA_FIM_ORG, '31/12/9999')
     GROUP BY CCO.COD_REGIAO, M.MONTH_END
),
DATEMETRICS AS (
    SELECT VO.COD_REGIAO,
           VO.DES_REGIAO,
           A.COD_TIPO,
           A.DES_TIPO,
           M.MONTH_START,
           M.MONTH_END,
           COUNT(DISTINCT CASE
                   WHEN A.DATA_DEMISSAO IS NULL OR A.DATA_DEMISSAO > SYSDATE THEN
                    A.COD_CONTRATO
                 END) AS ATIVOS_ATUAIS,
           COUNT(DISTINCT CASE
                   WHEN A.DATA_ADMISSAO <= M.MONTH_END AND
                        (A.DATA_DEMISSAO IS NULL OR A.DATA_DEMISSAO >= M.MONTH_END) THEN
                    A.COD_CONTRATO
                 END) AS ATIVOS_PERIODO,
           COUNT(DISTINCT CASE
                   WHEN A.DATA_INI_AFAST <= M.MONTH_END AND
                        (A.DATA_FIM_AFAST IS NULL OR
                        A.DATA_FIM_AFAST >= M.MONTH_START) AND
                        A.DATA_FIM_AFAST <> TO_DATE('31/12/2999', 'DD/MM/YYYY') AND
                        A.COD_AFAST <> 7 THEN
                    A.COD_CONTRATO
                 END) AS AFAST_PERIODO,
           COUNT(DISTINCT CASE
                   WHEN A.DATA_ADMISSAO BETWEEN M.MONTH_START AND M.MONTH_END THEN
                    A.COD_CONTRATO
                 END) AS ADMITIDOS,
           COUNT(DISTINCT CASE
                   WHEN A.DATA_DEMISSAO BETWEEN M.MONTH_START AND M.MONTH_END THEN
                    A.COD_CONTRATO
                 END) AS DEMITIDOS,
           NVL(EI.EFETIVO_INICIAL, 0) AS EFETIVO_INICIAL,
           NVL(EF.EFETIVO_FINAL, 0) AS EFETIVO_FINAL
      FROM V_DADOS_COLAB_AVT A
     CROSS JOIN MONTHS M
      LEFT JOIN EFETIVO_INICIAL EI ON A.COD_REGIAO = EI.COD_REGIAO AND M.MONTH_START = EI.MONTH_START
      LEFT JOIN EFETIVO_FINAL EF ON A.COD_REGIAO = EF.COD_REGIAO AND M.MONTH_END = EF.MONTH_END
      INNER JOIN V_ORGANOGRAMAS_AVT VO ON A.COD_REGIAO = VO.COD_REGIAO
     WHERE A.COD_EMP = '008'
     --AND (VO.COD_REDE = :COD_REDE OR :COD_REDE = 0)
     --AND (VO.COD_TIPO = :TIPO_LOCAL OR :TIPO_LOCAL = 0)
     AND (VO.COD_REGIAO = :COD_REGIAO OR :COD_REGIAO = 0)
     GROUP BY A.COD_TIPO,
              A.DES_TIPO,
              VO.COD_REGIAO,
              VO.DES_REGIAO,
              M.MONTH_START,
              M.MONTH_END,
              NVL(EI.EFETIVO_INICIAL, 0),
              NVL(EF.EFETIVO_FINAL, 0)
)
SELECT COD_TIPO,
       DES_TIPO,
       COD_REGIAO,
       DES_REGIAO,
       MONTH_START,
       MONTH_END,
       ATIVOS_ATUAIS,
       ATIVOS_PERIODO,
       AFAST_PERIODO,
       ADMITIDOS,
       DEMITIDOS,
       EFETIVO_INICIAL,
       EFETIVO_FINAL,
       (EFETIVO_INICIAL + EFETIVO_FINAL) / 2 AS EFETIVO_MEDIO,
       ROUND(CASE
               WHEN (EFETIVO_INICIAL + EFETIVO_FINAL) / 2 = 0 THEN
                0
               ELSE
                (DEMITIDOS * 100) / ((EFETIVO_INICIAL + EFETIVO_FINAL) / 2)
             END,
             2) AS TURNOVER,
       REPLACE(TRIM(TO_CHAR(MONTH_START, 'Month/YYYY', 'NLS_DATE_LANGUAGE = PORTUGUESE')), ' ', '') AS REFERENCIA,
       'Período informado: ' || TO_CHAR(:DATA_INICIO, 'DD/MM/YYYY') || ' à ' || TO_CHAR(:DATA_FIM, 'DD/MM/YYYY') AS PERIODO
FROM
    DATEMETRICS
ORDER BY
    COD_REGIAO, MONTH_START

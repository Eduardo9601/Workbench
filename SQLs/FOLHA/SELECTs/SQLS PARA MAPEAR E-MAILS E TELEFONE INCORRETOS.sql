--SQLs para mapear e-mails com caracteres não permitidos para e-mail

SELECT COD_PESSOA, APELIDO, EMAIL
FROM FISICA
WHERE EMAIL IS NOT NULL
AND COD_PESSOA IN (123184, 121844, 117953, 126116, 126893, 
122671, 120234, 125373, 19753, 125631, 
104831, 112245, 84658, 55782, 115271, 
110989, 110980, 116322, 120481, 120367, 
110985, 80395, 81532, 61485, 107102, 121897, 
122639, 92938, 126219, 88106, 76408, 44788)
AND NOT REGEXP_LIKE(EMAIL, '^[A-Za-z0-9._%-]+@[A-Za-z0-9.-]+\.[A-Za-z]{2,4}$');


UPDATE FISICA
SET EMAIL = REGEXP_REPLACE(REGEXP_REPLACE(EMAIL, '[^A-Za-z0-9._@%-]', ''), '\s', '')
WHERE EMAIL IS NOT NULL
AND COD_PESSOA IN (123184, 121844, 117953, 126116, 126893, 
122671, 120234, 125373, 19753, 125631, 
104831, 112245, 84658, 55782, 115271, 
110989, 110980, 116322, 120481, 120367, 
110985, 80395, 81532, 61485, 107102, 121897, 
122639, 92938, 126219, 88106, 76408, 44788)


--alternativo

SELECT COD_ROTINA,
       ID_EVENTO,
       COD_EMPRESA,
       COD_CONTRATO,
       NM_TRAB,
       EMAIL_PRINC
  FROM RHES2200
 WHERE COD_ROTINA = 1119
   AND EMAIL_PRINC IS NOT NULL
   AND (NOT
        REGEXP_LIKE(EMAIL_PRINC,
                     '^[A-Za-z0-9._%-]+@[A-Za-z0-9.-]+\.[A-Za-z]{2,4}$') OR
       EMAIL_PRINC NOT LIKE '%@%')





SELECT * FROM V_DADOS_PESSOA
WHERE COD_CONTRATO IN (389848, 391266, 393403, 393015, 393758, 379903, 381678, 
391047, 392976, 393168, 385815, 387939, 388771, 391803, 
391804, 391805, 392234, 393868, 376723, 392410, 392701, 
393219, 393862, 393873, 393333, 385750, 392996, 393299, 
392125, 387154, 386872, 393734)




--upadate que ajusta todos os emails no formato certo


UPDATE FISICA
SET EMAIL =
  CASE
    WHEN EMAIL NOT LIKE '%@%' THEN
      REGEXP_REPLACE(EMAIL, '([A-Za-z0-9._%-]+)\.([A-Za-z0-9.-]+\.[A-Za-z]{2,4}$)', '\1@\2')
    WHEN REGEXP_LIKE(EMAIL, '^[A-Za-z0-9._%-]+@[A-Za-z0-9.-]+\.[A-Za-z]{2,4}$') THEN
      REGEXP_REPLACE(EMAIL, '[^A-Za-z0-9._@%-]', '')
    ELSE
      NULL
  END
WHERE EMAIL IS NOT NULL
AND NOT REGEXP_LIKE(EMAIL, '^[A-Za-z0-9._%-]+@[A-Za-z0-9.-]+\.[A-Za-z]{2,4}$')







--SQLs para mapear e atualizar FONES com caracteres não numericos


SELECT COD_PESSOA, DDD_FONE_CEL, FONE
FROM FISICA
WHERE REGEXP_LIKE(FONE_CEL, '[^0-9]')
AND FONE_CEL IS NOT NULL;

SELECT COD_PESSOA, NOME_PESSOA, DDD_FONE_CEL, FONE_CEL
FROM PESSOA_FISICA
WHERE REGEXP_LIKE(FONE_CEL, '[^0-9]')
AND FONE_CEL IS NOT NULL;


SELECT * FROM PESSOA_FISICA;
SELECT * FROM FISICA;


----

--VERSÃO COMPLETA, ATUALIZA TODOS

UPDATE FISICA
SET FONE_CEL = 
  CASE
    WHEN LENGTH(REGEXP_REPLACE(FONE_CEL, '[^0-9]', '')) = 9 THEN
      '9' || SUBSTR(REGEXP_REPLACE(FONE_CEL, '[^0-9]', ''), 1, 8)
    ELSE
      NULL
  END,
  DDD_FONE_CEL = REGEXP_REPLACE(DDD_FONE_CEL, '[^0-9]', '')
WHERE (REGEXP_LIKE(FONE_CEL, '[^0-9]') AND FONE_CEL IS NOT NULL)
OR (REGEXP_LIKE(DDD_FONE_CEL, '[^0-9]') AND DDD_FONE_CEL IS NOT NULL)


---VERSÃO FILTRADA

UPDATE FISICA
SET FONE_CEL = 
  CASE
    WHEN LENGTH(REGEXP_REPLACE(FONE_CEL, '[^0-9]', '')) = 9 THEN
      '9' || SUBSTR(REGEXP_REPLACE(FONE_CEL, '[^0-9]', ''), 1, 8)
    ELSE
      NULL
  END,
  DDD_FONE_CEL = REGEXP_REPLACE(DDD_FONE_CEL, '[^0-9]', '')
WHERE ((REGEXP_LIKE(FONE_CEL, '[^0-9]') AND FONE_CEL IS NOT NULL)
OR (REGEXP_LIKE(DDD_FONE_CEL, '[^0-9]') AND DDD_FONE_CEL IS NOT NULL))
AND COD_PESSOA = 38103



--versão 2===================


SELECT COD_PESSOA, DDD_FONE_CEL, FONE_CEL, DDD, FONE, FONE_ALTER
FROM FISICA
WHERE (REGEXP_LIKE(FONE_CEL, '[^0-9]') OR REGEXP_LIKE(FONE, '[^0-9]') OR REGEXP_LIKE(FONE_ALTER, '[^0-9]'))
AND ((DDD_FONE_CEL IS NOT NULL AND FONE_CEL IS NULL) OR (DDD IS NOT NULL AND FONE IS NULL));


SELECT COD_PESSOA, NOME_PESSOA, DDD_FONE_CEL, FONE_CEL
FROM PESSOA_FISICA
WHERE REGEXP_LIKE(FONE_CEL, '[^0-9]')
AND DDD_FONE_CEL IS NOT NULL AND FONE_CEL IS NULL;

---

UPDATE FISICA
SET DDD_FONE_CEL = 
  CASE
    WHEN FONE_CEL IS NULL THEN
      NULL
    ELSE
      DDD_FONE_CEL
  END,
  DDD = 
  CASE
    WHEN LENGTH(REGEXP_REPLACE(DDD, '[^0-9]', '')) < 2 THEN
      NULL
    ELSE
      REGEXP_REPLACE(DDD, '[^0-9]', '')
  END,
  FONE = 
  CASE
    WHEN LENGTH(REGEXP_REPLACE(FONE, '[^0-9]', '')) < 8 THEN
      NULL
    ELSE
      REGEXP_REPLACE(FONE, '[^0-9]', '')
  END
WHERE (REGEXP_LIKE(FONE_CEL, '[^0-9]') OR REGEXP_LIKE(FONE, '[^0-9]') OR REGEXP_LIKE(FONE_ALTER, '[^0-9]'))
AND ((DDD_FONE_CEL IS NOT NULL AND FONE_CEL IS NULL) OR (DDD IS NOT NULL AND FONE IS NULL))

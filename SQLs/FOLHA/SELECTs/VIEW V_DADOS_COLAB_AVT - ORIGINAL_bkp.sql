CREATE OR REPLACE VIEW V_DADOS_COLAB_AVT AS
WITH ORGANOGRAMA AS (
       SELECT ORG.*,
             ROW_NUMBER() OVER(PARTITION BY ORG.COD_CONTRATO ORDER BY ORG.DATA_INI_ORG DESC) AS RN
        FROM VH_EST_ORG_CONTRATO_AVT ORG
        --LEFT JOIN V_ORGANOGRAMAS_AVT VO ON ORG.COD_ORGANOGRAMA = VO.COD_ORGANOGRAMA
       /*WHERE SYSDATE BETWEEN ORG.DATA_INICIO AND
             NVL(ORG.DATA_FIM, TO_DATE('31/12/2999', 'DD/MM/YYYY'))*/


),

HORARIOS AS (
SELECT A.COD_CONTRATO,
       A.DATA_INICIO AS DATA_INICIO_HOR,
       A.DATA_FIM AS DATA_FIM_HOR,
       A.COD_TURNO,
       D.NOME_TURNO AS DES_TURNO,
       A.COD_MOTIVO,
       B.NOME_MOTIVO,
       A.TIPO_TURNO,
       DECODE(D.HORARIO_1_ENT,
              NULL,
              NULL,
              LPAD(RHYF0118(RHYF0117(D.HORARIO_1_ENT), 'S'), 5, '0')) AS HOR_1_ENT,
       DECODE(D.HORARIO_1_SAI,
              NULL,
              NULL,
              LPAD(RHYF0118(RHYF0117(D.HORARIO_1_SAI), 'S'), 5, '0')) AS HOR_1_SAI,
       DECODE(D.HORARIO_2_ENT,
              NULL,
              NULL,
              LPAD(RHYF0118(RHYF0117(D.HORARIO_2_ENT), 'S'), 5, '0')) AS HOR_2_ENT,
       DECODE(D.HORARIO_2_SAI,
              NULL,
              NULL,
              LPAD(RHYF0118(RHYF0117(D.HORARIO_2_SAI), 'S'), 5, '0')) AS HOR_2_SAI,
       DECODE(D.HORARIO_3_ENT,
              NULL,
              NULL,
              LPAD(RHYF0118(RHYF0117(D.HORARIO_3_ENT), 'S'), 5, '0')) AS HOR_3_ENT,
       DECODE(D.HORARIO_3_SAI,
              NULL,
              NULL,
              LPAD(RHYF0118(RHYF0117(D.HORARIO_3_SAI), 'S'), 5, '0')) AS HOR_3_SAI,
       DECODE(D.HORARIO_4_ENT,
              NULL,
              NULL,
              LPAD(RHYF0118(RHYF0117(D.HORARIO_4_ENT), 'S'), 5, '0')) AS HOR_4_ENT,
       DECODE(D.HORARIO_4_SAI,
              NULL,
              NULL,
              LPAD(RHYF0118(RHYF0117(D.HORARIO_4_SAI), 'S'), 5, '0')) AS HOR_4_SAI
  FROM RHAF1119 A, RHFP0323 B, RHFP0115 C, RHAF1145 D, RHAF1103 F
 WHERE A.COD_MOTIVO = B.COD_MOTIVO(+)
   AND B.COD_TIPO_MOTIVO = C.COD_TIPO_MOTIVO(+)
   AND A.COD_TURNO = D.COD_TURNO(+)
   AND D.COD_CLASSE_TURNO = F.COD_CLASSE_TURNO(+)
   AND TRUNC(SYSDATE) BETWEEN A.DATA_INICIO AND A.DATA_FIM

),


AFAST AS (
SELECT AFAST.COD_CONTRATO,
       /*AFAST.COD_CAUSA_AFAST,
                   AFAST.NOME_CAUSA_AFAST,
                   AFAST.DATA_INICIO,
                   AFAST.DATA_FIM,*/

       AFAST.COD_CAUSA_AFAST AS COD_AFAST,
       CASE
         WHEN AFAST.COD_CAUSA_AFAST IS NOT NULL THEN
          AFAST.COD_CAUSA_AFAST || ' - ' || AFAST.NOME_CAUSA_AFAST
         ELSE
          NULL
       END AS DES_AFAST,
       AFAST.DATA_INICIO AS DATA_INI_AFAST,
       AFAST.DATA_FIM AS DATA_FIM_AFAST,
       CASE
          WHEN AFAST.COD_CAUSA_AFAST IS NULL OR
               TRIM(TO_CHAR(AFAST.COD_CAUSA_AFAST)) IS NULL THEN
           0
          ELSE
           AFAST.COD_CAUSA_AFAST
        END AS COD_STATUS_AFAST,
       CASE
         WHEN CT.DATA_FIM IS NOT NULL AND CT.DATA_FIM < SYSDATE THEN
          'INATIVO'
         WHEN AFAST.COD_CAUSA_AFAST <> 0 AND AFAST.COD_CAUSA_AFAST <> 4 AND
              AFAST.COD_CAUSA_AFAST <> 21 AND AFAST.COD_CAUSA_AFAST <> 60 AND
              AFAST.DATA_FIM = TO_DATE('31/12/2999', 'DD/MM/YYYY') THEN
          'AFASTADO'
         WHEN AFAST.COD_CAUSA_AFAST IN (21, 60) THEN
          'ATIVO, SEM RETORNO'
         WHEN AFAST.COD_CAUSA_AFAST = 7 THEN
          'EM FÉRIAS'
         WHEN AFAST.COD_CAUSA_AFAST IN (3, 6) THEN
          'AFASTADO TEMP'
         WHEN AFAST.COD_CAUSA_AFAST = 4 AND
              AFAST.DATA_FIM = TO_DATE('31/12/2999', 'DD/MM/YYYY') THEN
          'PODERÁ RETORNAR'
         ELSE
          'EM ATIVIDADE'
       END AS STATUS_AFAST,

       ROW_NUMBER() OVER(PARTITION BY AFAST.COD_CONTRATO ORDER BY AFAST.DATA_INICIO DESC) AS RN
  FROM V_AFAST_COLAB_AVT AFAST
  JOIN RHFP0300 CT ON AFAST.COD_CONTRATO = CT.COD_CONTRATO
--WHERE AFAST.COD_CONTRATO =
),

CARGO_ANT AS (
      SELECT CC.COD_CONTRATO,
             CC.COD_CLH_ANT,
             CC.DES_CLH_ANT,
             CC.DATA_INICIO_ANT,
             CC.DATA_FIM_ANT,
             ROW_NUMBER() OVER(PARTITION BY CC.COD_CONTRATO ORDER BY CC.DATA_INICIO_ANT DESC) AS RN
        FROM V_CARGO_CONTRATO_AVT CC

),

ORGANOGRAMA_ANT AS (
      SELECT CO.COD_CONTRATO,
             CO.EDICAO_ORG_ANT,
             CO.DES_ORGANOGRAMA_ANT,
             CO.DATA_INICIO_ORG_ANT,
             CO.DATA_FIM_ORG_ANT,
             ROW_NUMBER() OVER(PARTITION BY CO.COD_CONTRATO ORDER BY CO.DATA_INICIO_ORG_ANT DESC) AS RN
        FROM V_ORGANOGRAMA_CONTRATO_AVT CO
)


/*SELEÇÃO PRINCIPAL DE TODOS OS DADOS DO CONTRATO*/
SELECT
/*DADOS DO CONTRATO*/
 PF.COD_PESSOA,
 CT.COD_CONTRATO,
 INITCAP(PF.NOME_PESSOA) AS DES_PESSOA,
 INITCAP(REGEXP_SUBSTR(PF.NOME_PESSOA, '^\S+')) AS PRIMEIRO_NOME,
 INITCAP(REGEXP_SUBSTR(PF.NOME_PESSOA, ' (.+) ')) AS NOMES_INTERMEDIARIOS,
 INITCAP(REGEXP_SUBSTR(PF.NOME_PESSOA, '\S+$')) AS ULTIMO_NOME,
 CT.DATA_AVANCO,
 CT.DATA_INICIO AS DATA_ADMISSAO,
 CT.DATA_FIM AS DATA_DEMISSAO,
 CT.COD_CAUSA_DEMISSAO AS COD_DEMISSAO,
 DEM.NOME_CAUSA_DEMISSAO AS DES_DEMISSAO,
 CT.NRO_CONTA_PGTO || '/' || CT.COD_AGE_PGTO AS CONTA_BANCARIA,
 CT.COD_BCO_PGTO AS COD_BANCO,
 P3.NOME_PESSOA AS DES_BANCO,
 CASE
   WHEN CT.DATA_FIM IS NOT NULL AND CT.DATA_FIM < SYSDATE THEN
    1
   ELSE
    0
 END AS STATUS,
 CASE
   WHEN CT.DATA_FIM IS NOT NULL AND CT.DATA_FIM < SYSDATE THEN
    'INATIVO'
   WHEN CT.DATA_INICIO <= SYSDATE /*OR CT.DATA_FIM = SYSDATE AND TO_CHAR(SYSDATE, 'HH24:MI:SS') = '23:59:59'*/ THEN
    'ATIVO'
   WHEN CT.DATA_INICIO > SYSDATE
    /*AND CT.DATA_AVANCO > SYSDATE*/ THEN
    'ADMISSAO FUTURA'
 END AS DESC_STATUS,
 FUNC.COD_CLH AS COD_FUNCAO,
 FUNC.NOME_CLH,
 FUNC.COD_CLH || ' - ' || FUNC.NOME_CLH AS DES_FUNCAO,
 CT_FUNC.DATA_INICIO AS DATA_INICIO_CLH,
 CT_FUNC.DATA_FIM AS DATA_FIM_CLH,
 CT.COD_VINCULO_EMPREG,
 CT.COD_CATEGORIA_TRAB,
 VIC.COD_ESOCIAL,
 CASE
   WHEN CT_TUR.COD_TURNO = 85 THEN
    'N'
   ELSE
    'S'
 END AS IND_BATE_PONTO,
 CT_TUR.COD_TURNO,
 TURNO.NOME_TURNO AS DES_TURNO,
 /*HR.QTD_HORBAS_MES AS HR_BASE_MES,
 HR.QTD_HORBAS_SEM AS HR_BASE_SEM,
 HR.QTD_HORBAS_DIA AS HR_BASE_DIA,*/
 LTRIM(RTRIM(TRIM(TRAILING '.' FROM TRIM(TRAILING '0' FROM TO_CHAR(HR.QTD_HORBAS_MES, '9999999990.99'))))) AS HR_BASE_MES,
 LTRIM(RTRIM(TRIM(TRAILING '.' FROM TRIM(TRAILING '0' FROM TO_CHAR(HR.QTD_HORBAS_SEM, '9999999990.99'))))) AS HR_BASE_SEM,
 LTRIM(RTRIM(TRIM(TRAILING '.' FROM TRIM(TRAILING '0' FROM TO_CHAR(HR.QTD_HORBAS_DIA, '9999999990.99'))))) AS HR_BASE_DIA,
 HR.DATA_INICIO AS DATA_INICIO_HR,
 HR.DATA_FIM AS DATA_FIM_HR,
 HR2.DATA_INICIO_HOR,
 HR2.DATA_FIM_HOR,
 HR2.HOR_1_ENT,
 HR2.HOR_1_SAI,
 HR2.HOR_2_ENT,
 HR2.HOR_2_SAI,
 HR2.HOR_3_ENT,
 HR2.HOR_3_SAI,
 HR2.HOR_4_ENT,
 HR2.HOR_4_SAI,
 SIND.COD_SINDICATO,
 SIND.DES_SINDICATO,
 SIND.IND_CONT_SINDICAL,
 SIND.DATA_INICIO AS DATA_INI_SIND,
 SIND.DATA_FIM AS DATA_FIM_SIND,

 --GESTOR_IMEDIATO(ORG.COD_ORGANOGRAMA, CT.COD_CONTRATO) AS CPF_GESTOR,

 /*DADOS DO ORGANOGRAMA DO CONTRATO*/
 ORG.COD_ORGANOGRAMA,
 ORG.COD_UNIDADE,
 ORG.DES_UNIDADE,
 ORG.DATA_INI_ORG,
 ORG.DATA_FIM_ORG,
 RESP.IND_RESP_UNI AS IND_RESP_UNI,
 ORG.COD_REDE AS COD_REDE_LOCAL,
 ORG.DES_REDE AS DES_REDE_LOCAL,
 ORG.COD_UF AS COD_UF_ORG,
 --ORG.COD_REGIAO,
 --ORG.DES_REGIAO,
 ORG.COD_ORG_1 AS COD_GRUPO_EMP,
 ORG.EDICAO_ORG_1 AS EDICAO_GRUPO_EMP,
 ORG.NOME1 AS DES_GRUPO_EMP,
 ORG.COD_ORG_2 AS COD_EMP,
 ORG.EDICAO_ORG_2 AS EDICAO_EMP,
 ORG.NOME2 AS DES_EMPRESA,
 ORG.COD_ORG_3 AS COD_ORG_FILIAL,
 ORG.EDICAO_ORG_3 AS EDICAO_FILIAL,
 ORG.NOME3 AS DES_FILIAL,
 ORG.COD_ORG_4 AS COD_ORG_DIVISAO,
 ORG.EDICAO_ORG_4 AS EDICAO_DIVISAO,
 ORG.NOME4 AS DES_DIVISAO,
 ORG.COD_ORG_5 AS COD_ORG_DEPART,
 ORG.EDICAO_ORG_5 AS EDICAO_DEPART,
 ORG.NOME5 AS DES_DEPART,
 ORG.COD_ORG_6 AS COD_ORG_SETOR,
 ORG.EDICAO_ORG_6 AS EDICAO_SETOR,
 ORG.NOME6 AS DES_SETOR,
 ORG.COD_ORG_7 AS COD_ORG_SECAO,
 ORG.EDICAO_ORG_7 AS EDICAO_SECAO,
 ORG.NOME7 AS DES_SECAO,
 ORG.COD_ORG_8 AS COD_ORG_UNI,
 ORG.EDICAO_ORG_8 AS EDICAO_UNI,
 ORG.NOME8 AS DES_UNI,
 ORG.COD_TIPO,
 ORG.DES_TIPO,

 /*DADOS DO QUADRO DE LOTAÇÃO DO CONTRATO*/
 CASE
   WHEN LOT_CONT.COD_LOTACAO IS NOT NULL THEN
    LOT_CONT.COD_LOTACAO
   ELSE
    NULL
 END AS COD_LOTACAO,
 CASE
   WHEN LOT_CONT.COD_LOTACAO IS NOT NULL THEN
    LOT.NOME_LOTACAO
   ELSE
    NULL
 END AS DES_LOTACAO,
 CASE
   WHEN LOT_CONT.COD_LOTACAO IS NOT NULL THEN
    LOT.EDICAO_QL
   ELSE
    NULL
 END AS UNI_LOTACAO,
 CASE
   WHEN LOT_CONT.COD_LOTACAO IS NOT NULL THEN
    LOT_CONT.DATA_INICIO
   ELSE
    NULL
 END AS DTA_INICIO_LOT,
 CASE
   WHEN LOT_CONT.COD_LOTACAO IS NOT NULL THEN
    LOT_CONT.DATA_FIM
   ELSE
    NULL
 END AS DTA_FIM_LOT,

 /*DADOS PESSOAIS DO CONTRATO*/
 FP02.DATA_NASCIMENTO,
 TRUNC(MONTHS_BETWEEN(SYSDATE, FP02.DATA_NASCIMENTO) / 12) AS IDADE,
 FP02.SEXO,
 FP02.COD_ESTADO_CIVIL AS COD_EST_CIVIL,
 EC.NOME_ESTADO_CIVIL AS DES_EST_CIVIL,
 FP02.COD_PESSOA_PAI,
 P1.NOME_PESSOA AS DES_PAI,
 FP02.COD_PESSOA_MAE,
 P2.NOME_PESSOA AS DES_MAE,
 FP02.IND_DEFICIENCIA,
 FP02.COD_DEFICIENCIA,
 DEF.NOME_DEFICIENCIA AS DES_DEFICIENCIA,
 PF.EMAIL AS DES_EMAIL,
 PF.DDD_FONE_CEL AS COD_DDD,
 PF.FONE_CEL,
 PF.CPF,
 FP02.NRO_IDENTIDADE,
 PJ.NOME_PESSOA || '/' || FP02.COD_UF_IDENTIDADE AS EMISSOR,
 FP02.NRO_PIS_PASEP,
 FP02.NRO_CTPS || '/' || FP02.NRO_SERIE_CTPS AS CTPS,
 FP02.DATA_EXP_CTPS,
 FP02.COD_GRAU_INSTRUCAO AS COD_INSTRUCAO,
 GRAU.NOME_RESUMIDO AS DES_INSTRUCAO,
 FP02.COD_NACIONALIDADE,
 NAC.NOME_NACIONALIDADE || '(a)' AS NACIONALIDADE,
 FP02.COD_NACIONALIDADE || ' - ' || NAC.NOME_NACIONALIDADE || '(a)' AS DES_NACIONALIDADE,
 FP02.COD_RACA_COR,
 RACA.NOME_RACA_COR AS DES_RACA_COR,
 PF.CEP AS COD_CEP,
 PF.TIPO_LOGRA,
 PF.COD_LOGRA,
 PF.NOME_LOGRA AS DES_LOGRA,
 PF.NUMERO,
 PF.COD_BAIRRO,
 PF.NOME_BAIRRO AS DES_BAIRRO,
 PF.COD_MUNIC AS COD_CIDADE,
 PF.NOME_MUNIC AS DES_CIDADE,
 PF.COD_UF,

 /*DADOS DE AFASTAMENTOS DO CONTRATO*/
 AFAST.COD_AFAST,
 AFAST.DES_AFAST,
 AFAST.DATA_INI_AFAST,
 AFAST.DATA_FIM_AFAST,
 AFAST.COD_STATUS_AFAST,
 CASE
     WHEN AFAST.STATUS_AFAST IS NULL THEN
      'EM ATIVIDADE'
     ELSE
      AFAST.STATUS_AFAST
 END AS STATUS_AFAST,
 FER.DATA_PREVISTA_FERIAS,
 FER.DATA_FERIAS,
 FER.DATA_RETORNO,

 /*DADOS DE CARGO E ORGANOGRAMAS ANTERIORES DO CONTRATO - O ÚLTIMO ANTES DO ATUAL*/
 'DADOS ANTERIORES DO CONTRATO =>' AS ESPACO,
 --CARGO ANT
 CC.COD_CLH_ANT AS COD_FUNCAO_ANT,
 CC.DES_CLH_ANT AS DES_FUNCAO_ANT,
 CC.DATA_INICIO_ANT,
 CC.DATA_FIM_ANT,

 --ORG ANT
 CO.EDICAO_ORG_ANT AS COD_UNIDADE_ANT,
 CO.DES_ORGANOGRAMA_ANT AS DES_UNIDADE_ANT,
 CO.DATA_INICIO_ORG_ANT,
 CO.DATA_FIM_ORG_ANT

  FROM RHFP0300 CT
 INNER JOIN RHFP0200 FP02 ON CT.COD_FUNC = FP02.COD_FUNC
  LEFT JOIN BANCO BC ON CT.COD_BCO_PGTO = BC.COD_BANCO
  LEFT JOIN RHFP0130 RACA ON FP02.COD_RACA_COR = RACA.COD_RACA_COR
  LEFT JOIN RHFP0128 VIC ON CT.COD_CATEGORIA_TRAB = VIC.COD_CATEGORIA_TRAB
  LEFT JOIN PESSOA_JURIDICA PJ ON FP02.COD_ORG_IDENTIDADE = PJ.COD_PESSOA
  LEFT JOIN RHFP0104 EC ON FP02.COD_ESTADO_CIVIL = EC.COD_ESTADO_CIVIL
  LEFT JOIN RHFP0107 NAC ON FP02.COD_NACIONALIDADE = NAC.COD_NACIONALIDADE
  LEFT JOIN RHFP0132 DEF ON FP02.COD_DEFICIENCIA = DEF.COD_DEFICIENCIA
  LEFT JOIN RHFP0105 GRAU ON FP02.COD_GRAU_INSTRUCAO = GRAU.COD_GRAU_INSTRUCAO
 INNER JOIN PESSOA_FISICA PF ON CT.COD_FUNC = PF.COD_PESSOA
  LEFT JOIN RHFP0340 CT_FUNC ON CT.COD_CONTRATO = CT_FUNC.COD_CONTRATO
                           AND (SYSDATE BETWEEN CT_FUNC.DATA_INICIO
                                AND NVL(CT_FUNC.DATA_FIM, TO_DATE('31/12/2999', 'DD/MM/YYYY'))
                                 OR CT_FUNC.DATA_INICIO > SYSDATE)
  LEFT JOIN RHFP0500 FUNC ON CT_FUNC.COD_CLH = FUNC.COD_CLH
  LEFT JOIN VH_PROGRAMACAO_FERIAS_AVT FER ON CT.COD_CONTRATO =
                                            FER.COD_CONTRATO
                                        AND FER.IND_FERIAS = 0
  LEFT JOIN PESSOA P1 ON FP02.COD_PESSOA_PAI = P1.COD_PESSOA
  LEFT JOIN PESSOA P2 ON FP02.COD_PESSOA_MAE = P2.COD_PESSOA
  LEFT JOIN PESSOA P3 ON BC.COD_PESSOA = P3.COD_PESSOA
-- DADOS DO ORGANOGRAMA DO CONTRATO
 INNER JOIN ORGANOGRAMA ORG ON CT.COD_CONTRATO = ORG.COD_CONTRATO
                               AND ORG.RN = 1
  LEFT JOIN V_SUPERIOR_IMEDIATO_AVT RESP ON CT.COD_CONTRATO =
                                            RESP.COD_CONTRATO
  LEFT JOIN AFAST AFAST ON CT.COD_CONTRATO = AFAST.COD_CONTRATO
                           AND AFAST.RN = 1
  LEFT JOIN RHFP0102 DEM ON CT.COD_CAUSA_DEMISSAO = DEM.COD_CAUSA_DEMISSAO

-- DADOS ANTERIORES DO CONTRATO
  LEFT JOIN CARGO_ANT CC ON CT.COD_CONTRATO = CC.COD_CONTRATO
                                 AND CC.RN = 1
  LEFT JOIN ORGANOGRAMA_ANT CO ON CT.COD_CONTRATO =
                                           CO.COD_CONTRATO
                                       AND CO.RN = 1

-- DADOS DO TURNO E HORÁRIOS DO CONTRATO
  LEFT JOIN RHAF1119 CT_TUR ON CT.COD_CONTRATO = CT_TUR.COD_CONTRATO
                           AND SYSDATE BETWEEN CT_TUR.DATA_INICIO AND
                               CT_TUR.DATA_FIM
  LEFT JOIN RHAF1145 TURNO ON CT_TUR.COD_TURNO = TURNO.COD_TURNO
  LEFT JOIN V_HORAS_COLAB_AVT HR ON CT.COD_CONTRATO = HR.COD_CONTRATO
  LEFT JOIN HORARIOS HR2 ON CT.COD_CONTRATO = HR2.COD_CONTRATO
  LEFT JOIN RHFP0309 LOT_CONT ON CT.COD_CONTRATO = LOT_CONT.COD_CONTRATO
                             /*AND SYSDATE BETWEEN LOT_CONT.DATA_INICIO AND
                                 NVL(LOT_CONT.DATA_FIM,
                                     TO_DATE('31/12/2999', 'DD/MM/YYYY'))*/
  LEFT JOIN RHFP0509 LOT ON LOT_CONT.COD_LOTACAO = LOT.COD_LOTACAO
  LEFT JOIN V_SINDICATOS_CONTRATOS_AVT SIND ON CT.COD_CONTRATO =
                                               SIND.COD_CONTRATO

 /*WHERE

        CT.DATA_INICIO > SYSDATE -- Permite futuras admissões
        OR CT.DATA_FIM IS NULL
        OR CT.DATA_FIM = SYSDATE -- Permite contratos ainda em vigor
        OR CT.DATA_FIM >= SYSDATE - 1850 -- Mantém a lógica existente
         \*+ (1 - (1 / 86400))
           AND TO_CHAR(SYSDATE, 'HH24:MI:SS') > '23:59:59'*\*/



WHERE (
    (
        CT.DATA_FIM IS NULL
        OR SYSDATE BETWEEN CT.DATA_INICIO AND NVL(CT.DATA_FIM, TO_DATE('31/12/2999', 'DD/MM/YYYY'))
    )
    OR
    (
        -- Mantém contratos ativos se a data de demissão for hoje, mas antes das 23:59:59
        CT.DATA_FIM = TRUNC(SYSDATE)
        AND CT.DATA_FIM < TRUNC(SYSDATE) + 1

    )
    OR
    (
        -- Mantém contratos ativos se a data de demissão for no futuro
        CT.DATA_FIM > TRUNC(SYSDATE)
    )
    OR
    (
        -- Mantém contratos ativos por 1850 dias após a demissão (caso necessário)
        CT.DATA_FIM >= SYSDATE - 1250
    )
)

 --AND CT.COD_CONTRATO = 389622
 ORDER BY STATUS ASC, DATA_ADMISSAO, DESC_STATUS DESC

